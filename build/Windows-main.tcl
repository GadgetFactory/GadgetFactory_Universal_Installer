# options: -translation lf -encoding utf-8

## $Id$
##
## BEGIN LICENSE BLOCK
##
## Copyright (C) 2002  Damon Courtney
## 
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License
## version 2 as published by the Free Software Foundation.
## 
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License version 2 for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the
##     Free Software Foundation, Inc.
##     51 Franklin Street, Fifth Floor
##     Boston, MA  02110-1301, USA.
##
## END LICENSE BLOCK

if {[info exists ::InstallJammer]} { return }

namespace eval ::InstallAPI {}
namespace eval ::InstallJammer {}

set ::debug   0
set ::verbose 0

set ::conf(osx)       [string equal $::tcl_platform(os) "Darwin"]
set ::conf(unix)      [string equal $::tcl_platform(platform) "unix"]
set ::conf(windows)   [string equal $::tcl_platform(platform) "windows"]
set ::conf(windows98) [expr {$conf(windows) && $tcl_platform(osVersion) < 5.0}]
set ::conf(vista)     [expr {$conf(windows) && $tcl_platform(osVersion) >= 6.0}]
set ::conf(wine)      [expr {$conf(windows) && [info exists env(_)]
                         && [file tail $env(_)] eq "wine"}]

set ::info(Testing)   0
set ::info(Debugging) 0

## Trace the virtual text array for changes and execute any
## attached commands or auto-update actions.
trace add variable ::info write ::InstallJammer::VirtualTextTrace

proc ::InstallJammer::VirtualTextTrace { name1 name2 op } {
    upvar #0 ::info($name2) var

    if {[info exists ::InstallJammer::UpdateVarCmds($name2)]} {
        foreach cmd $::InstallJammer::UpdateVarCmds($name2) {
            uplevel #0 $cmd
        }
    }

    if {[info exists ::InstallJammer::AutoUpdateVars($name2)]
        && $var ne $::InstallJammer::AutoUpdateVars($name2)} {
        set ::InstallJammer::AutoUpdateVars($name2) $var
        ::InstallJammer::UpdateWidgets -updateidletasks 1
    }
}

proc ::InstallJammer::SourceCachedFile { file {namespace "::"} } {
    if {[info exists ::InstallJammer::files($file)]} {
        namespace eval $namespace $::InstallJammer::files($file)
        return 1
    }
    return 0
}

namespace eval ::InstallAPI {}
namespace eval ::InstallJammer {}
set conf(version)     1.2.15
set info(Platform)    Windows
set info(InstallerID) A614BD3A-221D-4250-A2F2-A1D2F254DFE4
array set ::InstallJammer::languagecodes {ca Catal√É cs Czech de German en English es Spanish fr French hu Magyar it Italian lt Lithuanian nl Nederlands pl Polish pt_br {Brazilian Portuguese} ru Russian}
array set info {
AllowLanguageSelection
{Yes}

AppName
{Gadget Factory Universal Installer}

ApplicationID
{29E2E8D1-4C45-494C-9276-30D17E0AF39F}

ApplicationURL
{}

BuildVersion
{0}

CancelledInstallAction
{Rollback and Stop}

CleanupCancelledInstall
{Yes}

Company
{Gadget Factory}

CompressionMethod
{zlib}

Copyright
{}

DefaultLanguage
{English}

DefaultToSystemLanguage
{Yes}

EnableResponseFiles
{Yes}

ExtractSolidArchivesOnStartup
{No}

Icon
{Modern/Small/SetupModernSmall01.gif}

Image
{Modern/SetupModern01.gif}

IncludeDebugging
{0}

InstallDir
{<%PROGRAM_FILES%>/Gadget Factory}

InstallMode
{Standard}

InstallType
{Typical}

InstallVersion
{1.0.0.0}

MajorVersion
{1}

MinorVersion
{0}

PackageDescription
{}

PackageLicense
{}

PackageMaintainer
{}

PackageName
{<%ShortAppName%>}

PackagePackager
{}

PackageRelease
{<%PatchVersion%>}

PackageSummary
{}

PackageVersion
{<%MajorVersion%>.<%MinorVersion%>}

PatchVersion
{0}

ProgramExecutable
{}

ProgramFolderAllUsers
{No}

ProgramFolderName
{Gadget Factory}

ProgramLicense
{<%InstallDir%>/LICENSE.txt}

ProgramName
{}

ProgramReadme
{<%InstallDir%>/README.txt}

RequireAdministrator
{Yes}

ShortAppName
{Gadget-Factory-Installer}

UpgradeApplicationID
{}

Version
{1.0}

WizardHeight
{365}

WizardWidth
{500}

}
array set ::InstallJammer::CommandLineOptions {
mode
{InstallMode Choice No No {Console Default Silent Standard} {set the mode to run the installer in}}

prefix
{InstallDir String No No {} {set the installation directory}}

}
array set ::InstallJammer::Properties {
02A99806-1AF0-43AD-8D67-175545735DB7,Active
{Yes}

02A99806-1AF0-43AD-8D67-175545735DB7,Alias
{papilio-loader}

02A99806-1AF0-43AD-8D67-175545735DB7,Checked
{Yes}

02A99806-1AF0-43AD-8D67-175545735DB7,ComponentGroup
{}

02A99806-1AF0-43AD-8D67-175545735DB7,Description,subst
{1}

02A99806-1AF0-43AD-8D67-175545735DB7,DisplayName,subst
{1}

02A99806-1AF0-43AD-8D67-175545735DB7,FileGroups
{D14F20BD-593E-4286-B63B-B60266A64F57}

02A99806-1AF0-43AD-8D67-175545735DB7,ID
{}

02A99806-1AF0-43AD-8D67-175545735DB7,Name
{Papilio Loader}

02A99806-1AF0-43AD-8D67-175545735DB7,RequiredComponent
{No}

02A99806-1AF0-43AD-8D67-175545735DB7,Selectable
{Yes}

02A99806-1AF0-43AD-8D67-175545735DB7,ShowComponent
{Yes}

02A99806-1AF0-43AD-8D67-175545735DB7,Size
{}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,Active
{Yes}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,BackButton,subst
{1}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,Buttons
{Next/Cancel}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,CancelButton,subst
{1}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,Caption,subst
{1}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,Component
{}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,Conditions
{}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,ID
{}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,Image
{<%Image%>}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,Include
{0}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,Message,subst
{1}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,NextButton,subst
{1}

06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,WizardOptions
{-bg #FFFFFF -separator 0}

0717F010-C12A-475F-B41B-DB8CD62B18BB,Action
{Install Actions}

0717F010-C12A-475F-B41B-DB8CD62B18BB,Active
{Yes}

0717F010-C12A-475F-B41B-DB8CD62B18BB,Component
{}

0717F010-C12A-475F-B41B-DB8CD62B18BB,Conditions
{}

0717F010-C12A-475F-B41B-DB8CD62B18BB,EvaluateConditions
{Yes}

0717F010-C12A-475F-B41B-DB8CD62B18BB,ExecuteAction
{1}

0717F010-C12A-475F-B41B-DB8CD62B18BB,ID
{}

0717F010-C12A-475F-B41B-DB8CD62B18BB,IgnoreErrors
{No}

0717F010-C12A-475F-B41B-DB8CD62B18BB,Include
{0}

087C7390-E16C-4766-A462-FB0A7008F106,Action
{Install Actions}

087C7390-E16C-4766-A462-FB0A7008F106,Active
{Yes}

087C7390-E16C-4766-A462-FB0A7008F106,Component
{}

087C7390-E16C-4766-A462-FB0A7008F106,Conditions
{}

087C7390-E16C-4766-A462-FB0A7008F106,EvaluateConditions
{Yes}

087C7390-E16C-4766-A462-FB0A7008F106,ExecuteAction
{1}

087C7390-E16C-4766-A462-FB0A7008F106,ID
{}

087C7390-E16C-4766-A462-FB0A7008F106,IgnoreErrors
{No}

087C7390-E16C-4766-A462-FB0A7008F106,Include
{0}

09BF6BC9-4178-4305-BEA8-6CC90C6ECB68,Active
{Yes}

09BF6BC9-4178-4305-BEA8-6CC90C6ECB68,CheckCondition
{6}

09BF6BC9-4178-4305-BEA8-6CC90C6ECB68,Component
{}

09BF6BC9-4178-4305-BEA8-6CC90C6ECB68,FailureFocus
{}

09BF6BC9-4178-4305-BEA8-6CC90C6ECB68,FailureMessage
{}

09BF6BC9-4178-4305-BEA8-6CC90C6ECB68,ID
{}

09BF6BC9-4178-4305-BEA8-6CC90C6ECB68,Include
{0}

09BF6BC9-4178-4305-BEA8-6CC90C6ECB68,Operator
{false}

09BF6BC9-4178-4305-BEA8-6CC90C6ECB68,String
{<%UpgradeInstall%>}

0C00B011-E6E6-45F0-988A-0E4F3A7CFAEA,Active
{Yes}

0C00B011-E6E6-45F0-988A-0E4F3A7CFAEA,Alias
{Setup Actions}

0C00B011-E6E6-45F0-988A-0E4F3A7CFAEA,Conditions
{}

0C00B011-E6E6-45F0-988A-0E4F3A7CFAEA,ID
{}

0DC6D281-6A64-4464-8A8E-64917B16A4F2,Active
{Yes}

0DC6D281-6A64-4464-8A8E-64917B16A4F2,CheckCondition
{6}

0DC6D281-6A64-4464-8A8E-64917B16A4F2,Component
{}

0DC6D281-6A64-4464-8A8E-64917B16A4F2,FailureFocus
{}

0DC6D281-6A64-4464-8A8E-64917B16A4F2,FailureMessage
{}

0DC6D281-6A64-4464-8A8E-64917B16A4F2,ID
{}

0DC6D281-6A64-4464-8A8E-64917B16A4F2,Include
{0}

0DC6D281-6A64-4464-8A8E-64917B16A4F2,Operator
{false}

0DC6D281-6A64-4464-8A8E-64917B16A4F2,String
{<%UpgradeInstall%>}

0E03E517-47F4-49AB-AE47-14679C43176F,Active
{Yes}

0E03E517-47F4-49AB-AE47-14679C43176F,Attributes
{}

0E03E517-47F4-49AB-AE47-14679C43176F,CompressionMethod
{}

0E03E517-47F4-49AB-AE47-14679C43176F,Destination
{<%InstallDir%>}

0E03E517-47F4-49AB-AE47-14679C43176F,DisplayName
{}

0E03E517-47F4-49AB-AE47-14679C43176F,FileSize
{5305687}

0E03E517-47F4-49AB-AE47-14679C43176F,FileUpdateMethod
{0}

0E03E517-47F4-49AB-AE47-14679C43176F,FollowDirLinks
{Yes}

0E03E517-47F4-49AB-AE47-14679C43176F,FollowFileLinks
{No}

0E03E517-47F4-49AB-AE47-14679C43176F,ID
{}

0E03E517-47F4-49AB-AE47-14679C43176F,Name
{Drivers}

0E03E517-47F4-49AB-AE47-14679C43176F,Permissions
{}

0E03E517-47F4-49AB-AE47-14679C43176F,SaveFiles
{}

0E03E517-47F4-49AB-AE47-14679C43176F,Size
{}

0E03E517-47F4-49AB-AE47-14679C43176F,Version
{}

0F4524B3-E59B-4C77-99DC-CD2C8328E9B5,Active
{Yes}

0F4524B3-E59B-4C77-99DC-CD2C8328E9B5,CheckCondition
{3}

0F4524B3-E59B-4C77-99DC-CD2C8328E9B5,Component
{}

0F4524B3-E59B-4C77-99DC-CD2C8328E9B5,FailureFocus
{}

0F4524B3-E59B-4C77-99DC-CD2C8328E9B5,FailureMessage
{}

0F4524B3-E59B-4C77-99DC-CD2C8328E9B5,ID
{}

0F4524B3-E59B-4C77-99DC-CD2C8328E9B5,Include
{0}

0F4524B3-E59B-4C77-99DC-CD2C8328E9B5,Operator
{false}

0F4524B3-E59B-4C77-99DC-CD2C8328E9B5,String
{<%UpgradeInstall%>}

13265F60-3204-4CB5-BFA0-02B87391452B,Active
{Yes}

13265F60-3204-4CB5-BFA0-02B87391452B,AdditionalArguments
{}

13265F60-3204-4CB5-BFA0-02B87391452B,Alias
{Arcade Blaster Program Shortcut}

13265F60-3204-4CB5-BFA0-02B87391452B,CommandLineArguments
{}

13265F60-3204-4CB5-BFA0-02B87391452B,Component
{}

13265F60-3204-4CB5-BFA0-02B87391452B,Conditions
{1 condition}

13265F60-3204-4CB5-BFA0-02B87391452B,Description
{}

13265F60-3204-4CB5-BFA0-02B87391452B,ExecuteAction
{1}

13265F60-3204-4CB5-BFA0-02B87391452B,FileName
{<%ShortAppName%>-program}

13265F60-3204-4CB5-BFA0-02B87391452B,ID
{}

13265F60-3204-4CB5-BFA0-02B87391452B,IconPath
{<%InstallDir%>/Papilio Loader/logo.ico}

13265F60-3204-4CB5-BFA0-02B87391452B,IconPathIndex
{0}

13265F60-3204-4CB5-BFA0-02B87391452B,IgnoreErrors
{No}

13265F60-3204-4CB5-BFA0-02B87391452B,Include
{0}

13265F60-3204-4CB5-BFA0-02B87391452B,InstallForAllUsers
{}

13265F60-3204-4CB5-BFA0-02B87391452B,ProgramFolderName
{<%ProgramFolderName%>}

13265F60-3204-4CB5-BFA0-02B87391452B,ShortcutName
{Arcade Blaster}

13265F60-3204-4CB5-BFA0-02B87391452B,ShortcutType
{Application}

13265F60-3204-4CB5-BFA0-02B87391452B,TargetFileName
{<%InstallDir%>/Arcade-Blaster/arcade-blaster.exe}

13265F60-3204-4CB5-BFA0-02B87391452B,VendorID
{<%ApplicationID%>}

13265F60-3204-4CB5-BFA0-02B87391452B,WindowState
{normal}

13265F60-3204-4CB5-BFA0-02B87391452B,WorkingDirectory
{<%InstallDir%>/Arcade-Blaster}

1C73E020-B9DB-4195-A0AF-666D2AA81FCA,Active
{Yes}

1C73E020-B9DB-4195-A0AF-666D2AA81FCA,CheckCondition
{6}

1C73E020-B9DB-4195-A0AF-666D2AA81FCA,Component
{}

1C73E020-B9DB-4195-A0AF-666D2AA81FCA,FailureFocus
{}

1C73E020-B9DB-4195-A0AF-666D2AA81FCA,FailureMessage
{}

1C73E020-B9DB-4195-A0AF-666D2AA81FCA,Filename
{<%ProgramExecutable%>}

1C73E020-B9DB-4195-A0AF-666D2AA81FCA,ID
{}

1C73E020-B9DB-4195-A0AF-666D2AA81FCA,Include
{0}

1C73E020-B9DB-4195-A0AF-666D2AA81FCA,Operator
{exists}

23947914-B7E4-4988-BF20-F0835F76BEE6,Active
{Yes}

23947914-B7E4-4988-BF20-F0835F76BEE6,CheckCondition
{6}

23947914-B7E4-4988-BF20-F0835F76BEE6,Component
{}

23947914-B7E4-4988-BF20-F0835F76BEE6,FailureFocus
{}

23947914-B7E4-4988-BF20-F0835F76BEE6,FailureMessage
{}

23947914-B7E4-4988-BF20-F0835F76BEE6,ID
{}

23947914-B7E4-4988-BF20-F0835F76BEE6,Include
{0}

23947914-B7E4-4988-BF20-F0835F76BEE6,ObjectID
{02A99806-1AF0-43AD-8D67-175545735DB7}

23947914-B7E4-4988-BF20-F0835F76BEE6,Operator
{is active}

296FCB13-8245-4613-B076-E71607C30531,Active
{Yes}

296FCB13-8245-4613-B076-E71607C30531,CheckCondition
{6}

296FCB13-8245-4613-B076-E71607C30531,Component
{}

296FCB13-8245-4613-B076-E71607C30531,FailureFocus
{}

296FCB13-8245-4613-B076-E71607C30531,FailureMessage
{}

296FCB13-8245-4613-B076-E71607C30531,ID
{}

296FCB13-8245-4613-B076-E71607C30531,Include
{0}

296FCB13-8245-4613-B076-E71607C30531,Operator
{true}

296FCB13-8245-4613-B076-E71607C30531,String
{<%GuiMode%>}

2995F1E8-9123-4C17-A819-5536E6E83ABD,Active
{Yes}

2995F1E8-9123-4C17-A819-5536E6E83ABD,Component
{}

2995F1E8-9123-4C17-A819-5536E6E83ABD,Conditions
{1 condition}

2995F1E8-9123-4C17-A819-5536E6E83ABD,ExecuteAction
{1}

2995F1E8-9123-4C17-A819-5536E6E83ABD,ID
{}

2995F1E8-9123-4C17-A819-5536E6E83ABD,IgnoreErrors
{No}

2995F1E8-9123-4C17-A819-5536E6E83ABD,Include
{0}

2995F1E8-9123-4C17-A819-5536E6E83ABD,Message
{<%BuildUninstallText%>}

2995F1E8-9123-4C17-A819-5536E6E83ABD,UninstallDirectory
{<%InstallDir%>}

2995F1E8-9123-4C17-A819-5536E6E83ABD,UninstallFilename
{uninstall<%Ext%>}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,Active
{Yes}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,BackButton,subst
{1}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,Buttons
{Back/Next/Cancel}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,CancelButton,subst
{1}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,Caption,subst
{1}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,Component
{}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,Conditions
{2 conditions}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,DescriptionLabel,subst
{0}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,ID
{}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,Icon
{<%Icon%>}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,Include
{0}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,Message,subst
{1}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,NextButton,subst
{1}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,Subtitle,subst
{1}

2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,Title,subst
{1}

33087EB2-7CAB-46FF-9833-E44D5AE9CBC1,Active
{Yes}

33087EB2-7CAB-46FF-9833-E44D5AE9CBC1,CheckCondition
{6}

33087EB2-7CAB-46FF-9833-E44D5AE9CBC1,Component
{}

33087EB2-7CAB-46FF-9833-E44D5AE9CBC1,FailureFocus
{}

33087EB2-7CAB-46FF-9833-E44D5AE9CBC1,FailureMessage
{}

33087EB2-7CAB-46FF-9833-E44D5AE9CBC1,ID
{}

33087EB2-7CAB-46FF-9833-E44D5AE9CBC1,Include
{0}

33087EB2-7CAB-46FF-9833-E44D5AE9CBC1,Operator
{true}

33087EB2-7CAB-46FF-9833-E44D5AE9CBC1,String
{<%GuiMode%>}

33EE7DE6-731A-469A-886F-7787B3FD0737,Active
{Yes}

33EE7DE6-731A-469A-886F-7787B3FD0737,Component
{}

33EE7DE6-731A-469A-886F-7787B3FD0737,Conditions
{}

33EE7DE6-731A-469A-886F-7787B3FD0737,ExecuteAction
{1}

33EE7DE6-731A-469A-886F-7787B3FD0737,ExitCode
{}

33EE7DE6-731A-469A-886F-7787B3FD0737,ExitType
{Cancel}

33EE7DE6-731A-469A-886F-7787B3FD0737,ID
{}

33EE7DE6-731A-469A-886F-7787B3FD0737,IgnoreErrors
{No}

33EE7DE6-731A-469A-886F-7787B3FD0737,Include
{0}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,Active
{Yes}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,BackButton,subst
{1}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,Buttons
{Next/Cancel}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,CancelButton,subst
{1}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,Caption,subst
{1}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,Component
{}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,Conditions
{0 conditions}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,ID
{}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,Image
{<%Image%>}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,Include
{0}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,Message,subst
{1}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,NextButton,subst
{1}

33F3321F-92D8-45A6-934E-5F3D1E4387A4,WizardOptions
{-bg #FFFFFF -separator 0}

36B65108-42A9-48CB-8A06-1DD2FB8CF4E5,Active
{Yes}

36B65108-42A9-48CB-8A06-1DD2FB8CF4E5,CheckCondition
{6}

36B65108-42A9-48CB-8A06-1DD2FB8CF4E5,Component
{}

36B65108-42A9-48CB-8A06-1DD2FB8CF4E5,FailureFocus
{}

36B65108-42A9-48CB-8A06-1DD2FB8CF4E5,FailureMessage
{}

36B65108-42A9-48CB-8A06-1DD2FB8CF4E5,ID
{}

36B65108-42A9-48CB-8A06-1DD2FB8CF4E5,Include
{0}

36B65108-42A9-48CB-8A06-1DD2FB8CF4E5,ObjectID
{papilio-loader}

36B65108-42A9-48CB-8A06-1DD2FB8CF4E5,Operator
{is active}

37296288-67D4-4EC5-AD14-4AD87531451A,Active
{Yes}

37296288-67D4-4EC5-AD14-4AD87531451A,Comments
{}

37296288-67D4-4EC5-AD14-4AD87531451A,Component
{}

37296288-67D4-4EC5-AD14-4AD87531451A,Conditions
{1 condition}

37296288-67D4-4EC5-AD14-4AD87531451A,Contact
{}

37296288-67D4-4EC5-AD14-4AD87531451A,DisplayIcon
{<%ProgramExecutable%>}

37296288-67D4-4EC5-AD14-4AD87531451A,DisplayName
{<%AppName%>}

37296288-67D4-4EC5-AD14-4AD87531451A,DisplayVersion
{<%Version%>}

37296288-67D4-4EC5-AD14-4AD87531451A,ExecuteAction
{1}

37296288-67D4-4EC5-AD14-4AD87531451A,HelpLink
{}

37296288-67D4-4EC5-AD14-4AD87531451A,HelpTelephone
{}

37296288-67D4-4EC5-AD14-4AD87531451A,ID
{}

37296288-67D4-4EC5-AD14-4AD87531451A,IgnoreErrors
{No}

37296288-67D4-4EC5-AD14-4AD87531451A,Include
{0}

37296288-67D4-4EC5-AD14-4AD87531451A,InstallDate
{<%Date %Y%m%d%>}

37296288-67D4-4EC5-AD14-4AD87531451A,InstallLocation
{<%InstallDir%>}

37296288-67D4-4EC5-AD14-4AD87531451A,InstallSource
{<%InstallSource%>}

37296288-67D4-4EC5-AD14-4AD87531451A,Publisher
{<%Company%>}

37296288-67D4-4EC5-AD14-4AD87531451A,QuietUninstallString
{<%Uninstaller%> -S}

37296288-67D4-4EC5-AD14-4AD87531451A,Readme
{<%ProgramReadme%>}

37296288-67D4-4EC5-AD14-4AD87531451A,RegistryKeyName
{<%ApplicationID%>}

37296288-67D4-4EC5-AD14-4AD87531451A,URLInfoAbout
{<%ApplicationURL%>}

37296288-67D4-4EC5-AD14-4AD87531451A,URLUpdateInfo
{<%ApplicationURL%>}

37296288-67D4-4EC5-AD14-4AD87531451A,UninstallString
{<%Uninstaller%>}

3B154EDD-CDCE-4F32-9C1B-F65597824199,Active
{Yes}

3B154EDD-CDCE-4F32-9C1B-F65597824199,CheckCondition
{6}

3B154EDD-CDCE-4F32-9C1B-F65597824199,Component
{}

3B154EDD-CDCE-4F32-9C1B-F65597824199,DefaultButton
{Yes}

3B154EDD-CDCE-4F32-9C1B-F65597824199,FailureFocus
{}

3B154EDD-CDCE-4F32-9C1B-F65597824199,FailureMessage
{}

3B154EDD-CDCE-4F32-9C1B-F65597824199,ID
{}

3B154EDD-CDCE-4F32-9C1B-F65597824199,Icon
{info}

3B154EDD-CDCE-4F32-9C1B-F65597824199,Include
{0}

3B154EDD-CDCE-4F32-9C1B-F65597824199,Message,subst
{1}

3B154EDD-CDCE-4F32-9C1B-F65597824199,ResultVirtualText
{Answer}

3B154EDD-CDCE-4F32-9C1B-F65597824199,Title,subst
{1}

3B154EDD-CDCE-4F32-9C1B-F65597824199,TrueValue
{No}

3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3,Active
{Yes}

3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3,CheckCondition
{7}

3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3,Component
{}

3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3,FailureFocus
{}

3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3,FailureMessage
{<%DirectoryPermissionText%>}

3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3,Filename
{<%InstallDir%>}

3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3,ID
{}

3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3,Include
{0}

3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3,Permission
{can create}

3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51,Active
{Yes}

3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51,CheckCondition
{6}

3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51,Component
{}

3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51,FailureFocus
{}

3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51,FailureMessage
{}

3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51,ID
{}

3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51,Include
{0}

3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51,Operator
{false}

3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51,String
{<%Answer%>}

3C6A6A40-F9F2-44CF-9B22-C490BD81457E,Active
{Yes}

3C6A6A40-F9F2-44CF-9B22-C490BD81457E,CheckCondition
{6}

3C6A6A40-F9F2-44CF-9B22-C490BD81457E,Component
{}

3C6A6A40-F9F2-44CF-9B22-C490BD81457E,FailureFocus
{}

3C6A6A40-F9F2-44CF-9B22-C490BD81457E,FailureMessage
{}

3C6A6A40-F9F2-44CF-9B22-C490BD81457E,ID
{}

3C6A6A40-F9F2-44CF-9B22-C490BD81457E,Include
{0}

3C6A6A40-F9F2-44CF-9B22-C490BD81457E,ObjectID
{02A99806-1AF0-43AD-8D67-175545735DB7}

3C6A6A40-F9F2-44CF-9B22-C490BD81457E,Operator
{is active}

3D9B73DC-AF1B-41C5-8AA6-D3206B1AF585,Active
{Yes}

3D9B73DC-AF1B-41C5-8AA6-D3206B1AF585,Component
{}

3D9B73DC-AF1B-41C5-8AA6-D3206B1AF585,Conditions
{}

3D9B73DC-AF1B-41C5-8AA6-D3206B1AF585,ExecuteAction
{5}

3D9B73DC-AF1B-41C5-8AA6-D3206B1AF585,ID
{}

3D9B73DC-AF1B-41C5-8AA6-D3206B1AF585,IgnoreErrors
{No}

3D9B73DC-AF1B-41C5-8AA6-D3206B1AF585,Include
{0}

3D9B73DC-AF1B-41C5-8AA6-D3206B1AF585,State
{disabled}

3D9B73DC-AF1B-41C5-8AA6-D3206B1AF585,Text
{}

3D9B73DC-AF1B-41C5-8AA6-D3206B1AF585,Widget
{Back Button;Next Button}

40462983-C441-43A7-9F80-4FF6363530C7,Active
{Yes}

40462983-C441-43A7-9F80-4FF6363530C7,Component
{}

40462983-C441-43A7-9F80-4FF6363530C7,Conditions
{0 conditions}

40462983-C441-43A7-9F80-4FF6363530C7,ExecuteAction
{1}

40462983-C441-43A7-9F80-4FF6363530C7,FileExtension
{.bit}

40462983-C441-43A7-9F80-4FF6363530C7,FileType
{Papilio Bit File}

40462983-C441-43A7-9F80-4FF6363530C7,ID
{}

40462983-C441-43A7-9F80-4FF6363530C7,IgnoreErrors
{No}

40462983-C441-43A7-9F80-4FF6363530C7,Include
{0}

43AB45F2-59CF-409F-B29F-5B37036D4DFD,Active
{Yes}

43AB45F2-59CF-409F-B29F-5B37036D4DFD,CheckCondition
{3}

43AB45F2-59CF-409F-B29F-5B37036D4DFD,Component
{}

43AB45F2-59CF-409F-B29F-5B37036D4DFD,FailureFocus
{}

43AB45F2-59CF-409F-B29F-5B37036D4DFD,FailureMessage
{}

43AB45F2-59CF-409F-B29F-5B37036D4DFD,ID
{}

43AB45F2-59CF-409F-B29F-5B37036D4DFD,Include
{0}

43AB45F2-59CF-409F-B29F-5B37036D4DFD,Script
{[llength [SetupTypes children]] > 1}

44064F33-D693-4923-8936-E81B3E683581,Active
{Yes}

44064F33-D693-4923-8936-E81B3E683581,CheckCondition
{6}

44064F33-D693-4923-8936-E81B3E683581,Component
{}

44064F33-D693-4923-8936-E81B3E683581,FailureFocus
{}

44064F33-D693-4923-8936-E81B3E683581,FailureMessage
{}

44064F33-D693-4923-8936-E81B3E683581,Filename
{<%ProgramReadme%>}

44064F33-D693-4923-8936-E81B3E683581,ID
{}

44064F33-D693-4923-8936-E81B3E683581,Include
{0}

44064F33-D693-4923-8936-E81B3E683581,Operator
{exists}

44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E,Active
{Yes}

44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E,CheckCondition
{6}

44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E,Component
{}

44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E,FailureFocus
{}

44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E,FailureMessage
{}

44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E,ID
{}

44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E,Include
{0}

44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E,ObjectID
{BA48E7FA-2519-4357-8EE0-6FCA48B55432}

44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E,Operator
{is active}

461032D1-6639-4A6C-8348-907909276E74,Active
{Yes}

461032D1-6639-4A6C-8348-907909276E74,BackButton,subst
{1}

461032D1-6639-4A6C-8348-907909276E74,BrowseButton,subst
{1}

461032D1-6639-4A6C-8348-907909276E74,BrowseText,subst
{1}

461032D1-6639-4A6C-8348-907909276E74,Buttons
{Back/Next/Cancel}

461032D1-6639-4A6C-8348-907909276E74,CancelButton,subst
{1}

461032D1-6639-4A6C-8348-907909276E74,Caption,subst
{1}

461032D1-6639-4A6C-8348-907909276E74,Component
{}

461032D1-6639-4A6C-8348-907909276E74,Conditions
{2 conditions}

461032D1-6639-4A6C-8348-907909276E74,Destination,subst
{1}

461032D1-6639-4A6C-8348-907909276E74,DestinationLabel,subst
{0}

461032D1-6639-4A6C-8348-907909276E74,ID
{}

461032D1-6639-4A6C-8348-907909276E74,Icon
{<%Icon%>}

461032D1-6639-4A6C-8348-907909276E74,Include
{0}

461032D1-6639-4A6C-8348-907909276E74,Message,subst
{1}

461032D1-6639-4A6C-8348-907909276E74,NextButton,subst
{1}

461032D1-6639-4A6C-8348-907909276E74,Subtitle,subst
{1}

461032D1-6639-4A6C-8348-907909276E74,Title,subst
{1}

461032D1-6639-4A6C-8348-907909276E74,VirtualText
{InstallDir}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,Active
{Yes}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,Checked
{Yes}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,ComponentGroup
{}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,Description,subst
{1}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,DisplayName,subst
{1}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,FileGroups
{F670D37D-90C2-40BE-B774-966979C96B66}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,ID
{}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,Name
{Java}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,RequiredComponent
{No}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,Selectable
{Yes}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,ShowComponent
{Yes}

46633430-9F57-4A6F-AD0C-09BAAA28CD76,Size
{}

47F49C3E-6656-4340-A617-57BE7170465E,Active
{Yes}

47F49C3E-6656-4340-A617-57BE7170465E,CheckCondition
{6}

47F49C3E-6656-4340-A617-57BE7170465E,Component
{}

47F49C3E-6656-4340-A617-57BE7170465E,FailureFocus
{}

47F49C3E-6656-4340-A617-57BE7170465E,FailureMessage
{}

47F49C3E-6656-4340-A617-57BE7170465E,ID
{}

47F49C3E-6656-4340-A617-57BE7170465E,Include
{0}

47F49C3E-6656-4340-A617-57BE7170465E,MatchCase
{Yes}

47F49C3E-6656-4340-A617-57BE7170465E,Operator
{equals}

47F49C3E-6656-4340-A617-57BE7170465E,String1
{<%OpMode%>}

47F49C3E-6656-4340-A617-57BE7170465E,String2
{ModeSimple}

4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F,Active
{Yes}

4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F,CheckCondition
{6}

4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F,Component
{}

4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F,FailureFocus
{}

4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F,FailureMessage
{}

4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F,ID
{}

4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F,Include
{0}

4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F,MatchCase
{Yes}

4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F,Operator
{equals}

4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F,String1
{<%DefaultAction%>}

4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F,String2
{ActionWriteToFPGAQuit}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,Active
{Yes}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,AddToUninstall
{Yes}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,Alias
{MakeUserModeExpert}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,AppendNewline
{Yes}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,Component
{}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,Conditions
{2 conditions}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,Encoding
{}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,ExecuteAction
{1}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,FileOpenAction
{Append to file}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,Files
{papilio-init}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,ID
{}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,IgnoreErrors
{No}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,Include
{0}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,LineFeed
{Auto}

4E6C63E2-EC53-446E-8C3F-BE01E815CDED,TextToWrite,subst
{1}

5009513F-1205-4BFD-8C0E-BB2D53917533,Active
{Yes}

5009513F-1205-4BFD-8C0E-BB2D53917533,CheckCondition
{6}

5009513F-1205-4BFD-8C0E-BB2D53917533,Component
{}

5009513F-1205-4BFD-8C0E-BB2D53917533,FailureFocus
{}

5009513F-1205-4BFD-8C0E-BB2D53917533,FailureMessage
{}

5009513F-1205-4BFD-8C0E-BB2D53917533,Filename
{<%ProgramExecutable%>}

5009513F-1205-4BFD-8C0E-BB2D53917533,ID
{}

5009513F-1205-4BFD-8C0E-BB2D53917533,Include
{0}

5009513F-1205-4BFD-8C0E-BB2D53917533,Operator
{exists}

53A5ED00-3B96-409A-8BD3-FF90DC6A236E,Active
{Yes}

53A5ED00-3B96-409A-8BD3-FF90DC6A236E,Alias
{Startup Actions}

53A5ED00-3B96-409A-8BD3-FF90DC6A236E,Conditions
{}

53A5ED00-3B96-409A-8BD3-FF90DC6A236E,ID
{}

57D16797-B7BF-4992-BBE1-CFEF7B854619,Active
{Yes}

57D16797-B7BF-4992-BBE1-CFEF7B854619,Component
{}

57D16797-B7BF-4992-BBE1-CFEF7B854619,Conditions
{}

57D16797-B7BF-4992-BBE1-CFEF7B854619,ExecuteAction
{5}

57D16797-B7BF-4992-BBE1-CFEF7B854619,ID
{}

57D16797-B7BF-4992-BBE1-CFEF7B854619,IgnoreErrors
{No}

57D16797-B7BF-4992-BBE1-CFEF7B854619,Include
{0}

57D16797-B7BF-4992-BBE1-CFEF7B854619,State
{disabled}

57D16797-B7BF-4992-BBE1-CFEF7B854619,Text
{}

57D16797-B7BF-4992-BBE1-CFEF7B854619,Widget
{Back Button;Next Button}

5D4EDFE4-66CF-4D45-9CE4-99B2F09BE3ED,Active
{Yes}

5D4EDFE4-66CF-4D45-9CE4-99B2F09BE3ED,Component
{}

5D4EDFE4-66CF-4D45-9CE4-99B2F09BE3ED,Conditions
{0 conditions}

5D4EDFE4-66CF-4D45-9CE4-99B2F09BE3ED,ExecuteAction
{5}

5D4EDFE4-66CF-4D45-9CE4-99B2F09BE3ED,ID
{}

5D4EDFE4-66CF-4D45-9CE4-99B2F09BE3ED,IgnoreErrors
{No}

5D4EDFE4-66CF-4D45-9CE4-99B2F09BE3ED,Include
{0}

5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E,Active
{Yes}

5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E,CheckCondition
{6}

5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E,Component
{}

5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E,FailureFocus
{}

5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E,FailureMessage
{}

5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E,ID
{}

5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E,Include
{0}

5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E,MatchCase
{Yes}

5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E,Operator
{equals}

5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E,String1
{<%DefaultAction%>}

5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E,String2
{ActionOpenBitFileandWait}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,Active
{Yes}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,AdditionalArguments
{}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,CommandLineArguments
{}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,Component
{}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,Conditions
{2 conditions}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,Description
{}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,ExecuteAction
{1}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,FileName
{<%ShortAppName%>-desktop}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,ID
{}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,IconPath
{}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,IconPathIndex
{0}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,IgnoreErrors
{No}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,Include
{0}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,InstallForAllUsers
{<%ProgramFolderAllUsers%>}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,ShortcutName
{<%AppName%>}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,ShortcutType
{Application}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,TargetFileName
{<%ProgramExecutable%>}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,VendorID
{<%ApplicationID%>}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,WindowState
{normal}

616096EB-AEF0-4632-87D0-1D7B2F3BC498,WorkingDirectory
{<%InstallDir%>}

64025B8C-05BC-419D-9964-5BD7F16DDE25,Active
{Yes}

64025B8C-05BC-419D-9964-5BD7F16DDE25,AdditionalArguments
{}

64025B8C-05BC-419D-9964-5BD7F16DDE25,CommandLineArguments
{}

64025B8C-05BC-419D-9964-5BD7F16DDE25,Component
{}

64025B8C-05BC-419D-9964-5BD7F16DDE25,Conditions
{1 condition}

64025B8C-05BC-419D-9964-5BD7F16DDE25,Description
{}

64025B8C-05BC-419D-9964-5BD7F16DDE25,ExecuteAction
{1}

64025B8C-05BC-419D-9964-5BD7F16DDE25,FileName
{<%ShortAppName%>-uninstall}

64025B8C-05BC-419D-9964-5BD7F16DDE25,ID
{}

64025B8C-05BC-419D-9964-5BD7F16DDE25,IconPath
{}

64025B8C-05BC-419D-9964-5BD7F16DDE25,IconPathIndex
{0}

64025B8C-05BC-419D-9964-5BD7F16DDE25,IgnoreErrors
{No}

64025B8C-05BC-419D-9964-5BD7F16DDE25,Include
{0}

64025B8C-05BC-419D-9964-5BD7F16DDE25,InstallForAllUsers
{}

64025B8C-05BC-419D-9964-5BD7F16DDE25,ProgramFolderName
{<%ProgramFolderName%>}

64025B8C-05BC-419D-9964-5BD7F16DDE25,ShortcutName
{Uninstall <%AppName%>}

64025B8C-05BC-419D-9964-5BD7F16DDE25,ShortcutType
{Application}

64025B8C-05BC-419D-9964-5BD7F16DDE25,TargetFileName
{<%Uninstaller%>}

64025B8C-05BC-419D-9964-5BD7F16DDE25,VendorID
{<%ApplicationID%>}

64025B8C-05BC-419D-9964-5BD7F16DDE25,WindowState
{normal}

64025B8C-05BC-419D-9964-5BD7F16DDE25,WorkingDirectory
{<%InstallDir%>}

656F9803-C015-478C-AD86-764DE1565681,Active
{Yes}

656F9803-C015-478C-AD86-764DE1565681,CheckCondition
{6}

656F9803-C015-478C-AD86-764DE1565681,Component
{}

656F9803-C015-478C-AD86-764DE1565681,FailureFocus
{}

656F9803-C015-478C-AD86-764DE1565681,FailureMessage
{}

656F9803-C015-478C-AD86-764DE1565681,ID
{}

656F9803-C015-478C-AD86-764DE1565681,Include
{0}

656F9803-C015-478C-AD86-764DE1565681,Operator
{true}

656F9803-C015-478C-AD86-764DE1565681,String
{<%LaunchApplication%>}

68D41542-7529-41A1-9D67-603F04C8FF5E,Active
{Yes}

68D41542-7529-41A1-9D67-603F04C8FF5E,CheckCondition
{6}

68D41542-7529-41A1-9D67-603F04C8FF5E,Component
{}

68D41542-7529-41A1-9D67-603F04C8FF5E,FailureFocus
{}

68D41542-7529-41A1-9D67-603F04C8FF5E,FailureMessage
{}

68D41542-7529-41A1-9D67-603F04C8FF5E,ID
{}

68D41542-7529-41A1-9D67-603F04C8FF5E,Include
{0}

68D41542-7529-41A1-9D67-603F04C8FF5E,Operator
{true}

68D41542-7529-41A1-9D67-603F04C8FF5E,String
{<%CreateQuickLaunchShortcut%>}

6B51E7EB-6B8B-429A-A161-BBFA388EF9BF,Active
{Yes}

6B51E7EB-6B8B-429A-A161-BBFA388EF9BF,CheckCondition
{6}

6B51E7EB-6B8B-429A-A161-BBFA388EF9BF,Component
{}

6B51E7EB-6B8B-429A-A161-BBFA388EF9BF,FailureFocus
{}

6B51E7EB-6B8B-429A-A161-BBFA388EF9BF,FailureMessage
{}

6B51E7EB-6B8B-429A-A161-BBFA388EF9BF,Filename
{<%ProgramExecutable%>}

6B51E7EB-6B8B-429A-A161-BBFA388EF9BF,ID
{}

6B51E7EB-6B8B-429A-A161-BBFA388EF9BF,Include
{0}

6B51E7EB-6B8B-429A-A161-BBFA388EF9BF,Operator
{exists}

6FDBEDFA-8F34-4FB3-8BF1-3F6AA3D5F12E,Active
{Yes}

6FDBEDFA-8F34-4FB3-8BF1-3F6AA3D5F12E,Component
{}

6FDBEDFA-8F34-4FB3-8BF1-3F6AA3D5F12E,Conditions
{}

6FDBEDFA-8F34-4FB3-8BF1-3F6AA3D5F12E,Default
{Yes}

6FDBEDFA-8F34-4FB3-8BF1-3F6AA3D5F12E,ExecuteAction
{1}

6FDBEDFA-8F34-4FB3-8BF1-3F6AA3D5F12E,ID
{}

6FDBEDFA-8F34-4FB3-8BF1-3F6AA3D5F12E,IgnoreErrors
{No}

6FDBEDFA-8F34-4FB3-8BF1-3F6AA3D5F12E,Include
{0}

6FDBEDFA-8F34-4FB3-8BF1-3F6AA3D5F12E,Prompt
{<%InstallStartupText%>}

6FDBEDFA-8F34-4FB3-8BF1-3F6AA3D5F12E,VirtualText
{Answer}

70B6AA2F-5488-4D63-BA78-764573D99E40,Active
{Yes}

70B6AA2F-5488-4D63-BA78-764573D99E40,CheckCondition
{6}

70B6AA2F-5488-4D63-BA78-764573D99E40,Component
{}

70B6AA2F-5488-4D63-BA78-764573D99E40,FailureFocus
{}

70B6AA2F-5488-4D63-BA78-764573D99E40,FailureMessage
{}

70B6AA2F-5488-4D63-BA78-764573D99E40,ID
{}

70B6AA2F-5488-4D63-BA78-764573D99E40,Include
{0}

70B6AA2F-5488-4D63-BA78-764573D99E40,ObjectID
{papilio-loader}

70B6AA2F-5488-4D63-BA78-764573D99E40,Operator
{is active}

77CF837E-744A-4997-A16C-985A7E45A594,Active
{Yes}

77CF837E-744A-4997-A16C-985A7E45A594,Alias
{Install Papilio Loader Actions}

77CF837E-744A-4997-A16C-985A7E45A594,Conditions
{1 condition}

77CF837E-744A-4997-A16C-985A7E45A594,ID
{}

84878F75-8E75-4180-9322-C65ADBE252A9,Active
{Yes}

84878F75-8E75-4180-9322-C65ADBE252A9,CheckCondition
{6}

84878F75-8E75-4180-9322-C65ADBE252A9,Component
{}

84878F75-8E75-4180-9322-C65ADBE252A9,FailureFocus
{}

84878F75-8E75-4180-9322-C65ADBE252A9,FailureMessage
{}

84878F75-8E75-4180-9322-C65ADBE252A9,ID
{}

84878F75-8E75-4180-9322-C65ADBE252A9,Include
{0}

84878F75-8E75-4180-9322-C65ADBE252A9,Operator
{false}

84878F75-8E75-4180-9322-C65ADBE252A9,String
{<%UpgradeInstall%>}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,Active
{Yes}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,Anchor
{center}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,Caption,subst
{1}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,CloseButton,subst
{1}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,Component
{}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,Conditions
{3 conditions}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,ExecuteAction
{1}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,Font
{}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,GrabFocus
{Yes}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,Height
{300}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,ID
{}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,IgnoreErrors
{No}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,Include
{0}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,Message,subst
{1}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,TextFile
{<%ProgramReadme%>}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,TextWrap
{word}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,Title,subst
{1}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,WaitOnWindow
{Yes}

85A32F95-6AEE-4C87-B4E6-8A8E538D31D4,Width
{400}

882C76AA-871B-41A0-9C5A-C4EDC5393B60,Action
{Install Actions}

882C76AA-871B-41A0-9C5A-C4EDC5393B60,Active
{Yes}

882C76AA-871B-41A0-9C5A-C4EDC5393B60,Component
{}

882C76AA-871B-41A0-9C5A-C4EDC5393B60,Conditions
{}

882C76AA-871B-41A0-9C5A-C4EDC5393B60,EvaluateConditions
{Yes}

882C76AA-871B-41A0-9C5A-C4EDC5393B60,ExecuteAction
{1}

882C76AA-871B-41A0-9C5A-C4EDC5393B60,ID
{}

882C76AA-871B-41A0-9C5A-C4EDC5393B60,IgnoreErrors
{No}

882C76AA-871B-41A0-9C5A-C4EDC5393B60,Include
{0}

890977D4-0976-4EEB-B7E0-D122F2DCDDB9,Action
{Install Actions}

890977D4-0976-4EEB-B7E0-D122F2DCDDB9,Active
{Yes}

890977D4-0976-4EEB-B7E0-D122F2DCDDB9,Component
{}

890977D4-0976-4EEB-B7E0-D122F2DCDDB9,Conditions
{}

890977D4-0976-4EEB-B7E0-D122F2DCDDB9,EvaluateConditions
{Yes}

890977D4-0976-4EEB-B7E0-D122F2DCDDB9,ExecuteAction
{1}

890977D4-0976-4EEB-B7E0-D122F2DCDDB9,ID
{}

890977D4-0976-4EEB-B7E0-D122F2DCDDB9,IgnoreErrors
{No}

890977D4-0976-4EEB-B7E0-D122F2DCDDB9,Include
{0}

8BB412C6-340B-4777-9460-91C90A4461AB,Active
{Yes}

8BB412C6-340B-4777-9460-91C90A4461AB,Command
{"<%InstallDir%>/Papilio Loader/papilio-loader.exe" "%1" -f -q -x}

8BB412C6-340B-4777-9460-91C90A4461AB,CommandName
{WriteToFPGA}

8BB412C6-340B-4777-9460-91C90A4461AB,Component
{}

8BB412C6-340B-4777-9460-91C90A4461AB,Conditions
{0 conditions}

8BB412C6-340B-4777-9460-91C90A4461AB,ExecuteAction
{1}

8BB412C6-340B-4777-9460-91C90A4461AB,FileType
{Papilio Loader bitstream}

8BB412C6-340B-4777-9460-91C90A4461AB,ID
{}

8BB412C6-340B-4777-9460-91C90A4461AB,IgnoreErrors
{No}

8BB412C6-340B-4777-9460-91C90A4461AB,Include
{0}

8BB412C6-340B-4777-9460-91C90A4461AB,MenuName
{&Write to Papilio board}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,Active
{Yes}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,AddToUninstall
{Yes}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,Alias
{MakeOpenBitfileAndWait default}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,Component
{}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,Conditions
{2 conditions}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,DataType
{String}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,ExecuteAction
{1}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,ID
{}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,IgnoreErrors
{No}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,Include
{0}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,Key
{Papilio Loader bitstream\shell}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,Name
{}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,RestoreOnUninstall
{No}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,RootKey
{HKEY_CLASSES_ROOT}

8DBB3BD6-710F-4C59-992E-4AE68D34B5EB,Value
{Open}

8FF06A33-510C-4F73-954C-243D1E048A1C,Active
{Yes}

8FF06A33-510C-4F73-954C-243D1E048A1C,Command
{"<%InstallDir%>/Papilio Loader/papilio-loader.exe" "%1" -s -q -x}

8FF06A33-510C-4F73-954C-243D1E048A1C,CommandName
{WritePermanently}

8FF06A33-510C-4F73-954C-243D1E048A1C,Component
{}

8FF06A33-510C-4F73-954C-243D1E048A1C,Conditions
{0 conditions}

8FF06A33-510C-4F73-954C-243D1E048A1C,ExecuteAction
{1}

8FF06A33-510C-4F73-954C-243D1E048A1C,FileType
{Papilio Loader bitstream}

8FF06A33-510C-4F73-954C-243D1E048A1C,ID
{}

8FF06A33-510C-4F73-954C-243D1E048A1C,IgnoreErrors
{No}

8FF06A33-510C-4F73-954C-243D1E048A1C,Include
{0}

8FF06A33-510C-4F73-954C-243D1E048A1C,MenuName
{Write &permanently to Papilio board}

90B56616-7733-418E-961C-0E99B79AAA38,Active
{Yes}

90B56616-7733-418E-961C-0E99B79AAA38,Component
{}

90B56616-7733-418E-961C-0E99B79AAA38,Conditions
{}

90B56616-7733-418E-961C-0E99B79AAA38,ExecuteAction
{1}

90B56616-7733-418E-961C-0E99B79AAA38,ID
{}

90B56616-7733-418E-961C-0E99B79AAA38,IgnoreErrors
{No}

90B56616-7733-418E-961C-0E99B79AAA38,Include
{0}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,Active
{Yes}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,AddToUninstall
{Yes}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,Alias
{MakeUserModeExpert}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,AppendNewline
{Yes}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,Component
{}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,Conditions
{2 conditions}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,Encoding
{}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,ExecuteAction
{1}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,FileOpenAction
{Append to file}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,Files
{papilio-init}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,ID
{}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,IgnoreErrors
{No}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,Include
{0}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,LineFeed
{Auto}

916232D2-337E-451C-A1D8-C33F5FFFE1B1,TextToWrite,subst
{1}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,Active
{Yes}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,Checked
{Yes}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,ComponentGroup
{}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,Description,subst
{1}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,DisplayName,subst
{1}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,FileGroups
{B43B2C47-ABB6-4073-B2F0-345EF8183AC3}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,ID
{}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,Name
{Arcade Blaster}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,RequiredComponent
{Yes}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,Selectable
{Yes}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,ShowComponent
{Yes}

926EBA3E-3B65-49A2-AA64-02BF94B7DE00,Size
{}

97DFB023-85C5-40E2-8796-F3457FE417E0,Active
{Yes}

97DFB023-85C5-40E2-8796-F3457FE417E0,CheckCondition
{6}

97DFB023-85C5-40E2-8796-F3457FE417E0,Component
{}

97DFB023-85C5-40E2-8796-F3457FE417E0,FailureFocus
{}

97DFB023-85C5-40E2-8796-F3457FE417E0,FailureMessage
{}

97DFB023-85C5-40E2-8796-F3457FE417E0,ID
{}

97DFB023-85C5-40E2-8796-F3457FE417E0,Include
{0}

97DFB023-85C5-40E2-8796-F3457FE417E0,Operator
{true}

97DFB023-85C5-40E2-8796-F3457FE417E0,String
{<%CreateDesktopShortcut%>}

99158BA8-1DEE-4435-87C7-3BD2F29DE9AF,Active
{Yes}

99158BA8-1DEE-4435-87C7-3BD2F29DE9AF,CheckCondition
{6}

99158BA8-1DEE-4435-87C7-3BD2F29DE9AF,Component
{}

99158BA8-1DEE-4435-87C7-3BD2F29DE9AF,FailureFocus
{}

99158BA8-1DEE-4435-87C7-3BD2F29DE9AF,FailureMessage
{}

99158BA8-1DEE-4435-87C7-3BD2F29DE9AF,ID
{}

99158BA8-1DEE-4435-87C7-3BD2F29DE9AF,Include
{0}

99158BA8-1DEE-4435-87C7-3BD2F29DE9AF,ObjectID
{papilio-loader}

99158BA8-1DEE-4435-87C7-3BD2F29DE9AF,Operator
{is active}

9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2,Active
{Yes}

9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2,Alias
{Install Actions}

9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2,Conditions
{0 conditions}

9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2,ID
{}

A3853EA3-9E83-4544-9236-38DC5C84819D,Active
{Yes}

A3853EA3-9E83-4544-9236-38DC5C84819D,Component
{}

A3853EA3-9E83-4544-9236-38DC5C84819D,Conditions
{}

A3853EA3-9E83-4544-9236-38DC5C84819D,ExecuteAction
{1}

A3853EA3-9E83-4544-9236-38DC5C84819D,ExitCode
{}

A3853EA3-9E83-4544-9236-38DC5C84819D,ExitType
{Finish}

A3853EA3-9E83-4544-9236-38DC5C84819D,ID
{}

A3853EA3-9E83-4544-9236-38DC5C84819D,IgnoreErrors
{No}

A3853EA3-9E83-4544-9236-38DC5C84819D,Include
{0}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,Active
{Yes}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,BackButton,subst
{1}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,Buttons
{Back/Next/Cancel}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,CancelButton,subst
{1}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,Caption,subst
{1}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,Component
{}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,Conditions
{0 conditions}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,FileLabel,subst
{1}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,ID
{}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,Icon
{<%Icon%>}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,Include
{0}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,Message,subst
{1}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,NextButton,subst
{1}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,ProgressValue,subst
{1}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,Subtitle,subst
{1}

A583FDD4-6649-4E1B-B80E-6FA39B7679B1,Title,subst
{1}

A616C2F3-F2E8-47DB-9A3B-0EB0E263A796,Active
{Yes}

A616C2F3-F2E8-47DB-9A3B-0EB0E263A796,Component
{}

A616C2F3-F2E8-47DB-9A3B-0EB0E263A796,Conditions
{}

A616C2F3-F2E8-47DB-9A3B-0EB0E263A796,ExecuteAction
{1}

A616C2F3-F2E8-47DB-9A3B-0EB0E263A796,ID
{}

A616C2F3-F2E8-47DB-9A3B-0EB0E263A796,IgnoreErrors
{No}

A616C2F3-F2E8-47DB-9A3B-0EB0E263A796,Include
{0}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,Active
{Yes}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,Component
{}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,Conditions
{0 conditions}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,ExecuteAction
{1}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,FileType
{Papilio Bit File}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,ID
{}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,IconPath
{<%InstallDir%>/Papilio Loader\bin\papilio.ico}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,IconPathIndex
{0}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,IgnoreErrors
{No}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,Include
{0}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,ShowFileExtensions
{Show file extensions based on user preferences}

ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9,Title
{Papilio Bit File}

AFE00D6D-DCCB-4103-9B0F-C8A358139934,Active
{Yes}

AFE00D6D-DCCB-4103-9B0F-C8A358139934,CheckCondition
{6}

AFE00D6D-DCCB-4103-9B0F-C8A358139934,Component
{}

AFE00D6D-DCCB-4103-9B0F-C8A358139934,FailureFocus
{}

AFE00D6D-DCCB-4103-9B0F-C8A358139934,FailureMessage
{}

AFE00D6D-DCCB-4103-9B0F-C8A358139934,ID
{}

AFE00D6D-DCCB-4103-9B0F-C8A358139934,Include
{0}

AFE00D6D-DCCB-4103-9B0F-C8A358139934,ObjectID
{02A99806-1AF0-43AD-8D67-175545735DB7}

AFE00D6D-DCCB-4103-9B0F-C8A358139934,Operator
{is active}

AIX-ppc,Active
{No}

AIX-ppc,BuildSeparateArchives
{No}

AIX-ppc,DefaultDirectoryPermission
{0755}

AIX-ppc,DefaultFilePermission
{0755}

AIX-ppc,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

AIX-ppc,FallBackToConsole
{Yes}

AIX-ppc,InstallDir
{<%Home%>/<%ShortAppName%>}

AIX-ppc,InstallMode
{Standard}

AIX-ppc,InstallType
{Typical}

AIX-ppc,ProgramExecutable
{<%InstallDir%>/Papilio_Programmer.sh}

AIX-ppc,ProgramFolderAllUsers
{No}

AIX-ppc,ProgramFolderName
{<%AppName%>}

AIX-ppc,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

AIX-ppc,ProgramName
{}

AIX-ppc,ProgramReadme
{<%InstallDir%>/README.txt}

AIX-ppc,PromptForRoot
{Yes}

AIX-ppc,RequireRoot
{No}

AIX-ppc,RootInstallDir
{/usr/local/<%ShortAppName%>}

B0B25111-93A4-44B1-9B1B-878B8D24F4E7,Active
{Yes}

B0B25111-93A4-44B1-9B1B-878B8D24F4E7,AllowQuit
{Yes}

B0B25111-93A4-44B1-9B1B-878B8D24F4E7,Component
{}

B0B25111-93A4-44B1-9B1B-878B8D24F4E7,Conditions
{}

B0B25111-93A4-44B1-9B1B-878B8D24F4E7,ExecuteAction
{1}

B0B25111-93A4-44B1-9B1B-878B8D24F4E7,ID
{}

B0B25111-93A4-44B1-9B1B-878B8D24F4E7,IgnoreErrors
{No}

B0B25111-93A4-44B1-9B1B-878B8D24F4E7,Include
{0}

B0B25111-93A4-44B1-9B1B-878B8D24F4E7,Message,subst
{1}

B0B25111-93A4-44B1-9B1B-878B8D24F4E7,PaginateMessage
{Yes}

B0B25111-93A4-44B1-9B1B-878B8D24F4E7,WrapText
{Yes}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,Active
{Yes}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,AddToUninstall
{Yes}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,Alias
{MakeDefaultWriteFPGAQuit default}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,Component
{}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,Conditions
{2 conditions}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,DataType
{String}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,ExecuteAction
{1}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,ID
{}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,IgnoreErrors
{No}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,Include
{0}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,Key
{Papilio Loader bitstream\shell}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,Name
{}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,RestoreOnUninstall
{No}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,RootKey
{HKEY_CLASSES_ROOT}

B1A05AB5-2C36-48AE-ABD1-25598A617A02,Value
{WriteToFPGA}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,Active
{Yes}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,Attributes
{}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,CompressionMethod
{}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,Destination
{<%InstallDir%>}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,DisplayName
{}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,FileSize
{9840595}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,FileUpdateMethod
{0}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,FollowDirLinks
{Yes}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,FollowFileLinks
{No}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,ID
{}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,Name
{Arcade Blaster}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,Permissions
{}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,SaveFiles
{}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,Size
{}

B43B2C47-ABB6-4073-B2F0-345EF8183AC3,Version
{}

B8788952-C1D3-4C1B-977C-B66BACB06EBA,Active
{Yes}

B8788952-C1D3-4C1B-977C-B66BACB06EBA,Component
{}

B8788952-C1D3-4C1B-977C-B66BACB06EBA,Conditions
{}

B8788952-C1D3-4C1B-977C-B66BACB06EBA,ExecuteAction
{1}

B8788952-C1D3-4C1B-977C-B66BACB06EBA,ExitCode
{}

B8788952-C1D3-4C1B-977C-B66BACB06EBA,ExitType
{Cancel}

B8788952-C1D3-4C1B-977C-B66BACB06EBA,ID
{}

B8788952-C1D3-4C1B-977C-B66BACB06EBA,IgnoreErrors
{No}

B8788952-C1D3-4C1B-977C-B66BACB06EBA,Include
{0}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,Active
{Yes}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,Checked
{Yes}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,ComponentGroup
{}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,Description,subst
{1}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,DisplayName,subst
{1}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,FileGroups
{0E03E517-47F4-49AB-AE47-14679C43176F}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,ID
{}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,Name
{Papilio Drivers}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,RequiredComponent
{No}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,Selectable
{Yes}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,ShowComponent
{Yes}

BA48E7FA-2519-4357-8EE0-6FCA48B55432,Size
{}

BAAC1B65-47BF-446C-8CAD-4472338C1703,Active
{Yes}

BAAC1B65-47BF-446C-8CAD-4472338C1703,Component
{}

BAAC1B65-47BF-446C-8CAD-4472338C1703,Conditions
{}

BAAC1B65-47BF-446C-8CAD-4472338C1703,EchoInput
{Yes}

BAAC1B65-47BF-446C-8CAD-4472338C1703,ExecuteAction
{1}

BAAC1B65-47BF-446C-8CAD-4472338C1703,ID
{}

BAAC1B65-47BF-446C-8CAD-4472338C1703,IgnoreErrors
{No}

BAAC1B65-47BF-446C-8CAD-4472338C1703,Include
{0}

BAAC1B65-47BF-446C-8CAD-4472338C1703,Prompt
{<%ConsoleSelectDestinationText%>}

BAAC1B65-47BF-446C-8CAD-4472338C1703,RequireResponse
{No}

BAAC1B65-47BF-446C-8CAD-4472338C1703,TrimResult
{Yes}

BAAC1B65-47BF-446C-8CAD-4472338C1703,VirtualText
{InstallDir}

C12BFB5E-30A3-426F-B968-78936A987445,Active
{Yes}

C12BFB5E-30A3-426F-B968-78936A987445,AdditionalArguments
{}

C12BFB5E-30A3-426F-B968-78936A987445,Alias
{Papilio Loader Program Shortcut}

C12BFB5E-30A3-426F-B968-78936A987445,CommandLineArguments
{}

C12BFB5E-30A3-426F-B968-78936A987445,Component
{}

C12BFB5E-30A3-426F-B968-78936A987445,Conditions
{1 condition}

C12BFB5E-30A3-426F-B968-78936A987445,Description
{}

C12BFB5E-30A3-426F-B968-78936A987445,ExecuteAction
{1}

C12BFB5E-30A3-426F-B968-78936A987445,FileName
{<%ShortAppName%>-program}

C12BFB5E-30A3-426F-B968-78936A987445,ID
{}

C12BFB5E-30A3-426F-B968-78936A987445,IconPath
{<%InstallDir%>/Papilio Loader/logo.ico}

C12BFB5E-30A3-426F-B968-78936A987445,IconPathIndex
{0}

C12BFB5E-30A3-426F-B968-78936A987445,IgnoreErrors
{No}

C12BFB5E-30A3-426F-B968-78936A987445,Include
{0}

C12BFB5E-30A3-426F-B968-78936A987445,InstallForAllUsers
{}

C12BFB5E-30A3-426F-B968-78936A987445,ProgramFolderName
{<%ProgramFolderName%>}

C12BFB5E-30A3-426F-B968-78936A987445,ShortcutName
{Papilio Loader}

C12BFB5E-30A3-426F-B968-78936A987445,ShortcutType
{Application}

C12BFB5E-30A3-426F-B968-78936A987445,TargetFileName
{<%InstallDir%>/Papilio Loader/papilio-loader.exe}

C12BFB5E-30A3-426F-B968-78936A987445,VendorID
{<%ApplicationID%>}

C12BFB5E-30A3-426F-B968-78936A987445,WindowState
{normal}

C12BFB5E-30A3-426F-B968-78936A987445,WorkingDirectory
{<%InstallDir%>/Papilio Loader/}

C53A6B38-F78B-4198-86CD-073DFA2715CB,Active
{Yes}

C53A6B38-F78B-4198-86CD-073DFA2715CB,CheckCondition
{6}

C53A6B38-F78B-4198-86CD-073DFA2715CB,Component
{}

C53A6B38-F78B-4198-86CD-073DFA2715CB,FailureFocus
{}

C53A6B38-F78B-4198-86CD-073DFA2715CB,FailureMessage
{}

C53A6B38-F78B-4198-86CD-073DFA2715CB,ID
{}

C53A6B38-F78B-4198-86CD-073DFA2715CB,Include
{0}

C53A6B38-F78B-4198-86CD-073DFA2715CB,MatchCase
{Yes}

C53A6B38-F78B-4198-86CD-073DFA2715CB,Operator
{equals}

C53A6B38-F78B-4198-86CD-073DFA2715CB,String1
{<%DefaultAction%>}

C53A6B38-F78B-4198-86CD-073DFA2715CB,String2
{ActionWriteToSPIFlashQuit}

C7F851DF-4A8A-4AF9-B383-98934210530E,Active
{Yes}

C7F851DF-4A8A-4AF9-B383-98934210530E,BackButton,subst
{1}

C7F851DF-4A8A-4AF9-B383-98934210530E,Buttons
{Back/Next/Cancel}

C7F851DF-4A8A-4AF9-B383-98934210530E,CancelButton,subst
{1}

C7F851DF-4A8A-4AF9-B383-98934210530E,Caption,subst
{1}

C7F851DF-4A8A-4AF9-B383-98934210530E,Component
{}

C7F851DF-4A8A-4AF9-B383-98934210530E,Conditions
{0 conditions}

C7F851DF-4A8A-4AF9-B383-98934210530E,DescriptionLabel,subst
{0}

C7F851DF-4A8A-4AF9-B383-98934210530E,ID
{}

C7F851DF-4A8A-4AF9-B383-98934210530E,Icon
{<%Icon%>}

C7F851DF-4A8A-4AF9-B383-98934210530E,Include
{0}

C7F851DF-4A8A-4AF9-B383-98934210530E,Message,subst
{1}

C7F851DF-4A8A-4AF9-B383-98934210530E,NextButton,subst
{1}

C7F851DF-4A8A-4AF9-B383-98934210530E,Subtitle,subst
{1}

C7F851DF-4A8A-4AF9-B383-98934210530E,Title,subst
{1}

C998AA02-4300-4ACA-A960-55B58B87280C,Active
{Yes}

C998AA02-4300-4ACA-A960-55B58B87280C,CommandLineArguments
{}

C998AA02-4300-4ACA-A960-55B58B87280C,Component
{}

C998AA02-4300-4ACA-A960-55B58B87280C,Conditions
{2 conditions}

C998AA02-4300-4ACA-A960-55B58B87280C,Description
{}

C998AA02-4300-4ACA-A960-55B58B87280C,ExecuteAction
{1}

C998AA02-4300-4ACA-A960-55B58B87280C,ID
{}

C998AA02-4300-4ACA-A960-55B58B87280C,IconPath
{}

C998AA02-4300-4ACA-A960-55B58B87280C,IconPathIndex
{0}

C998AA02-4300-4ACA-A960-55B58B87280C,IgnoreErrors
{No}

C998AA02-4300-4ACA-A960-55B58B87280C,Include
{0}

C998AA02-4300-4ACA-A960-55B58B87280C,ShortcutDirectory
{<%QUICK_LAUNCH%>}

C998AA02-4300-4ACA-A960-55B58B87280C,ShortcutName
{<%AppName%>}

C998AA02-4300-4ACA-A960-55B58B87280C,TargetFileName
{<%ProgramExecutable%>}

C998AA02-4300-4ACA-A960-55B58B87280C,WindowState
{normal}

C998AA02-4300-4ACA-A960-55B58B87280C,WorkingDirectory
{<%InstallDir%>}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Active
{Yes}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,BackButton,subst
{1}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Buttons
{Back/Next/Cancel}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,CancelButton,subst
{1}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Caption,subst
{1}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Component
{}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Conditions
{0 conditions}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,ID
{}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Icon
{<%Icon%>}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Include
{0}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Message,subst
{1}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,NextButton,subst
{1}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Subtitle,subst
{1}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Text,subst
{1}

CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Title,subst
{1}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,Active
{Yes}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,BackButton,subst
{1}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,Buttons
{Next/Cancel}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,CancelButton,subst
{1}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,Caption,subst
{1}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,Component
{}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,Conditions
{}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,ID
{}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,Image
{<%Image%>}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,Include
{0}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,Message,subst
{1}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,NextButton,subst
{1}

CFAAA850-84CE-4B01-A86D-9439F92E0AA2,WizardOptions
{-bg #FFFFFF -separator 0}

D14F20BD-593E-4286-B63B-B60266A64F57,Active
{Yes}

D14F20BD-593E-4286-B63B-B60266A64F57,Attributes
{}

D14F20BD-593E-4286-B63B-B60266A64F57,CompressionMethod
{}

D14F20BD-593E-4286-B63B-B60266A64F57,Destination
{<%InstallDir%>}

D14F20BD-593E-4286-B63B-B60266A64F57,DisplayName
{}

D14F20BD-593E-4286-B63B-B60266A64F57,FileSize
{7170012}

D14F20BD-593E-4286-B63B-B60266A64F57,FileUpdateMethod
{0}

D14F20BD-593E-4286-B63B-B60266A64F57,FollowDirLinks
{Yes}

D14F20BD-593E-4286-B63B-B60266A64F57,FollowFileLinks
{No}

D14F20BD-593E-4286-B63B-B60266A64F57,ID
{}

D14F20BD-593E-4286-B63B-B60266A64F57,Name
{Papilio Loader}

D14F20BD-593E-4286-B63B-B60266A64F57,Permissions
{}

D14F20BD-593E-4286-B63B-B60266A64F57,SaveFiles
{}

D14F20BD-593E-4286-B63B-B60266A64F57,Size
{}

D14F20BD-593E-4286-B63B-B60266A64F57,Version
{}

D604D7F9-799C-4E6C-810D-2CE2B3B1839A,Active
{Yes}

D604D7F9-799C-4E6C-810D-2CE2B3B1839A,Component
{}

D604D7F9-799C-4E6C-810D-2CE2B3B1839A,Conditions
{}

D604D7F9-799C-4E6C-810D-2CE2B3B1839A,ExecuteAction
{1}

D604D7F9-799C-4E6C-810D-2CE2B3B1839A,ExitCode
{}

D604D7F9-799C-4E6C-810D-2CE2B3B1839A,ExitType
{Finish}

D604D7F9-799C-4E6C-810D-2CE2B3B1839A,ID
{}

D604D7F9-799C-4E6C-810D-2CE2B3B1839A,IgnoreErrors
{No}

D604D7F9-799C-4E6C-810D-2CE2B3B1839A,Include
{0}

D94AC272-9E75-4338-B6E0-A3A9D3EFD838,Active
{Yes}

D94AC272-9E75-4338-B6E0-A3A9D3EFD838,CheckCondition
{6}

D94AC272-9E75-4338-B6E0-A3A9D3EFD838,Component
{}

D94AC272-9E75-4338-B6E0-A3A9D3EFD838,FailureFocus
{}

D94AC272-9E75-4338-B6E0-A3A9D3EFD838,FailureMessage
{}

D94AC272-9E75-4338-B6E0-A3A9D3EFD838,ID
{}

D94AC272-9E75-4338-B6E0-A3A9D3EFD838,Include
{0}

D94AC272-9E75-4338-B6E0-A3A9D3EFD838,Operator
{true}

D94AC272-9E75-4338-B6E0-A3A9D3EFD838,String
{<%GuiMode%>}

D969A91E-B7C3-48DC-AE70-76E54B3E825A,Active
{Yes}

D969A91E-B7C3-48DC-AE70-76E54B3E825A,CheckCondition
{6}

D969A91E-B7C3-48DC-AE70-76E54B3E825A,Component
{}

D969A91E-B7C3-48DC-AE70-76E54B3E825A,FailureFocus
{}

D969A91E-B7C3-48DC-AE70-76E54B3E825A,FailureMessage
{}

D969A91E-B7C3-48DC-AE70-76E54B3E825A,ID
{}

D969A91E-B7C3-48DC-AE70-76E54B3E825A,Include
{0}

D969A91E-B7C3-48DC-AE70-76E54B3E825A,ObjectID
{02A99806-1AF0-43AD-8D67-175545735DB7}

D969A91E-B7C3-48DC-AE70-76E54B3E825A,Operator
{is active}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,Active
{Yes}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,ClearProgressiveWidget
{Yes}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,Component
{}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,Conditions
{}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,ConsoleTitle
{<%AppName%> Setup}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,ExecuteAction
{1}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,ExecuteAsRoot
{No}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,ExecuteInConsole
{No}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,ID
{}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,IgnoreErrors
{No}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,Include
{0}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,IncludeStderr
{No}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,ProgramCommandLine
{<%ProgramExecutable%>}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,ProgressiveOutputWidget
{}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,ResultVirtualText
{ExternalProgramResult}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,ShowProgressiveOutput
{No}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,StatusVirtualText
{ExternalProgramStatus}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,WaitForProgram
{No}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,WatchProgressiveOutput
{No}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,WatchRegularExpression
{^:([^ ]+) (.*):$}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,WatchVirtualText
{Status}

D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6,WorkingDirectory
{<%InstallDir%>}

DB0D0511-9E5C-4F8F-A2DE-70D457543413,Active
{Yes}

DB0D0511-9E5C-4F8F-A2DE-70D457543413,AllowQuit
{Yes}

DB0D0511-9E5C-4F8F-A2DE-70D457543413,Component
{}

DB0D0511-9E5C-4F8F-A2DE-70D457543413,Conditions
{}

DB0D0511-9E5C-4F8F-A2DE-70D457543413,ExecuteAction
{1}

DB0D0511-9E5C-4F8F-A2DE-70D457543413,ID
{}

DB0D0511-9E5C-4F8F-A2DE-70D457543413,IgnoreErrors
{No}

DB0D0511-9E5C-4F8F-A2DE-70D457543413,Include
{0}

DB0D0511-9E5C-4F8F-A2DE-70D457543413,Message,subst
{1}

DB0D0511-9E5C-4F8F-A2DE-70D457543413,PaginateMessage
{Yes}

DB0D0511-9E5C-4F8F-A2DE-70D457543413,WrapText
{Yes}

DC250F40-AD9D-42F4-AE7D-4942E31F1F29,Active
{Yes}

DC250F40-AD9D-42F4-AE7D-4942E31F1F29,Conditions
{0 conditions}

DC250F40-AD9D-42F4-AE7D-4942E31F1F29,ID
{}

E1038B2A-A6C9-429B-88A7-360DEA5E9E58,Active
{Yes}

E1038B2A-A6C9-429B-88A7-360DEA5E9E58,Command
{"<%InstallDir%>/Papilio Loader/papilio-loader.exe" "%1"}

E1038B2A-A6C9-429B-88A7-360DEA5E9E58,CommandName
{Open}

E1038B2A-A6C9-429B-88A7-360DEA5E9E58,Component
{}

E1038B2A-A6C9-429B-88A7-360DEA5E9E58,Conditions
{0 conditions}

E1038B2A-A6C9-429B-88A7-360DEA5E9E58,ExecuteAction
{1}

E1038B2A-A6C9-429B-88A7-360DEA5E9E58,FileType
{Papilio Loader bitstream}

E1038B2A-A6C9-429B-88A7-360DEA5E9E58,ID
{}

E1038B2A-A6C9-429B-88A7-360DEA5E9E58,IgnoreErrors
{No}

E1038B2A-A6C9-429B-88A7-360DEA5E9E58,Include
{0}

E1038B2A-A6C9-429B-88A7-360DEA5E9E58,MenuName
{&Open with <%AppName%>}

E3B634ED-9732-4E08-8198-554838386100,Active
{Yes}

E3B634ED-9732-4E08-8198-554838386100,CheckCondition
{1}

E3B634ED-9732-4E08-8198-554838386100,Component
{}

E3B634ED-9732-4E08-8198-554838386100,FailureFocus
{}

E3B634ED-9732-4E08-8198-554838386100,FailureMessage
{<%DirectoryPermissionText%>}

E3B634ED-9732-4E08-8198-554838386100,Filename
{<%InstallDir%>}

E3B634ED-9732-4E08-8198-554838386100,ID
{}

E3B634ED-9732-4E08-8198-554838386100,Include
{0}

E3B634ED-9732-4E08-8198-554838386100,Permission
{can create}

E60273EC-A142-41FA-A49B-2C6534A62B7D,Active
{Yes}

E60273EC-A142-41FA-A49B-2C6534A62B7D,Alias
{Install FTDI Drivers}

E60273EC-A142-41FA-A49B-2C6534A62B7D,ClearProgressiveWidget
{Yes}

E60273EC-A142-41FA-A49B-2C6534A62B7D,Component
{}

E60273EC-A142-41FA-A49B-2C6534A62B7D,Conditions
{0 conditions}

E60273EC-A142-41FA-A49B-2C6534A62B7D,ConsoleTitle
{<%AppName%> Setup}

E60273EC-A142-41FA-A49B-2C6534A62B7D,ExecuteAction
{1}

E60273EC-A142-41FA-A49B-2C6534A62B7D,ExecuteAsRoot
{No}

E60273EC-A142-41FA-A49B-2C6534A62B7D,ExecuteInConsole
{No}

E60273EC-A142-41FA-A49B-2C6534A62B7D,ID
{}

E60273EC-A142-41FA-A49B-2C6534A62B7D,IgnoreErrors
{No}

E60273EC-A142-41FA-A49B-2C6534A62B7D,Include
{0}

E60273EC-A142-41FA-A49B-2C6534A62B7D,IncludeStderr
{No}

E60273EC-A142-41FA-A49B-2C6534A62B7D,ProgramCommandLine
{install.bat}

E60273EC-A142-41FA-A49B-2C6534A62B7D,ProgressiveOutputWidget
{}

E60273EC-A142-41FA-A49B-2C6534A62B7D,ResultVirtualText
{ExternalProgramResult}

E60273EC-A142-41FA-A49B-2C6534A62B7D,ShowProgressiveOutput
{No}

E60273EC-A142-41FA-A49B-2C6534A62B7D,StatusVirtualText
{ExternalProgramStatus}

E60273EC-A142-41FA-A49B-2C6534A62B7D,WaitForProgram
{Yes}

E60273EC-A142-41FA-A49B-2C6534A62B7D,WatchProgressiveOutput
{No}

E60273EC-A142-41FA-A49B-2C6534A62B7D,WatchRegularExpression
{^:([^ ]+) (.*):$}

E60273EC-A142-41FA-A49B-2C6534A62B7D,WatchVirtualText
{Status}

E60273EC-A142-41FA-A49B-2C6534A62B7D,WorkingDirectory
{<%InstallDir%>/Papilio USB Drivers}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,Active
{Yes}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,BackButton,subst
{1}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,Buttons
{Back/Next/Cancel}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,CancelButton,subst
{1}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,Caption,subst
{1}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,Component
{}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,Conditions
{0 conditions}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,FileLabel,subst
{1}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,ID
{}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,Icon
{<%Icon%>}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,Include
{0}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,Message,subst
{1}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,NextButton,subst
{1}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,ProgressValue,subst
{1}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,Subtitle,subst
{1}

E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,Title,subst
{1}

EE470AE8-2B2F-4EF9-9224-AD84781C783F,Active
{Yes}

EE470AE8-2B2F-4EF9-9224-AD84781C783F,Components
{926EBA3E-3B65-49A2-AA64-02BF94B7DE00 BA48E7FA-2519-4357-8EE0-6FCA48B55432 46633430-9F57-4A6F-AD0C-09BAAA28CD76 02A99806-1AF0-43AD-8D67-175545735DB7}

EE470AE8-2B2F-4EF9-9224-AD84781C783F,Description,subst
{1}

EE470AE8-2B2F-4EF9-9224-AD84781C783F,DisplayName,subst
{1}

EE470AE8-2B2F-4EF9-9224-AD84781C783F,ID
{}

EE470AE8-2B2F-4EF9-9224-AD84781C783F,Name
{Gadget Factory Apps}

EE470AE8-2B2F-4EF9-9224-AD84781C783F,ShowSetupType
{Yes}

EEB67E3E-293A-402F-92B8-1C935A51EB85,Active
{Yes}

EEB67E3E-293A-402F-92B8-1C935A51EB85,CheckCondition
{6}

EEB67E3E-293A-402F-92B8-1C935A51EB85,Component
{}

EEB67E3E-293A-402F-92B8-1C935A51EB85,FailureFocus
{}

EEB67E3E-293A-402F-92B8-1C935A51EB85,FailureMessage
{}

EEB67E3E-293A-402F-92B8-1C935A51EB85,ID
{}

EEB67E3E-293A-402F-92B8-1C935A51EB85,Include
{0}

EEB67E3E-293A-402F-92B8-1C935A51EB85,ObjectID
{02A99806-1AF0-43AD-8D67-175545735DB7}

EEB67E3E-293A-402F-92B8-1C935A51EB85,Operator
{is active}

F0AB0978-2913-406A-AA05-8444A744A0A6,Active
{Yes}

F0AB0978-2913-406A-AA05-8444A744A0A6,Component
{}

F0AB0978-2913-406A-AA05-8444A744A0A6,Conditions
{0 conditions}

F0AB0978-2913-406A-AA05-8444A744A0A6,ExecuteAction
{1}

F0AB0978-2913-406A-AA05-8444A744A0A6,ID
{}

F0AB0978-2913-406A-AA05-8444A744A0A6,IgnoreErrors
{No}

F0AB0978-2913-406A-AA05-8444A744A0A6,Include
{0}

F0AB0978-2913-406A-AA05-8444A744A0A6,ShowConsoleProgress
{Yes}

F0AB0978-2913-406A-AA05-8444A744A0A6,UpdateFilePercentage
{No}

F0AB0978-2913-406A-AA05-8444A744A0A6,UpdateFileText
{No}

F4D23BDB-0090-425F-A7DD-8824677B0F93,Active
{Yes}

F4D23BDB-0090-425F-A7DD-8824677B0F93,CheckCondition
{3}

F4D23BDB-0090-425F-A7DD-8824677B0F93,Component
{}

F4D23BDB-0090-425F-A7DD-8824677B0F93,FailureFocus
{}

F4D23BDB-0090-425F-A7DD-8824677B0F93,FailureMessage
{}

F4D23BDB-0090-425F-A7DD-8824677B0F93,ID
{}

F4D23BDB-0090-425F-A7DD-8824677B0F93,Include
{0}

F4D23BDB-0090-425F-A7DD-8824677B0F93,Script
{!<%UpgradeInstall%> || <%PreviousInstallCount%> != 1}

F5991CC4-CF8C-439E-BAD9-71B40786A387,Active
{Yes}

F5991CC4-CF8C-439E-BAD9-71B40786A387,CheckCondition
{6}

F5991CC4-CF8C-439E-BAD9-71B40786A387,Component
{}

F5991CC4-CF8C-439E-BAD9-71B40786A387,FailureFocus
{}

F5991CC4-CF8C-439E-BAD9-71B40786A387,FailureMessage
{}

F5991CC4-CF8C-439E-BAD9-71B40786A387,ID
{}

F5991CC4-CF8C-439E-BAD9-71B40786A387,Include
{0}

F5991CC4-CF8C-439E-BAD9-71B40786A387,MatchCase
{Yes}

F5991CC4-CF8C-439E-BAD9-71B40786A387,Operator
{equals}

F5991CC4-CF8C-439E-BAD9-71B40786A387,String1
{<%OpMode%>}

F5991CC4-CF8C-439E-BAD9-71B40786A387,String2
{ModeExpert}

F670D37D-90C2-40BE-B774-966979C96B66,Active
{Yes}

F670D37D-90C2-40BE-B774-966979C96B66,Attributes
{}

F670D37D-90C2-40BE-B774-966979C96B66,CompressionMethod
{}

F670D37D-90C2-40BE-B774-966979C96B66,Destination
{<%InstallDir%>}

F670D37D-90C2-40BE-B774-966979C96B66,DisplayName
{}

F670D37D-90C2-40BE-B774-966979C96B66,FileSize
{112869053}

F670D37D-90C2-40BE-B774-966979C96B66,FileUpdateMethod
{0}

F670D37D-90C2-40BE-B774-966979C96B66,FollowDirLinks
{Yes}

F670D37D-90C2-40BE-B774-966979C96B66,FollowFileLinks
{No}

F670D37D-90C2-40BE-B774-966979C96B66,ID
{}

F670D37D-90C2-40BE-B774-966979C96B66,Name
{Java}

F670D37D-90C2-40BE-B774-966979C96B66,Permissions
{}

F670D37D-90C2-40BE-B774-966979C96B66,SaveFiles
{}

F670D37D-90C2-40BE-B774-966979C96B66,Size
{}

F670D37D-90C2-40BE-B774-966979C96B66,Version
{}

F9667A19-B7E9-4F24-9084-889AEC9B9100,Active
{Yes}

F9667A19-B7E9-4F24-9084-889AEC9B9100,CheckCondition
{6}

F9667A19-B7E9-4F24-9084-889AEC9B9100,Component
{}

F9667A19-B7E9-4F24-9084-889AEC9B9100,FailureFocus
{}

F9667A19-B7E9-4F24-9084-889AEC9B9100,FailureMessage
{}

F9667A19-B7E9-4F24-9084-889AEC9B9100,ID
{}

F9667A19-B7E9-4F24-9084-889AEC9B9100,Include
{0}

F9667A19-B7E9-4F24-9084-889AEC9B9100,Operator
{true}

F9667A19-B7E9-4F24-9084-889AEC9B9100,String
{<%ViewReadme%>}

FB1190F0-E47F-40E4-9618-7C3B4F712259,Active
{Yes}

FB1190F0-E47F-40E4-9618-7C3B4F712259,Component
{}

FB1190F0-E47F-40E4-9618-7C3B4F712259,Conditions
{0 conditions}

FB1190F0-E47F-40E4-9618-7C3B4F712259,ExecuteAction
{5}

FB1190F0-E47F-40E4-9618-7C3B4F712259,ID
{}

FB1190F0-E47F-40E4-9618-7C3B4F712259,IgnoreErrors
{No}

FB1190F0-E47F-40E4-9618-7C3B4F712259,Include
{0}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,Active
{Yes}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,AddToUninstall
{Yes}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,Alias
{MakeDefaultWriteSPIFlashQuit default}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,Component
{}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,Conditions
{2 conditions}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,DataType
{String}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,ExecuteAction
{1}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,ID
{}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,IgnoreErrors
{No}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,Include
{0}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,Key
{Papilio Loader bitstream\shell}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,Name
{}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,RestoreOnUninstall
{No}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,RootKey
{HKEY_CLASSES_ROOT}

FD7C6529-7FB1-4694-9E2C-CC642F91BCEF,Value
{WritePermanently}

FD9020C4-ED13-41E1-8AD8-0B14BC60A740,Active
{Yes}

FD9020C4-ED13-41E1-8AD8-0B14BC60A740,Alias
{Finish Actions}

FD9020C4-ED13-41E1-8AD8-0B14BC60A740,Conditions
{0 conditions}

FD9020C4-ED13-41E1-8AD8-0B14BC60A740,ID
{}

FDF685FD-6987-4870-8AE2-E6E2B2B04E4B,Active
{Yes}

FDF685FD-6987-4870-8AE2-E6E2B2B04E4B,Component
{}

FDF685FD-6987-4870-8AE2-E6E2B2B04E4B,Conditions
{}

FDF685FD-6987-4870-8AE2-E6E2B2B04E4B,ExecuteAction
{1}

FDF685FD-6987-4870-8AE2-E6E2B2B04E4B,ID
{}

FDF685FD-6987-4870-8AE2-E6E2B2B04E4B,IgnoreErrors
{No}

FDF685FD-6987-4870-8AE2-E6E2B2B04E4B,Include
{0}

FE0EF106-EE02-41E3-B3E6-EB3E3A6BC93C,Active
{Yes}

FE0EF106-EE02-41E3-B3E6-EB3E3A6BC93C,Alias
{Install Papilio Drivers Actions}

FE0EF106-EE02-41E3-B3E6-EB3E3A6BC93C,Conditions
{1 condition}

FE0EF106-EE02-41E3-B3E6-EB3E3A6BC93C,ID
{}

FFA92858-5767-41B2-885E-B4EB514D796B,Active
{Yes}

FFA92858-5767-41B2-885E-B4EB514D796B,Alias
{Cancel Actions}

FFA92858-5767-41B2-885E-B4EB514D796B,Conditions
{}

FFA92858-5767-41B2-885E-B4EB514D796B,ID
{}

FreeBSD-4-x86,Active
{No}

FreeBSD-4-x86,BuildSeparateArchives
{No}

FreeBSD-4-x86,DefaultDirectoryPermission
{0755}

FreeBSD-4-x86,DefaultFilePermission
{0755}

FreeBSD-4-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

FreeBSD-4-x86,FallBackToConsole
{Yes}

FreeBSD-4-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

FreeBSD-4-x86,InstallMode
{Standard}

FreeBSD-4-x86,InstallType
{Typical}

FreeBSD-4-x86,ProgramExecutable
{}

FreeBSD-4-x86,ProgramFolderAllUsers
{No}

FreeBSD-4-x86,ProgramFolderName
{<%AppName%>}

FreeBSD-4-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

FreeBSD-4-x86,ProgramName
{}

FreeBSD-4-x86,ProgramReadme
{<%InstallDir%>/README.txt}

FreeBSD-4-x86,PromptForRoot
{Yes}

FreeBSD-4-x86,RequireRoot
{No}

FreeBSD-4-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

FreeBSD-5-x86,Active
{No}

FreeBSD-5-x86,BuildSeparateArchives
{No}

FreeBSD-5-x86,DefaultDirectoryPermission
{0755}

FreeBSD-5-x86,DefaultFilePermission
{0755}

FreeBSD-5-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

FreeBSD-5-x86,FallBackToConsole
{Yes}

FreeBSD-5-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

FreeBSD-5-x86,InstallMode
{Standard}

FreeBSD-5-x86,InstallType
{Typical}

FreeBSD-5-x86,ProgramExecutable
{}

FreeBSD-5-x86,ProgramFolderAllUsers
{No}

FreeBSD-5-x86,ProgramFolderName
{<%AppName%>}

FreeBSD-5-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

FreeBSD-5-x86,ProgramName
{}

FreeBSD-5-x86,ProgramReadme
{<%InstallDir%>/README.txt}

FreeBSD-5-x86,PromptForRoot
{Yes}

FreeBSD-5-x86,RequireRoot
{No}

FreeBSD-5-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

FreeBSD-6-x86,Active
{No}

FreeBSD-6-x86,BuildSeparateArchives
{No}

FreeBSD-6-x86,DefaultDirectoryPermission
{0755}

FreeBSD-6-x86,DefaultFilePermission
{0755}

FreeBSD-6-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

FreeBSD-6-x86,FallBackToConsole
{Yes}

FreeBSD-6-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

FreeBSD-6-x86,InstallMode
{Standard}

FreeBSD-6-x86,InstallType
{Typical}

FreeBSD-6-x86,ProgramExecutable
{}

FreeBSD-6-x86,ProgramFolderAllUsers
{No}

FreeBSD-6-x86,ProgramFolderName
{<%AppName%>}

FreeBSD-6-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

FreeBSD-6-x86,ProgramName
{}

FreeBSD-6-x86,ProgramReadme
{<%InstallDir%>/README.txt}

FreeBSD-6-x86,PromptForRoot
{Yes}

FreeBSD-6-x86,RequireRoot
{No}

FreeBSD-6-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

FreeBSD-7-x86,Active
{No}

FreeBSD-7-x86,BuildSeparateArchives
{No}

FreeBSD-7-x86,DefaultDirectoryPermission
{0755}

FreeBSD-7-x86,DefaultFilePermission
{0755}

FreeBSD-7-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

FreeBSD-7-x86,FallBackToConsole
{Yes}

FreeBSD-7-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

FreeBSD-7-x86,InstallMode
{Standard}

FreeBSD-7-x86,InstallType
{Typical}

FreeBSD-7-x86,ProgramExecutable
{}

FreeBSD-7-x86,ProgramFolderAllUsers
{No}

FreeBSD-7-x86,ProgramFolderName
{<%AppName%>}

FreeBSD-7-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

FreeBSD-7-x86,ProgramName
{}

FreeBSD-7-x86,ProgramReadme
{<%InstallDir%>/README.txt}

FreeBSD-7-x86,PromptForRoot
{Yes}

FreeBSD-7-x86,RequireRoot
{No}

FreeBSD-7-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

HPUX-hppa,Active
{No}

HPUX-hppa,BuildSeparateArchives
{No}

HPUX-hppa,DefaultDirectoryPermission
{0755}

HPUX-hppa,DefaultFilePermission
{0755}

HPUX-hppa,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

HPUX-hppa,FallBackToConsole
{Yes}

HPUX-hppa,InstallDir
{<%Home%>/<%ShortAppName%>}

HPUX-hppa,InstallMode
{Standard}

HPUX-hppa,InstallType
{Typical}

HPUX-hppa,ProgramExecutable
{}

HPUX-hppa,ProgramFolderAllUsers
{No}

HPUX-hppa,ProgramFolderName
{<%AppName%>}

HPUX-hppa,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

HPUX-hppa,ProgramName
{}

HPUX-hppa,ProgramReadme
{<%InstallDir%>/README.txt}

HPUX-hppa,PromptForRoot
{Yes}

HPUX-hppa,RequireRoot
{No}

HPUX-hppa,RootInstallDir
{/usr/local/<%ShortAppName%>}

Linux-x86,Active
{No}

Linux-x86,BuildSeparateArchives
{No}

Linux-x86,DefaultDirectoryPermission
{0755}

Linux-x86,DefaultFilePermission
{0755}

Linux-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

Linux-x86,FallBackToConsole
{Yes}

Linux-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

Linux-x86,InstallMode
{Standard}

Linux-x86,InstallType
{Typical}

Linux-x86,ProgramExecutable
{}

Linux-x86,ProgramFolderAllUsers
{No}

Linux-x86,ProgramFolderName
{<%AppName%>}

Linux-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

Linux-x86,ProgramName
{}

Linux-x86,ProgramReadme
{<%InstallDir%>/README.txt}

Linux-x86,PromptForRoot
{Yes}

Linux-x86,RequireRoot
{No}

Linux-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

Linux-x86_64,Active
{No}

Linux-x86_64,BuildSeparateArchives
{No}

Linux-x86_64,DefaultDirectoryPermission
{0755}

Linux-x86_64,DefaultFilePermission
{0755}

Linux-x86_64,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

Linux-x86_64,FallBackToConsole
{Yes}

Linux-x86_64,InstallDir
{<%Home%>/<%ShortAppName%>}

Linux-x86_64,InstallMode
{Standard}

Linux-x86_64,InstallType
{Typical}

Linux-x86_64,ProgramExecutable
{}

Linux-x86_64,ProgramFolderAllUsers
{No}

Linux-x86_64,ProgramFolderName
{<%AppName%>}

Linux-x86_64,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

Linux-x86_64,ProgramName
{}

Linux-x86_64,ProgramReadme
{<%InstallDir%>/README.txt}

Linux-x86_64,PromptForRoot
{Yes}

Linux-x86_64,RequireRoot
{No}

Linux-x86_64,RootInstallDir
{/usr/local/<%ShortAppName%>}

Solaris-sparc,Active
{No}

Solaris-sparc,BuildSeparateArchives
{No}

Solaris-sparc,DefaultDirectoryPermission
{0755}

Solaris-sparc,DefaultFilePermission
{0755}

Solaris-sparc,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

Solaris-sparc,FallBackToConsole
{Yes}

Solaris-sparc,InstallDir
{<%Home%>/<%ShortAppName%>}

Solaris-sparc,InstallMode
{Standard}

Solaris-sparc,InstallType
{Typical}

Solaris-sparc,ProgramExecutable
{}

Solaris-sparc,ProgramFolderAllUsers
{No}

Solaris-sparc,ProgramFolderName
{<%AppName%>}

Solaris-sparc,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

Solaris-sparc,ProgramName
{}

Solaris-sparc,ProgramReadme
{<%InstallDir%>/README.txt}

Solaris-sparc,PromptForRoot
{Yes}

Solaris-sparc,RequireRoot
{No}

Solaris-sparc,RootInstallDir
{/usr/local/<%ShortAppName%>}

Solaris-x86,Active
{No}

Solaris-x86,BuildSeparateArchives
{No}

Solaris-x86,DefaultDirectoryPermission
{0755}

Solaris-x86,DefaultFilePermission
{0755}

Solaris-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

Solaris-x86,FallBackToConsole
{Yes}

Solaris-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

Solaris-x86,InstallMode
{Standard}

Solaris-x86,InstallType
{Typical}

Solaris-x86,ProgramExecutable
{}

Solaris-x86,ProgramFolderAllUsers
{No}

Solaris-x86,ProgramFolderName
{<%AppName%>}

Solaris-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

Solaris-x86,ProgramName
{}

Solaris-x86,ProgramReadme
{<%InstallDir%>/README.txt}

Solaris-x86,PromptForRoot
{Yes}

Solaris-x86,RequireRoot
{No}

Solaris-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

TarArchive,Active
{Yes}

TarArchive,BuildSeparateArchives
{No}

TarArchive,CompressionLevel
{6}

TarArchive,DefaultDirectoryPermission
{0755}

TarArchive,DefaultFilePermission
{0755}

TarArchive,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

TarArchive,FallBackToConsole
{Yes}

TarArchive,InstallDir
{<%Home%>/<%ShortAppName%>}

TarArchive,InstallMode
{Standard}

TarArchive,InstallType
{Typical}

TarArchive,OutputFileName
{<%ShortAppName%>-<%Version%>.tar.gz}

TarArchive,ProgramExecutable
{}

TarArchive,ProgramFolderAllUsers
{No}

TarArchive,ProgramFolderName
{<%AppName%>}

TarArchive,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

TarArchive,ProgramName
{}

TarArchive,ProgramReadme
{<%InstallDir%>/README.txt}

TarArchive,PromptForRoot
{Yes}

TarArchive,RequireRoot
{No}

TarArchive,RootInstallDir
{/usr/local/<%ShortAppName%>}

TarArchive,VirtualTextMap
{<%InstallDir%> <%ShortAppName%>}

Windows,Active
{Yes}

Windows,BuildSeparateArchives
{No}

Windows,Executable
{<%AppName%>-<%Version%>-Setup<%Ext%>}

Windows,FileDescription
{<%AppName%> <%Version%> Setup}

Windows,IncludeTWAPI
{No}

Windows,InstallDir
{<%PROGRAM_FILES%>/Gadget Factory}

Windows,InstallMode
{Standard}

Windows,InstallType
{Typical}

Windows,LastRequireAdministrator
{Yes}

Windows,ProgramExecutable
{}

Windows,ProgramFolderAllUsers
{No}

Windows,ProgramFolderName
{Gadget Factory}

Windows,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

Windows,ProgramName
{}

Windows,ProgramReadme
{<%InstallDir%>/README.txt}

Windows,RequireAdministrator
{Yes}

Windows,UseUncompressedBinaries
{No}

Windows,WindowsIcon
{Setup Blue Screen.ico}

ZipArchive,Active
{Yes}

ZipArchive,BuildSeparateArchives
{No}

ZipArchive,CompressionLevel
{6}

ZipArchive,DefaultDirectoryPermission
{0755}

ZipArchive,DefaultFilePermission
{0755}

ZipArchive,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

ZipArchive,FallBackToConsole
{Yes}

ZipArchive,InstallDir
{<%Home%>/<%ShortAppName%>}

ZipArchive,InstallMode
{Standard}

ZipArchive,InstallType
{Typical}

ZipArchive,OutputFileName
{<%ShortAppName%>-<%Version%>.zip}

ZipArchive,ProgramExecutable
{}

ZipArchive,ProgramFolderAllUsers
{No}

ZipArchive,ProgramFolderName
{<%AppName%>}

ZipArchive,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

ZipArchive,ProgramName
{}

ZipArchive,ProgramReadme
{<%InstallDir%>/README.txt}

ZipArchive,PromptForRoot
{Yes}

ZipArchive,RequireRoot
{No}

ZipArchive,RootInstallDir
{/usr/local/<%ShortAppName%>}

ZipArchive,VirtualTextMap
{<%InstallDir%> <%ShortAppName%>}

}


proc RaiseStep { wizard id } {
set widget [$id widget get Caption]
if {$widget ne ""} {
if {![string length [::InstallJammer::GetText $id Caption]]} {
grid remove $widget
} else {
grid $widget
}
}

set widget [$id widget get Message]
if {$widget ne ""} {
if {![string length [::InstallJammer::GetText $id Message]]} {
grid remove $widget
} else {
grid $widget
}
}

set widget [$id widget get ClientArea]
if {$widget ne ""} {
grid configure $wizard.buttons -pady {18 5}
} else {
grid configure $wizard.buttons -pady 5
}
}

proc CreateWindow.StartCopyingFiles {wizard id} {
    CreateWindow.CustomTextPane1 $wizard $id

    set text [$id widget get Text]
    $text configure -bg [style configure . -background]
}

proc CreateWindow.ChooseComponents {wizard id} {
    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    ScrolledWindow $base.sw
    grid $base.sw -row 0 -column 0 -sticky news -pady [list 4 0]

    set tree [OptionTree $base.tree -bd 2 -relief sunken  -background #FFFFFF -highlightthickness 0 -toggleselect 0]
    $base.sw setwidget $tree
    $id widget set ComponentTree -widget $tree -type tree

    labelframe $base.frame -relief groove -bd 2
    grid $base.frame -row 0 -column 1 -sticky news  -padx [list 10 0]
    $id widget set DescriptionLabel -widget $base.frame

    grid rowconfigure    $base.frame 0 -weight 1
    grid columnconfigure $base.frame 0 -weight 1

    Label $base.frame.desc -width 25 -autowrap 1 -anchor nw -justify left
    grid $base.frame.desc -row 0 -column 0 -sticky news -padx 10 -pady 5
    $id widget set DescriptionText -widget $base.frame.desc
}

proc CreateWindow.CopyFiles {wizard id} {
    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    set frame [frame $base.frame]
    grid $frame -row 0 -column 0 -sticky new

    grid rowconfigure    $frame 1 -weight 1
    grid columnconfigure $frame 0 -weight 1

    Label $frame.file -anchor w -elide 1 -ellipsis {[...]} -elideside center
    grid  $frame.file -row 0 -column 0 -sticky new -padx [list 0 10]
    $id widget set FileLabel -widget $frame.file

    ttk::progressbar $frame.progress
    grid $frame.progress -row 1 -column 0 -sticky ew
    $id widget set ProgressValue -widget $frame.progress -type progress
}

proc CreateWindow.Welcome {wizard id} {
    CreateWindow.CustomBlankPane1 $wizard $id
}

proc CreateWindow.SetupComplete {wizard id} {
    CreateWindow.CustomBlankPane1 $wizard $id
}

proc CreateWindow.SetupComplete {wizard id} {
    CreateWindow.CustomBlankPane1 $wizard $id
}

proc CreateWindow.SelectDestination {wizard id} {
    variable info

    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    set varName [$id get VirtualText]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    labelframe $base.frame -relief groove -bd 2
    grid $base.frame -row 0 -column 0 -sticky sew
    $id widget set DestinationLabel -widget $base.frame

    grid rowconfigure    $base.frame 0 -weight 1
    grid columnconfigure $base.frame 0 -weight 1

    Label $base.frame.destination -anchor nw -elide 1 -elideside center  -ellipsis {[...]}
    grid  $base.frame.destination -row 0 -column 0 -sticky ew -padx 5 -pady 3
    $id widget set Destination -widget $base.frame.destination
    if {$varName ne ""} {
        $id setText all Destination "<%Dir <%$varName%>%>"
    }

    Button $base.frame.browse -command  [list ::InstallAPI::PromptForDirectory -virtualtext $varName]
    grid $base.frame.browse -row 0 -column 1 -sticky nw -padx 5 -pady [list 0 5]
    $id widget set BrowseButton -widget $base.frame.browse
}

proc CreateWindow.SetupType {wizard id} {
    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    ScrolledWindow $base.sw
    grid $base.sw -row 0 -column 0 -sticky news -pady [list 4 0]

    ListBox $base.list -bd 2 -relief sunken -background #FFFFFF  -highlightthickness 0 -selectmode single -selectfill 1 -padx 0
    $base.sw setwidget $base.list
    $id widget set SetupTypeListBox -widget $base.list -type listbox

    labelframe $base.frame -relief groove -bd 2
    grid $base.frame -row 0 -column 1 -sticky news -padx [list 10 0]
    $id widget set DescriptionLabel -widget $base.frame

    grid rowconfigure    $base.frame 0 -weight 1
    grid columnconfigure $base.frame 0 -weight 1

    Label $base.frame.desc -width 25 -autowrap 1 -anchor nw -justify left
    grid $base.frame.desc -row 0 -column 0 -sticky news -padx 10 -pady 5
    $id widget set DescriptionText -widget $base.frame.desc

    if {[info exists ::InstallJammer]} {
        $base.list insert end #auto -text "Typical"
        $base.list selection set 0

        ::InstallJammer::SetVirtualText $id DescriptionText  "Program will be installed with the most common options."
        return
    }
}

proc CreateWindow.CopyFiles {wizard id} {
    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    set frame [frame $base.frame]
    grid $frame -row 0 -column 0 -sticky new

    grid rowconfigure    $frame 1 -weight 1
    grid columnconfigure $frame 0 -weight 1

    Label $frame.file -anchor w -elide 1 -ellipsis {[...]} -elideside center
    grid  $frame.file -row 0 -column 0 -sticky new -padx [list 0 10]
    $id widget set FileLabel -widget $frame.file

    ttk::progressbar $frame.progress
    grid $frame.progress -row 1 -column 0 -sticky ew
    $id widget set ProgressValue -widget $frame.progress -type progress
}

proc CreateWindow.CustomTextPane1 {wizard id} {
    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    frame $base.frame
    grid  $base.frame -row 0 -column 0 -sticky news
    
    grid rowconfigure    $base.frame 0 -weight 1
    grid columnconfigure $base.frame 0 -weight 1

    if {![$id get TextFont font]} { set font TkTextFont }

    Text $base.frame.text  -state readonly -bg #FFFFFF -font $font -wrap word -highlightthickness 0  -yscrollcommand "$base.frame.vs set"  -xscrollcommand "$base.frame.hs set"
    grid $base.frame.text -row 0 -column 0 -sticky news
    $id widget set Text -widget $base.frame.text

    ttk::scrollbar $base.frame.vs -command "$base.frame.text yview"
    grid $base.frame.vs -row 0 -column 1 -sticky ns

    ttk::scrollbar $base.frame.hs -command "$base.frame.text xview"  -orient horizontal
    grid $base.frame.hs -row 1 -column 0 -sticky ew
}

proc CreateWindow.CustomBlankPane2 {wizard id} {
    set base  [$wizard widget get $id]
    set frame $base.titleframe

    grid rowconfigure    $base 3 -weight 1
    grid columnconfigure $base 0 -weight 1

    frame $frame -bd 0 -relief flat -background #FFFFFF
    grid  $frame -row 0 -column 0 -sticky nsew

    grid rowconfigure    $frame 1 -weight 1
    grid columnconfigure $frame 0 -weight 1

    Label $frame.title -background #FFFFFF -anchor nw -justify left  -autowrap 1 -font TkCaptionFont  -textvariable [$wizard variable $id -text1]
    grid $frame.title -row 0 -column 0 -sticky new -padx 5 -pady 5
    $id widget set Title -widget $frame.title

    Label $frame.subtitle -background #FFFFFF -anchor nw -autowrap 1  -justify left -textvariable [$wizard variable $id -text2]
    grid $frame.subtitle -row 1 -column 0 -sticky new -padx [list 20 5]
    $id widget set Subtitle -widget $frame.subtitle

    label $frame.icon -borderwidth 0 -background #FFFFFF -anchor c
    grid  $frame.icon -row 0 -column 1 -rowspan 2
    $id widget set Icon -widget $frame.icon -type image

    Separator $base.separator -relief groove -orient horizontal
    grid $base.separator -row 1 -column 0 -sticky ew 

    Label $base.caption -anchor nw -justify left -autowrap 1  -textvariable [$wizard variable $id -text3]
    grid $base.caption -row 2 -sticky nsew -padx 8 -pady [list 8 4]
    $id widget set Caption -widget $base.caption

    frame $base.clientarea
    grid  $base.clientarea -row 3 -sticky nsew -padx 8 -pady 4
    $id widget set ClientArea -widget $base.clientarea -type frame

    Label $base.message -anchor nw -justify left -autowrap 1  -textvariable [$wizard variable $id -text4]
    grid $base.message -row 4 -sticky nsew -padx 8 -pady [list 4 8]
    $id widget set Message -widget $base.message
}

proc CreateWindow.CustomBlankPane1 {wizard id} {
    set base [$wizard widget get $id]

    grid rowconfigure    $base 1 -weight 1
    grid columnconfigure $base 1 -weight 1

    label $base.image -borderwidth 0 -background #FFFFFF
    grid  $base.image -row 0 -column 0 -rowspan 2 -sticky nw
    $id widget set Image -type image -widget $base.image

    Label $base.title -height 3 -bg #FFFFFF -font TkCaptionFont  -autowrap 1 -anchor nw -justify left
    grid $base.title -row 0 -column 1 -sticky ew -padx 20 -pady [list 20 10]
    $id widget set Caption -type text -widget $base.title

    Label $base.message -bg #FFFFFF -autowrap 1 -anchor nw -justify left
    grid  $base.message -row 1 -column 1 -sticky news -padx 20
    $id widget set Message -type text -widget $base.message

    Separator $base.sep -orient horizontal
    grid $base.sep -row 2 -column 0 -columnspan 2 -sticky ew
}


array set ::InstallJammer::files {files.tcl {proc ::InstallJammer::InitFiles {} {
File ::F0786605-C68B-4B80-B494-DAED70E38E6B -name Application -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%> -type dir -attributes 0000 -filemethod 0
File ::41E15C35-89B5-4121-808C-1515C95516FA -name Arcade-Blaster -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster -type dir -attributes 0000 -filemethod 0
File ::793CFE62-8164-4085-9C27-018AFD2CCCB3 -name .classpath -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster -size 423 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::445E249E-3CC0-4EC8-907C-D8FAB303EB0F -name .project -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster -size 586 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::87801E7B-E6E9-48CE-822A-AA97CC38AC4F -name arcade-blaster.exe -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster -size 236885 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::D1391BBE-8245-4680-B496-9021A2FA1BA6 -name .settings -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/.settings -type dir -attributes 0000 -filemethod 0
File ::51DB4975-00E0-4608-AEE1-BFC223B0F0A1 -name org.eclipse.jdt.core.prefs -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/.settings -size 629 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::1CDFAE96-8FA8-4540-A37A-1330773387BF -name hardware -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware -type dir -attributes 0000 -filemethod 0
File ::3F7A1387-F96A-4224-A078-D9B23F82AA1D -name Hardware.xml -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware -size 1362 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::E8A5AC92-E28D-497A-B8D2-A921524B94AF -name Platforms.xml -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware -size 721 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::9DF73229-D6EC-434B-8893-52B8AA421208 -name frogger -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware/frogger -type dir -attributes 0000 -filemethod 0
File ::BA4BB8FB-BEFA-417B-BAEA-22B6ADA52931 -name frogger_hardware_p1_500K.bit -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware/frogger -size 283873 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::25C01055-4F68-42D6-B159-4BC42898B173 -name frogger_hardware_p1_500K_bd.bmm -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware/frogger -size 4476 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::2C5651BF-8DF8-4EE9-B254-3F60659DAD57 -name pacman -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware/pacman -type dir -attributes 0000 -filemethod 0
File ::1943495D-F265-47B2-AD2F-BD8C4A416302 -name pacman_hardware_p1_500K.bit -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware/pacman -size 283867 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::C877E9C0-3E5B-4E8A-9004-3A2B7AD4D216 -name pacman_hardware_p1_500K_bd.bmm -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware/pacman -size 3820 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::858CCBFC-CE9D-4702-ABBA-48892B5215D9 -name pacman_hardware_papilio_logic_lx9.bit -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware/pacman -size 340695 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::3BC8E5D1-883B-4426-B2DA-CCCA74AC2389 -name pacman_hardware_papilio_logic_lx9_bd.bmm -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware/pacman -size 4603 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::339B056C-EBF3-42F9-BDC9-55B4DF7FBACF -name scramble -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware/scramble -type dir -attributes 0000 -filemethod 0
File ::2B677746-A329-4548-8B56-73E330FC9876 -name scramble_hardware_p1_500K.bit -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware/scramble -size 283873 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::93C6A7A5-F417-4E58-A911-83963E422ACA -name scramble_hardware_p1_500K_bd.bmm -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/hardware/scramble -size 4476 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::AD3C7F6F-AB39-44C0-ACE0-6C9FC97F9B0B -name help -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -type dir -attributes 0000 -filemethod 0
File ::2C5F051F-9718-4946-887C-0B8468E792BF -name amidars.html -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -size 3263 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::D2B4A5C6-FCAD-436A-B050-9F8A3FC2FE12 -name Controls.xml -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -size 3270 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::DB8C606C-31BF-471D-8E6D-54B273F51546 -name crush2.html -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -size 3171 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::E3CE1B15-B23B-4DDE-9838-33B53F51EC87 -name froggers2.html -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -size 2032 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::F28351BB-8EB2-4A77-B8D3-72A533103AB7 -name gorkans.html -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -size 1776 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::1F7556B9-6E0D-4322-AC8E-B31FC2A64274 -name index.html -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -size 14882 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::F21086E0-1AC5-4E4C-97CF-A5AECD04BD35 -name lizwiz.html -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -size 1527 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::CE0A406D-E675-43DA-B40E-51430EB923F2 -name pacman.html -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -size 2494 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::CD2B8BED-761C-493E-B834-F6E5A2BEE1DB -name pongdemo.html -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -size 836 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::ED4D5DE4-2FBA-4CE0-99E9-476756A9780A -name scramble.html -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -size 2219 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::A68D24C7-CFA3-4AC2-8248-68F00B7DFA7C -name theend.html -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help -size 2323 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::4702F516-780F-4739-8F04-B9EE89853F46 -name images -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/images -type dir -attributes 0000 -filemethod 0
File ::909DBE94-9A59-4351-8017-ECEFD5368401 -name amidars-scrn.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/images -size 4815 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::F379CA31-DBCC-4244-9F73-9B5F84B54A49 -name arcadecursorkeys.jpg -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/images -size 5402 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::B8D8A508-DBA2-4BCE-AC38-4EDC25128279 -name atari2600.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/images -size 35176 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::F1FB0360-555D-43CF-AA5F-77631DA57603 -name crush2-scrn.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/images -size 19278 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::D2AFF440-1570-4D20-B1FC-D181320D20CB -name frogger-scrn.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/images -size 5324 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::AC05C378-0512-4C1C-82E0-4220A51E0A8B -name gorkans-scrn.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/images -size 42428 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::28C50011-4A84-4EDF-84C1-58780F265D4C -name lizwiz-scrn.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/images -size 12830 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::0C2E934E-5D60-46E2-95CF-E65367819589 -name pacman-scrn.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/images -size 32918 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::75C186F2-CFF1-4F11-A253-DCEC48BA82B9 -name scramble-scrn.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/images -size 12323 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::96E59823-E5DC-4E52-8338-8637B0431F64 -name theend-scrn.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/images -size 8281 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::29457B0F-880B-4C2D-8835-2FA9AD4E166F -name index_files -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/index_files -type dir -attributes 0000 -filemethod 0
File ::63AED3BA-7579-4A1C-9BF9-228B53866396 -name arcadeintegration.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/index_files -size 105289 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::AC17152D-1536-4292-98D2-D877A2083A04 -name game_cantplay.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/index_files -size 3446 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::BFD399C3-5A0D-4FF0-A9DE-752079C9E672 -name game_checkbox.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/index_files -size 161 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::089A3EC1-F984-41D2-9407-37A6B00E46D7 -name game_installed.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/index_files -size 3059 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::7BF7493A-2141-4107-8169-09A903CC1C3D -name game_supported.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/index_files -size 3012 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::418CD3DB-6D0D-459C-BF24-09B69F01A6BA -name gamepadgui.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/index_files -size 169601 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::61A5226A-B9E4-41B0-8895-D6CA10DBBECD -name gfGrey.css -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/index_files -size 8366 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::68191389-7E13-4800-8D8F-060E921B3FA3 -name UpdateDialog.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/help/index_files -size 64097 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::83238EE8-688D-4078-9BBF-EF216BC021D0 -name images -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -type dir -attributes 0000 -filemethod 0
File ::5BE688C9-2E3B-4F86-B8D1-B98128A56AE1 -name down-button-down.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 4041 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::964C4048-9716-4693-871D-9D72DA58A80C -name down-button-highlighted.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 4151 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::5583165E-3719-4F2F-9455-23F5388B1074 -name down-button.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 4151 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::390A7C87-130B-4F96-A0B4-6716892ED7AE -name exit-button-down.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 2836 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::0B0DBDAB-7C99-4153-99AB-75A6A4E2FD38 -name exit-button-highlighted.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 2836 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::0BADCB0D-98CF-49EC-B43D-3AB46EFBD206 -name exit-button.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 2816 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::1B1FE56B-3541-42D5-8E5C-6F5E61D133D7 -name game_cantplay.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 3446 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::BEB2854B-25B9-46EE-9BF7-3A3EF1F4D8E6 -name game_installed.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 3059 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::BEB60366-4C38-4B4F-8C9D-8E82005D9941 -name game_supported.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 3012 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::D1957FDC-23E2-4CDD-9478-77449C6A4A6A -name gamepad.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 308822 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::24B7535E-3097-4C0D-919E-3A04D37756B6 -name help-button-down.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 3448 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::A16DBC7D-D7D7-48E6-BFDF-5008696ED939 -name help-button-highlighted.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 3419 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::FCFBDD7C-853E-47B9-9847-01DE9B3EA193 -name help-button.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 3419 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::7A6F5925-383E-4179-9FF9-6989F843053A -name how-to-play-button-down.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 4699 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::11A959EF-A20A-44C7-866F-909A2209CE85 -name how-to-play-button-highlighted.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 4695 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::A2B01E13-149C-4F59-B523-1AD150EFC781 -name how-to-play-button.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 4695 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::9F367719-E9C7-409A-8A83-75A18E489A57 -name install-button-down.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 8412 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::0DA341F4-D496-4D2A-875B-F12D595FA80D -name install-button-highlighted.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 8412 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::72B12C84-E0CF-40BF-8996-973A1BFEDEB9 -name install-button.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 8412 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::EFA5B043-F147-408A-8B3C-E14341CD4838 -name load-game-button-down.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 8338 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::CED43524-4BC0-48ED-9D40-42F9F5349EA7 -name load-game-button-highlighted.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 8329 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::F8E4450C-8494-4638-ACCE-4786BC601632 -name load-game-button.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 8329 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::A057022C-7D45-4D54-A8A9-D416D10D6DA5 -name prefs-button-down.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 5062 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::7AA46C28-3CD8-4F8F-A0E0-7C3DB6DCC3FF -name prefs-button-highlighted.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 5096 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::5E8403FB-0DFB-49B7-B33D-65F4D5E54F9F -name prefs-button.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 5096 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::ABFE1844-4388-4EE7-8298-3572A96B0B42 -name up-button-down.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 3674 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::33B3227C-075E-478C-8D84-42BCEBEFB33B -name up-button-highlighted.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 3864 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::245F079A-9A2D-42F0-97F5-6317203255D2 -name up-button.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 3864 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::02903BCC-0A78-4DB8-87AD-7BAD508FF478 -name update-button-down.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 4803 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::5FC18F13-89B2-45C0-9780-7BD6F3517782 -name update-button-highlighted.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 4767 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::1E5B9D9A-2689-425B-821E-A92B97EA7DE3 -name update-button.gif -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images -size 4767 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::8CC384C4-F63F-4143-9654-18C1FB878436 -name monograms -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -type dir -attributes 0000 -filemethod 0
File ::BC708F30-434E-444F-A189-9ECE4C69CA15 -name alieninvp2.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 6219 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::61B9882A-1AE5-49A4-BFFA-845AE33DC22A -name amidars.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 14621 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::CCD766A8-741C-4D7D-A956-48B2F07784B8 -name crush2.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 13190 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::9206DDE2-D3CC-4932-A8E3-E187D7204FFE -name filler.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 5825 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::3CD6F874-A6B4-4E5B-BC75-206DA2901766 -name froggers2.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 11482 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::EA6E7853-98EB-466D-81A0-B94DB11D0708 -name galaxian.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 11396 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::F2E94AA4-EEBA-44EE-8D4D-E2E310D5693F -name gorkans.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 5556 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::6D7A926B-535A-426A-A30B-A2039210CA8A -name joust.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 4099 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::64A3B80E-9ADC-4DC4-AAAB-F07126DB5BB1 -name lizwiz.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 16934 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::482DA56F-3352-4F1B-B584-99690C1A8EFB -name nologo.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 567 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::DDE8DDC7-8EDD-4FF5-8048-00FC6224B7C2 -name nonesupported.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 1060 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::93C03BB2-65D6-4541-BEBC-0EC66CFB540E -name pacman.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 11236 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::D4128AB7-DB28-4DB1-A379-314805376829 -name pongdemo.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 750 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::BA36C02F-E71D-4647-9394-4123105FA599 -name retrieving.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 637 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::B42C7554-AD4A-4A99-A46F-E02CB2DD1769 -name scobra.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 17056 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::08C2DDA1-2B85-4ABE-8A5C-9001A47F5D2D -name scramble.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 17646 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::235C0FC3-EAC3-43C9-AB31-576053935A11 -name searthin.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 6219 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::14286F76-A945-4E7A-8832-B0F447EFC3FC -name theend.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/monograms -size 14167 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::024DC907-FFFB-4128-A5F0-504C564E4C97 -name screenshots -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -type dir -attributes 0000 -filemethod 0
File ::2702C949-86E9-4BA2-A73A-47574897A191 -name alieninvp2.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 81056 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::D5677056-7ED9-4C62-A6E2-C2E32C5C785F -name amidars.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 4815 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::1E149B21-E27A-42B4-883D-83351F1C8EC8 -name crush2.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 19278 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::C01883CC-F31D-4349-9898-FC72877A4640 -name froggers2.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 5324 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::9CEFDC9C-D7E7-4300-B003-02FB30D9B309 -name galaxian.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 4390 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::1A0E17E8-28D3-46D7-9BDA-F7AECD706F42 -name gorkans.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 42428 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::5D32A4D6-ADD0-4A9D-8638-1A3D5F3D3E66 -name joust.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 4933 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::839239E1-B339-435B-A728-0E581CEE3A5C -name lizwiz.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 12830 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::79CE0004-E9C6-481C-B2E7-A6111372764E -name noneinstalled.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 3907 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::D8C7B0C9-9C20-4B52-871F-6B4C15BB231D -name noscreenshot.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 1398 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::1EEFEFE8-C234-4CF4-9CE2-A28225687F3C -name pacman.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 32918 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::8C33735C-C5CF-4554-B697-750E6A10DB0A -name pongdemo.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 45469 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::22BF2567-FAA3-488F-AA58-664080A8FD58 -name retrieving.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 637 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::1B2EAD98-054A-4033-8005-91A666C064C0 -name scobra.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 14416 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::96E34FA2-3D4F-4A8F-AB3B-35CA18E7B1E8 -name scramble.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 12323 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::0BD94F9F-6825-444E-8F12-9AA08A314931 -name searthin.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 81056 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::B9ECA222-3B41-4691-8E7E-229195E1FA13 -name theend.png -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/images/screenshots -size 8281 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::AD986C83-AA31-4717-AED3-AED3A04E3F43 -name programmer -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer -type dir -attributes 0000 -filemethod 0
File ::577E94F0-E546-4348-8BC0-05A12C21A0A1 -name bscan_spi_lx9.bit -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer -size 340698 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::792606AA-514A-45B6-A6E8-E453451C39F0 -name bscan_spi_xc3s100e.bit -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer -size 41094 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::3371E25B-DCEE-4C2E-82A7-A47BDCE8EFE0 -name bscan_spi_xc3s250e.bit -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer -size 72262 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::A39EF1F0-9040-4D23-94BB-320DEDB74E88 -name bscan_spi_xc3s500e.bit -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer -size 115346 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::2483B5C0-F193-4B51-9AED-10E2FD0BCA1D -name linux32 -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer/linux32 -type dir -attributes 0000 -filemethod 0
File ::6C2BB390-1E55-47FD-8EC9-DBEE0CC179BD -name data2mem -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer/linux32 -size 2006416 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::0692F117-F2FC-40AE-8984-835521216906 -name devlist.txt -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer/linux32 -size 3664 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::994BB39D-5F75-42F5-8E6F-EB328B6B85E3 -name papilio-prog -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer/linux32 -size 342108 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::E6FB3AC3-BB1E-4E8E-A01F-B4AD2939055E -name win32 -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer/win32 -type dir -attributes 0000 -filemethod 0
File ::BB5B4CA3-3714-4668-96E0-20C6551D6719 -name data2mem.exe -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer/win32 -size 1044480 -mtime 1340957248 -attributes 1000 -filemethod 0
File ::10A6C8DD-39EC-4F07-868B-BEED9153DF59 -name devlist.txt -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer/win32 -size 3664 -mtime 1340957249 -attributes 1000 -filemethod 0
File ::19D79A03-656C-4AE7-94E9-DACEDEE09020 -name libgcc_s_dw2-1.dll -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer/win32 -size 108032 -mtime 1340957249 -attributes 1000 -filemethod 0
File ::B76BD434-F642-4277-8F88-FF670F0BEE50 -name libstdc++-6.dll -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer/win32 -size 879630 -mtime 1340957249 -attributes 1000 -filemethod 0
File ::8762683B-C2AA-4F32-A670-1890DC1974B4 -name papilio-prog.exe -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer/win32 -size 1433787 -mtime 1340957249 -attributes 1000 -filemethod 0
File ::D928EBB9-18AD-431A-BBE9-0D54F906BA7A -name romgen.exe -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/programmer/win32 -size 75280 -mtime 1340957249 -attributes 1000 -filemethod 0
File ::D0A9A840-EC60-4416-AFDA-EE1C6AD76F47 -name roms -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/roms -type dir -attributes 0000 -filemethod 0
File ::789F9285-9220-45C9-9D07-5F5919D5A924 -name Games.xml -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/roms -size 26877 -mtime 1340957249 -attributes 1000 -filemethod 0
File ::3B1ECE95-14C8-4ADA-80D9-D09578C89A33 -name Games.xsd -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/roms -size 2688 -mtime 1340957249 -attributes 1000 -filemethod 0
File ::5312EEF5-5BE6-401D-9314-E8DF3A5E97FE -name src -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src -type dir -attributes 0000 -filemethod 0
File ::6B609D90-CB34-4961-BE4E-0988A30446C5 -name net -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net -type dir -attributes 0000 -filemethod 0
File ::7CB56837-4570-4981-8A05-8F1BFD9546B6 -name gadgetfactory -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory -type dir -attributes 0000 -filemethod 0
File ::ACC07E54-9616-4C1D-A650-CF03C8D673AB -name papilio -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio -type dir -attributes 0000 -filemethod 0
File ::65545D00-45BB-4BB6-B37C-02601C79D68B -name arcade -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -type dir -attributes 0000 -filemethod 0
File ::A5B695C1-72D3-4294-99A8-0AC1C6D21A03 -name ArcadeTheme.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 6226 -mtime 1340957249 -attributes 1000 -filemethod 0
File ::2F13B72B-9F32-4D41-A3C9-F1B6F350E2C7 -name AsyncWebImageBox.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 3860 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::64814179-E238-4E7C-BDF5-68272B884B5B -name AWTUtilitiesWrapper.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 5148 -mtime 1340957249 -attributes 1000 -filemethod 0
File ::7CA019CA-29F1-40DD-B562-010BEFF8F0E6 -name CircularImageButton.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 2211 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::FC57884C-2682-423C-BB23-747926F7E952 -name GamePadPanel.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 32925 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::7D2CB8E7-E734-4AD7-BC31-9BE4F9164971 -name GamesListbox.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 11123 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::791CA45D-045E-4F2A-9CB3-60B64CEADB5F -name HowtoPlayDialog.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 12920 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::E54F3AB5-CA79-4D42-8D88-1BA216C696F8 -name ImageButton.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 1964 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::257E0655-E056-43A0-9A33-E5D18C3DCB3C -name PapilioArcade.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 45512 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::7679CA8D-90D6-41FD-8BB6-1DF980B42EA5 -name PreferencesDialog.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 21726 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::0CA52F12-5C29-4CC5-B169-AC7B43CED9CC -name ProgressGlassPane.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 7826 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::546476BE-231C-4724-BBFD-8275F4DDB1BA -name UpdateDialog.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 46563 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::EB9C84CE-E1E4-4E40-96F3-1EB39CC0E898 -name WrJoysticksArray.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/Arcade-Blaster/src/net/gadgetfactory/papilio/arcade -size 4670 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::2CCCBE74-D693-47B1-A941-22549DF14F51 -name gadget-shared -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared -type dir -attributes 0000 -filemethod 0
File ::101E8B90-A3A9-4A26-97C6-1630C3C4AEA0 -name .classpath -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared -size 226 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::4AB6E0F5-21C5-4DEC-9D51-9E4257E51C3B -name .project -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared -size 389 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::61755484-F347-4243-9EB3-3B78AF481291 -name net -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net -type dir -attributes 0000 -filemethod 0
File ::C534A0A0-BDC2-40B8-B61E-479BC8553360 -name gadgetfactory -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory -type dir -attributes 0000 -filemethod 0
File ::DFAF099A-9AEB-4349-A84D-9035FAE9CDF4 -name shared -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -type dir -attributes 0000 -filemethod 0
File ::7C867C89-3D5A-4B30-A1AF-E5F446C242B5 -name AppSettings.class -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 3849 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::F337CD55-2567-45F6-9B0F-83C50932B6D8 -name AppSettings.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 4595 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::4A544DBA-F1E3-4936-B196-F6C00DBA1D37 -name {HelperFunctions$1.class} -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 1395 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::A539F904-D673-46B2-A2E5-275A3947A598 -name HelperFunctions.class -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 3118 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::31F8357C-267E-4AF3-B0DB-2CA004C82F2D -name HelperFunctions.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 6522 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::F46A5B75-B631-4FFA-AE62-05DD63974A70 -name MessageConsumer.class -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 185 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::11DAE8CA-6BD7-403A-9472-FB014ED4759E -name MessageConsumer.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 1153 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::CF923F26-0766-438A-8803-F21685CBAD85 -name MessageSiphon.class -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 1958 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::73646220-7EE9-4FF4-B68C-AA19B2C50D7E -name MessageSiphon.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 2861 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::B9A025F9-7539-4B48-88AE-D7645665CFE8 -name {UIHelpers$1.class} -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 865 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::38920D64-7D16-4107-956A-82517CC64341 -name {UIHelpers$2.class} -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 759 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::A35DD774-A820-4218-960D-9F26C0F10319 -name UIHelpers.class -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 13838 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::71C99024-8A94-4664-A536-E496EF035A63 -name UIHelpers.java -parent B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -directory <%InstallDir%>/gadget-shared/net/gadgetfactory/shared -size 21869 -mtime 1340957250 -attributes 1000 -filemethod 0
File ::041D369C-9A7E-4859-9FC7-E4A54FEB5554 -name {Papilio Drivers} -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers} -type dir -attributes 0000 -filemethod 0
File ::580C8216-C9F1-430A-89AD-B0D230EC3B8F -name amd64 -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/amd64} -type dir -attributes 0000 -filemethod 0
File ::34E3EACE-09C5-49D9-9107-A2C6BF0A63A1 -name ftbusui.dll -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/amd64} -size 108936 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::83F713F3-4A77-4A25-B89C-C1E851770116 -name ftcserco.dll -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/amd64} -size 65416 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::B2A8EFB6-767E-4D68-939B-AA0139360247 -name ftd2xx.lib -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/amd64} -size 18248 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::65F123FE-D2AD-498E-A71C-71938E300DD5 -name ftd2xx64.dll -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/amd64} -size 237960 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::1B7BB210-A8A1-4C5F-BFDF-92035E0C94B3 -name ftdibus.sys -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/amd64} -size 74376 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::C6A12D6C-FF80-4CD2-AFE3-809EBEFA4C8F -name ftlang.dll -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/amd64} -size 214920 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::F9EAB57F-E518-468F-8B1D-88209A137799 -name ftser2k.sys -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/amd64} -size 85384 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::12CD6D46-3168-4FD4-9E25-1AEF14080260 -name ftserui2.dll -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/amd64} -size 55176 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::08E2F2CF-644F-480A-87C1-17A7A1798F7E -name dpinstx64.exe -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers} -size 1050104 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::9C2C7B18-0D36-4D05-9270-6D3B86776B58 -name dpinstx86.exe -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers} -size 921992 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::2BCCB555-3CAE-4996-9E75-9C61F2B109A9 -name FTD2XX.H -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers} -size 27161 -mtime 1340955854 -attributes 1000 -filemethod 0
File ::1D84759C-9174-4FD6-A1D6-116809DF92B7 -name ftdibus.cat -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers} -size 12114 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::BBA92EE6-C788-4C39-B761-447192B8C5FA -name ftdibus.inf -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers} -size 5607 -mtime 1340955854 -attributes 1000 -filemethod 0
File ::FE94CFCE-2284-4EA5-84BA-3248D9DE23B7 -name ftdiport.cat -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers} -size 11210 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::D3B1D8F2-24CA-477A-938A-67890C3BCAF1 -name ftdiport.inf -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers} -size 4863 -mtime 1340955854 -attributes 1000 -filemethod 0
File ::EC71E407-D21D-4636-BC8E-ADFBB4C4FF31 -name i386 -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/i386} -type dir -attributes 0000 -filemethod 0
File ::6FFD06D9-49D3-4BFF-A615-D79C7CF68DD2 -name ftbusui.dll -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/i386} -size 105352 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::BD6C70D3-22D1-403F-A7D9-8065750AA33F -name ftcserco.dll -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/i386} -size 69000 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::00293F14-A495-4E98-A445-7172B681AC59 -name ftd2xx.dll -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/i386} -size 203144 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::5CE33E45-8C8E-421C-A679-00DE58F4B325 -name ftd2xx.lib -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/i386} -size 19966 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::F66E7A89-F137-45A2-B682-41F5DF9D0E0D -name ftdibus.sys -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/i386} -size 61704 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::3534D6D6-239B-446E-9843-AB01C9E34F21 -name ftlang.dll -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/i386} -size 201096 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::6D32320F-43F8-468A-81D6-1E89010068BB -name ftser2k.sys -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/i386} -size 73096 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::689921E8-C144-4CA1-A274-313245C5AC02 -name ftserui2.dll -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/i386} -size 52616 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::D82B53B5-0A24-4D37-ABBC-FFE13BD47201 -name install.bat -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers} -size 438 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::3B4D3ED6-07AD-44D8-9B80-51760A2C5AFC -name Static -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/Static} -type dir -attributes 0000 -filemethod 0
File ::0236FC3E-3167-4EA2-B0D7-2BD4170CFA75 -name amd64 -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/Static/amd64} -type dir -attributes 0000 -filemethod 0
File ::26B63C65-8149-447B-BF58-8DBE6EECF32D -name ftd2xx.lib -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/Static/amd64} -size 850102 -mtime 1340955854 -attributes 1000 -filemethod 0
File ::76846C6A-EB00-495D-A647-46F1AC8A7938 -name i386 -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/Static/i386} -type dir -attributes 0000 -filemethod 0
File ::C0E2BA02-F91D-480F-B4AD-5958F10B04D3 -name ftd2xx.lib -parent 0E03E517-47F4-49AB-AE47-14679C43176F -directory {<%InstallDir%>/Papilio USB Drivers/Static/i386} -size 763418 -mtime 1340955855 -attributes 1000 -filemethod 0
File ::82FD3AA2-2142-4061-AF6D-32B7CAC7DF80 -name Java -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -type dir -attributes 0000 -filemethod 0
File ::08059855-CB08-4E06-B585-5830881F6CE6 -name bin -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -type dir -attributes 0000 -filemethod 0
File ::FE82117E-D734-4CDA-9E6E-97F7527BC277 -name attach.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 10240 -mtime 1255884912 -attributes 1000 -filemethod 0
File ::B463D123-1921-4246-8A49-A52F936F16BB -name awt.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 1208320 -mtime 1255884912 -attributes 1000 -filemethod 0
File ::6778D76F-695F-4810-834B-431DE95D6A13 -name axbridge.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 114688 -mtime 1255884912 -attributes 1000 -filemethod 0
File ::4F6DC943-5006-4303-8DB2-71F999AAB8F5 -name cmm.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 192512 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::5156861A-C483-4520-B2C2-F8E0C8D66C57 -name dcpr.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 143360 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::16DE7D6F-5B42-445C-BC77-780022F41EEF -name deploy.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 77824 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::CD8942D9-C075-4CB2-A8FD-00F088E1675A -name deploytk.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 405504 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::B47C5A6C-31D8-494C-B927-7F82B4921DD2 -name dt_shmem.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 16896 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::658BA327-3752-4C2A-8013-FD349A521794 -name dt_socket.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 13312 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::EA0E0641-486C-4BA9-AE85-0BF62FA7BDCE -name eula.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 69632 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::20BC84CE-AF95-4FAF-9203-D97898B4574A -name fontmanager.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 339968 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::C47D4760-27D0-43B6-BFF9-C7FE859D677C -name hpi.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 15872 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::FA841898-79D5-424E-9CB1-1C5C111D2C06 -name hprof.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 139264 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::3D5233CB-01EB-4DDD-9340-CEADCAD25DEF -name instrument.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 98304 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::2E40BF0A-DABC-4B80-93EE-4CC316A52FBA -name ioser12.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 12800 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::5D106BA1-5E52-4955-8D52-53A354E71E62 -name j2pcsc.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 7680 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::80117D61-5737-4305-AFAD-5FCADF2122F3 -name j2pkcs11.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 41984 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::DC847B40-4487-4840-935E-0086B1AEA72A -name jaas_nt.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 10240 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::9B59EB69-52DA-4DE4-8522-1E28264D70B8 -name java-rmi.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27136 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::739ED36E-2F6B-4EC9-A640-CC226252F7D8 -name java.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 126976 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::878C8696-0D16-4DB5-A9BD-23A3CF6A7E50 -name java.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 139264 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::81C11ABF-F5FA-45F9-84DB-FA7040B89ECF -name java_crw_demo.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 14336 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::D62109B3-733A-4CE1-AC1D-D606260B7636 -name javacpl.cpl -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 73728 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::02243E1D-3529-4B2E-B07F-85DB5A142812 -name javacpl.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 53248 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::D25D7B2F-3B1F-47A5-93E7-1129AE010FE7 -name javaw.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 139264 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::2F871108-B3DC-48A4-9BB5-07DEED1CE878 -name javaws.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 143360 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::1EAD0BB0-828B-4B85-B87D-59FAF1C10802 -name jawt.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 5120 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::24940FC1-5F3B-4E11-832A-8EE759782523 -name jbroker.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 73728 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::31CEAE3A-A5CA-48FC-8B18-71822AAACA5D -name JdbcOdbc.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 36352 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::F5221F53-E0D4-40A5-B7A5-C4328FCC6D3A -name jdwp.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 167936 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::5FB7A6FA-F605-42BC-9CB2-EB42075A9276 -name jkernel.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 208896 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::E1157D28-810D-4D27-96AB-DFE80EF7DE72 -name jli.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 77824 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::316F2991-D92B-43EF-ADA5-4D3514CD62F6 -name jp2iexp.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 94208 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::855607CA-23A0-45B7-954C-E7A1719AD780 -name jp2launcher.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 16896 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::11608B3C-0640-4D7F-AE5F-6D53DD2A3B58 -name jp2native.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 8192 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::EDA4186A-F132-4C2A-B948-CDE1FF515BE1 -name jp2ssv.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 35840 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::E463047F-3039-4BB3-B4CB-6724FEF6CBD9 -name jpeg.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 147456 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::6FF56FF9-B5A7-4013-9195-97671F34420F -name jpicom.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 98304 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::66F58587-DF5A-4B58-8CF0-7C356B46160F -name jpiexp.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 110592 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::349DF200-9B8B-41EF-A9DE-8E4193C0D3FC -name jpinscp.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 98304 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::92B57C17-846A-4AE7-A96D-0DB23045C350 -name jpioji.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 65536 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::7DE6EBB2-6E79-4636-BA60-9C4470ACC524 -name jpishare.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 126976 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::17A2F04E-E7C8-45CF-928D-5B59A0B00508 -name jqs.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 147456 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::E1C63352-9F33-4669-8C60-1A0AC983C0F4 -name jqsnotify.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 49152 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::72BB00A2-715C-4223-9F58-FACE340C8FF7 -name jsound.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 147456 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::C0771D71-D42E-4FCE-A228-FCD7B16285B1 -name jsoundds.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 18432 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::8F9E3A30-9483-4949-8A1E-970221134EC0 -name jucheck.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 380928 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::C7704DF0-48CD-4B3B-AE73-AE480C7F7ABE -name jureg.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 49152 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::88659138-72B7-4883-8202-37A46A54D14D -name jusched.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 143360 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::390C838B-7F89-4BC1-A374-EEF77CAE773F -name keytool.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27648 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::F2C2D020-1DBB-48A9-892B-0C8497EB98D4 -name kinit.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27648 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::B80D418D-D38B-4444-8D84-EB08508C8101 -name klist.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27648 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::D6F8CFB1-D4B6-40C1-9922-B14E92A4FC08 -name ktab.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27648 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::2040653E-3BF7-4340-AF45-FCE41AAEADD1 -name management.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 18432 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::8A5A05EA-F610-4384-ADB3-3B516DBA0105 -name mlib_image.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 602112 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::C24F7087-7486-4BAC-B19F-5DB7FA369D16 -name msvcr71.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 348160 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::964B9E21-7F7C-4A83-B854-2CD6BA439CD1 -name msvcrt.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 266293 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::62464BCB-D83D-43C7-B2C6-8EB516A42CE2 -name net.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 77824 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::C1D7BE9C-5A58-418F-BE01-E7FD72F3E9A8 -name nio.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 20480 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::119A882F-6027-4A1E-BC7B-C0E56BD38A8A -name npdeploytk.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 405504 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::F229B110-2AEA-4A65-9EAE-6F3850792285 -name npjpi160_16.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 131072 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::6C130214-1E96-48F4-A6EC-489E6E0E2BCB -name npoji610.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 131072 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::3DC92716-F184-4D93-84AB-11E176D61B2B -name npt.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 8192 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::B608AC97-69DF-4B25-8114-A5ADA1B66208 -name orbd.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27648 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::E9C2B34E-9B40-438C-8520-93160154084A -name pack200.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27648 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::E612DD31-3E8B-4FEC-93AE-B4E4EA757F92 -name policytool.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27648 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::8D770017-462A-4B73-B61A-D12326E993DB -name regutils.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 266240 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::752A3AE0-7C96-49EF-9C75-5057E8F91A3B -name rmi.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 5120 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::01343A07-A227-4DD7-AF0B-E6E04C505F46 -name rmid.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27648 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::DD607DA5-7B92-4309-BAB4-EEE4DC74FA62 -name rmiregistry.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27648 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::B8303B4D-E1CA-461F-A97F-360152E1EE32 -name servertool.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27648 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::214F272F-B08E-44A2-9DE4-61A859BBD179 -name splashscreen.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 131072 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::5A4F6FDB-303C-48E2-A53E-640678C369D4 -name ssv.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 315392 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::EA50229A-0D2D-43B3-BAB8-0EB0DEDE7391 -name ssvagent.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 12288 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::095E2071-18F4-4D92-952D-0276606BB841 -name sunmscapi.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 16384 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::B80061DA-6BA3-40E6-A674-AFBCB72DCEAB -name tnameserv.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 27648 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::18BAB38A-F189-47EA-9077-FA4F24352D25 -name unicows.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 245400 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::51FE8556-2993-41A5-A361-6004C465694D -name unpack.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 61440 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::86A25CB7-4FE3-4053-A5DA-61C41C8A9AF7 -name unpack200.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 126976 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::5F0C1DBA-67EF-4932-A95B-AF4BD32C30DD -name verify.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 31744 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::F8B47BDE-0D7A-471E-99BF-C2B806291DAC -name w2k_lsa_auth.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 24701 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::C4E11521-A591-47AA-8918-576C5FC10F3A -name wsdetect.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 102400 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::60DA8E1C-D577-4B1A-BF44-30F3E9FF223A -name zip.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin -size 47104 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::F93A474A-DEA8-4A05-8903-3CC4D9FB931F -name client -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin/client -type dir -attributes 0000 -filemethod 0
File ::49F81E35-F418-4EA7-98E5-19E4C59B154B -name classes.jsa -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin/client -size 13500416 -mtime 1255884982 -attributes 1000 -filemethod 0
File ::02C36B46-CF0A-4089-8E56-193E79B16791 -name jvm.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin/client -size 2572288 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::06E9E381-2CD7-4835-8446-AB1B93F39F6B -name Xusage.txt -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin/client -size 1447 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::216D8183-AD62-4CEC-9E90-E6E0C641DEBE -name new_plugin -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin/new_plugin -type dir -attributes 0000 -filemethod 0
File ::00792455-36C0-464C-B8D2-EE2EE111573C -name msvcr71.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin/new_plugin -size 348160 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::7B2C58B4-C492-41B7-A600-9B1D7FF42A22 -name npjp2.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin/new_plugin -size 65536 -mtime 1255884914 -attributes 1000 -filemethod 0
File ::2D4DE3C1-4019-43A1-9B68-99017501E427 -name server -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin/server -type dir -attributes 0000 -filemethod 0
File ::3B282B01-9918-45E0-B395-C37849AA2FE1 -name jvm.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin/server -size 4141056 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::3B1F53EA-4A90-42EA-A727-AB4F531A0271 -name Xusage.txt -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/bin/server -size 1447 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::C9D0D272-3785-47A8-9A05-534BBF3F78E3 -name COPYRIGHT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 3841 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::5CC04149-7BA1-4186-A688-0133279E41F9 -name lib -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -type dir -attributes 0000 -filemethod 0
File ::7CFCF70F-73BC-4ED6-8260-49479928BB4E -name alt-rt.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 68071 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::9A197CBC-181F-495E-B481-EAF825F3CAB0 -name calendars.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 1215 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::FF7AA217-9574-4126-9171-DD816D77C9A2 -name charsets.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 6803799 -mtime 1255884940 -attributes 1000 -filemethod 0
File ::E11C648C-2C0E-4F6C-9D09-4A9C43F35DD7 -name classlist -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 80405 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::2D399A55-F981-4FD6-8BD5-5F83717F5071 -name content-types.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 5506 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::E7F14C35-ABD8-49E9-A310-E24F9E4D05B8 -name deploy.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 3154586 -mtime 1255884940 -attributes 1000 -filemethod 0
File ::FF8C08B9-C383-4802-9B3E-E89E67FB29F6 -name flavormap.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 3828 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::1DA11584-2FE4-4C0F-9C90-6FBE86FFFFA6 -name fontconfig.98.bfc -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 2710 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::61260FF7-FFC9-480C-8664-490E6275B7EB -name fontconfig.98.properties.src -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 7591 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::BD81F7E4-1B2B-441E-AEA4-2745DAC6B8BD -name fontconfig.bfc -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 3058 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::E23CC120-3746-408C-AAA2-E5699A14E554 -name fontconfig.properties.src -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 8003 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::26EA5CBB-98A1-43EE-9635-A44133454E32 -name javaws.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 797389 -mtime 1255884940 -attributes 1000 -filemethod 0
File ::EC3C25EB-09B9-4170-9F42-D5FB248F85A4 -name jce.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 88256 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::CD1F8133-C33F-4C9E-96F9-73550B0A1964 -name jsse.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 618950 -mtime 1255884942 -attributes 1000 -filemethod 0
File ::60BB864D-BAAF-40CE-950E-4AEEC6691DB9 -name jvm.hprof.txt -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 2807 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::C4080180-C443-4AFC-B56E-0174FB528F86 -name launcher.exe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 40960 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::4CFFB8E0-CB8A-4D2E-A598-032693C1E519 -name logging.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 2245 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::28DF377D-B133-476B-8E1D-9A89D15583D3 -name management-agent.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 382 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::4A3BD113-9DC9-4EA3-8717-8CC476673B00 -name meta-index -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 2040 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::8D225C32-451A-40B2-9378-2DC9B6D61C27 -name net.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 3070 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::766855D8-3D51-44F0-AB27-0FBC3ACA2970 -name plugin.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 1887660 -mtime 1255884942 -attributes 1000 -filemethod 0
File ::78610070-1176-4B9A-A981-B0373D985078 -name psfont.properties.ja -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 3070 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::AA33C4E6-E6F2-4476-9D2D-519700606D54 -name psfontj2d.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 10669 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::D5706090-8F8E-4874-AF89-F0A8E16F5596 -name resources.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 1115985 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::16CA4A32-1647-4773-9DBE-B221A76FCD25 -name rt.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 49396545 -mtime 1255884948 -attributes 1000 -filemethod 0
File ::A32E390B-95E0-4E05-907A-E3114ECBE889 -name sound.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 1210 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::6F214EAA-BB01-46CD-BB54-840BC24E13A1 -name tools.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 12605641 -mtime 1255884944 -attributes 1000 -filemethod 0
File ::99FA7E49-9231-4DFD-88A3-55315EADD8D4 -name tzmappings -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib -size 7624 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::94F74AE2-E974-40DD-A20C-FCE8C47D03A3 -name applet -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/applet -type dir -attributes 0000 -filemethod 0
File ::D0021536-65FD-4E17-A679-745DA72F7D89 -name audio -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/audio -type dir -attributes 0000 -filemethod 0
File ::88234D50-BDE3-4DF2-8840-A6D9E9EB40A9 -name soundbank.gm -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/audio -size 493589 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::67ABC0C5-8452-4D26-9499-2BCA979D5D8F -name cmm -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/cmm -type dir -attributes 0000 -filemethod 0
File ::7D84AC60-9FD8-404D-BF0D-5E00E3CD35A7 -name CIEXYZ.pf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/cmm -size 51236 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::59258E4E-6ADE-45DF-A024-001E7A6F4C09 -name GRAY.pf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/cmm -size 632 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::9B5C6FAE-B27D-4B2E-98D8-1839F3C92D6C -name LINEAR_RGB.pf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/cmm -size 1044 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::C332B4AC-DDA0-4D2A-B8AA-3BEDA3B501EF -name PYCC.pf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/cmm -size 274474 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::E539E0D4-7A6C-4149-94BC-F85E153D7A9B -name sRGB.pf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/cmm -size 3144 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::65AFBFC9-3B55-4B49-B7D2-F92957A772F7 -name deploy -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -type dir -attributes 0000 -filemethod 0
File ::A152760A-5FC8-45D3-9D2C-AC3094FE8F8E -name ffjcext.zip -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 16801 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::126D96F2-0681-4C1F-A7ED-083343CB3EBA -name messages.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 2661 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::3EF27ABC-A706-4B93-B72D-6D462AF4C59C -name messages_de.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 3213 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::FE2E3914-D6FA-40E0-B13D-4E0CAA6BA345 -name messages_es.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 3403 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::A0ECD90A-0BBD-437D-93DA-0692789643B5 -name messages_fr.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 3501 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::6E247CE3-B215-4977-8771-21BD73652384 -name messages_it.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 3160 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::B85F8722-627A-40CC-A904-538384FEE68C -name messages_ja.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 6457 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::307DAF59-2340-456B-84D6-DF71BC1AF10F -name messages_ko.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 5159 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::6DC36CE8-6611-4DBE-91EB-3E55B5650875 -name messages_sv.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 3304 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::2C612B23-EAF1-413A-A4F9-442BDEBE0E52 -name messages_zh_CN.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 3746 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::B08E4D7E-C1B8-405B-A674-1AA0E7427788 -name messages_zh_HK.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 3789 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::03F6FDE5-16B1-4690-845F-071C1A5D6546 -name messages_zh_TW.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 3789 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::68598701-9EF1-4C76-A2AA-9013A6162229 -name splash.gif -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy -size 7235 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::B1607D2E-318C-4AD5-ABA4-414F12BD8224 -name jqs -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs -type dir -attributes 0000 -filemethod 0
File ::B14D0F44-DD99-4EC9-B023-1C39B2FF606E -name jqs.conf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs -size 43481 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::70077348-59BB-473D-A53D-9E37626C21BC -name jqsmessages.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs -size 1771 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::A8B53ABF-F6A2-4354-983E-87ED92500F30 -name ff -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs/ff -type dir -attributes 0000 -filemethod 0
File ::D7B83142-80A2-41C9-8C31-6462F3522834 -name chrome.manifest -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs/ff -size 108 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::562357AD-828D-40DB-8219-7C88C2D08BC6 -name install.rdf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs/ff -size 678 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::9E193930-E0AB-44B2-ACAA-4B48CDC3D6C0 -name chrome -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs/ff/chrome -type dir -attributes 0000 -filemethod 0
File ::5E7652BE-1FA6-4BB8-B6B6-21DDE3675566 -name content -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs/ff/chrome/content -type dir -attributes 0000 -filemethod 0
File ::BFA701BD-7784-4542-B4F9-1D3AED93BCC6 -name overlay.js -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs/ff/chrome/content -size 779 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::D609CEC5-465D-4B5E-BE06-5901E11FF7EE -name overlay.xul -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs/ff/chrome/content -size 173 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::94BA9497-2080-498B-8C06-2B8608305486 -name ie -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs/ie -type dir -attributes 0000 -filemethod 0
File ::5DE4BDD7-ABF8-4E5B-945C-12B719ABE018 -name jqs_plugin.dll -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/deploy/jqs/ie -size 73728 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::53610502-AD9F-43DC-B6D5-C29B700E3605 -name ext -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/ext -type dir -attributes 0000 -filemethod 0
File ::E537F185-FC2D-4486-A84A-591D21BE0630 -name dnsns.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/ext -size 8239 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::FFA995F2-BAD8-42E8-A424-84AF58B3AA53 -name localedata.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/ext -size 841667 -mtime 1255884950 -attributes 1000 -filemethod 0
File ::AC825517-5A98-48FF-9856-0BD836B97DA7 -name meta-index -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/ext -size 521 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::0BE5DFFE-CD68-4794-8F98-8F2ACC70EBDA -name sunjce_provider.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/ext -size 170239 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::138D9A50-74CF-402F-BA35-B6D8C88E7128 -name sunmscapi.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/ext -size 31893 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::B80DF04A-D2A7-485C-AC1B-0B399F61A626 -name sunpkcs11.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/ext -size 231542 -mtime 1255884916 -attributes 1000 -filemethod 0
File ::3B68ED51-0DD3-40F2-9A96-6933A7EF9773 -name fonts -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/fonts -type dir -attributes 0000 -filemethod 0
File ::3A35BABA-71C5-4015-BF83-D94D06083ED9 -name LucidaBrightDemiBold.ttf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/fonts -size 75144 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::4CA73B97-A8BD-4D70-AECE-DB4118F59DB3 -name LucidaBrightDemiItalic.ttf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/fonts -size 75124 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::61768104-547B-40BA-974D-4186AE96E178 -name LucidaBrightItalic.ttf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/fonts -size 80856 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::47810CB7-810E-4116-9907-296D7F859175 -name LucidaBrightRegular.ttf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/fonts -size 344908 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::3AF9CB93-DBA8-469B-9CE8-780895ABAC1D -name LucidaSansDemiBold.ttf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/fonts -size 317896 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::8684309A-60A7-4AF4-A2CA-BF0140C2326C -name LucidaSansRegular.ttf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/fonts -size 698236 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::D0DEC5C0-ADC8-4278-B724-0317A6A1A32A -name LucidaTypewriterBold.ttf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/fonts -size 234068 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::94E14EF8-E8AD-431E-8DE8-35010AE58E45 -name LucidaTypewriterRegular.ttf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/fonts -size 242700 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::F4BE6D9A-A42B-4C5D-885D-FB9F61A0F0E0 -name i386 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/i386 -type dir -attributes 0000 -filemethod 0
File ::5FF09ED6-999E-4DCA-98F7-0B476A21C91B -name jvm.cfg -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/i386 -size 671 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::9E718785-F1E3-416C-9B08-F0E4378BA08B -name im -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/im -type dir -attributes 0000 -filemethod 0
File ::43D801EF-35CC-4053-B456-988AE2C8D2E1 -name indicim.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/im -size 10217 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::C7B6E350-9568-4C5F-94BE-916E55B9F301 -name thaiim.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/im -size 7945 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::D25E91A0-BB20-483D-99B5-B8FF62DD82FB -name images -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/images -type dir -attributes 0000 -filemethod 0
File ::1F0C55EB-ED73-44FC-8F40-755391E9F8A0 -name cursors -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/images/cursors -type dir -attributes 0000 -filemethod 0
File ::8C8C743E-2E52-48D5-9F1C-5FE0D75C2202 -name cursors.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/images/cursors -size 1318 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::E8036800-2812-47F8-B5B1-EFB390B029D5 -name invalid32x32.gif -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/images/cursors -size 153 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::A3620D6D-0286-4655-BC86-0483EBDE9DB5 -name win32_CopyDrop32x32.gif -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/images/cursors -size 165 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::0CCE6CA5-1C61-40EB-B90B-702C2345B139 -name win32_CopyNoDrop32x32.gif -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/images/cursors -size 153 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::3AF41949-5200-4BCA-ABE7-794C50EE88D4 -name win32_LinkDrop32x32.gif -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/images/cursors -size 168 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::D8BAA5C6-E302-421E-A547-ED48ACEE8957 -name win32_LinkNoDrop32x32.gif -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/images/cursors -size 153 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::F6691CA2-BAE7-4E96-8819-86871DD58A68 -name win32_MoveDrop32x32.gif -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/images/cursors -size 147 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::7E802B7E-18E9-42AF-A94E-C7CDC9C6E16D -name win32_MoveNoDrop32x32.gif -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/images/cursors -size 153 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::9A6E4276-C0AD-4D7C-A68F-EB14576B288A -name management -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/management -type dir -attributes 0000 -filemethod 0
File ::AB3C499D-5F55-4826-8521-C1CC61D8D5D0 -name jmxremote.access -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/management -size 3998 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::1D45D590-24D6-4E0D-A9AF-3D311F594C14 -name jmxremote.password.template -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/management -size 2856 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::EABF97D7-0868-4330-B14D-7128DAAD3456 -name management.properties -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/management -size 14097 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::8A626926-C718-403D-B8CC-9EDB239BE911 -name snmp.acl.template -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/management -size 3376 -mtime 1255884918 -attributes 1000 -filemethod 0
File ::3B38FB67-CBD8-4E8B-A9B3-DA8F1FA16855 -name security -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/security -type dir -attributes 0000 -filemethod 0
File ::E6C0541A-DA38-4548-A8D3-6E9DCC85CC47 -name blacklist -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/security -size 92 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::61FD332D-4E4F-4072-BEC0-C689FAF4B8DB -name cacerts -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/security -size 73831 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::660D8C15-D2E6-4831-960E-A2CDDA1EBFD7 -name java.policy -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/security -size 2221 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::DBCB075B-2BA3-480C-ABF4-8306A2323773 -name java.security -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/security -size 9979 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::11A6B8B4-14D1-4CAD-B95E-D41D69C167D1 -name javaws.policy -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/security -size 132 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::C2CB6F18-5415-4CAE-906B-E86579F9F4EA -name local_policy.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/security -size 2940 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::43E2112B-3EA2-4B66-82D1-048D6FBAD5F4 -name US_export_policy.jar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/security -size 2469 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::38E31212-AB50-4579-B598-E7476FD0163A -name servicetag -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/servicetag -type dir -attributes 0000 -filemethod 0
File ::2200319A-48BB-4074-B952-5AA22E91DD98 -name jdk_header.png -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/servicetag -size 19005 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::DD3CBF0C-CE3C-43E1-A5A1-2DE881DA89C8 -name registration.xml -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/servicetag -size 1625 -mtime 1255885072 -attributes 1000 -filemethod 0
File ::432E5A8F-3CDB-4D8D-A043-F29AAC21E550 -name zi -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -type dir -attributes 0000 -filemethod 0
File ::F1E33EC4-DA55-48BC-88AF-30938229F49A -name CET -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 1184 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::8EB21B20-67ED-4A77-9640-98FB5E02A953 -name CST6CDT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 1272 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::7DB5D139-2C85-4501-8595-47936C3C3E25 -name EET -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 1072 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::B7A54589-C49A-41AB-9E5C-35FDED76E59E -name EST -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::9D8E565B-B705-40A8-B202-524F577670BE -name EST5EDT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 1272 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::E4A3CC7F-3C93-4D08-86B4-1B87748750B8 -name GMT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::C4C60A6A-E691-4C50-A95C-16BE0948655A -name HST -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::22D7D20D-DEB7-49EA-AAB0-FD87FCD48484 -name MET -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 1184 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::EE1B121E-0E72-4E47-A934-293130A191AF -name MST -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 27 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::498317DA-FBFD-4496-BF7D-6C5646768D26 -name MST7MDT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 1272 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::1F713421-C3FE-4995-9509-8B9345F6D868 -name PST8PDT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 1272 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::3C164189-934D-4CD1-BF34-B08A7676DD45 -name WET -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 1068 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::C673302D-ED61-4826-BEFE-93AB00180A5C -name ZoneInfoMappings -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi -size 14210 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::99E635CC-D356-4F1F-AED9-B23B196D6CF7 -name Africa -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -type dir -attributes 0000 -filemethod 0
File ::B690B2C5-698D-4F4F-9290-C048C1FF9914 -name Abidjan -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::1BC48D40-AFE9-4CDC-8553-72D752A0C67D -name Accra -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 181 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::9C5F21DD-C880-468D-AE97-5FA7CE4782AA -name Addis_Ababa -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::0C9913C0-DC5D-4211-B5ED-6ACE814268E4 -name Algiers -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 333 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::BE920CF9-6042-46DF-B4CA-5D767A562A28 -name Asmara -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::D2173B64-F441-4F62-900A-C87C13C22B8E -name Bamako -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 85 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::2770D09B-7754-48A8-8CDC-8B24AE95F742 -name Bangui -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::9DD1D7F5-8F2D-44C3-89C3-51F0A6006AD2 -name Banjul -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::583EF829-679A-48F5-9A5B-EA6520EA883F -name Bissau -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::B3740EED-E44E-4E0F-AB6F-94FE6E7663EB -name Blantyre -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::3F55F1ED-424A-464E-8D57-601EB0275296 -name Brazzaville -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::C930AE11-6919-47BF-9D6C-8648A756DF1B -name Bujumbura -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 27 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::B1F0A984-7B27-4F95-A338-A8B55EBE2F4C -name Cairo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 1500 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::A6077079-3AD0-40B9-98DE-631FC333FD45 -name Casablanca -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 245 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::E8C75265-3514-446B-BA5B-C9F6790EB2B8 -name Ceuta -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 1112 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::F9370986-D8EF-4174-8D15-CE35DD04337F -name Conakry -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 85 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::8E073013-A8C4-49C6-9390-3E8053CE3438 -name Dakar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::DF3FAF3F-8311-419C-B4CC-59B366CDACFD -name Dar_es_Salaam -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 85 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::35994FFD-900C-4314-B307-5524E981CEE5 -name Djibouti -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::473B9554-DB66-4BDB-A917-DCB7E00B7FE1 -name Douala -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::8DEAD7A5-15A4-46B7-A8A7-75AA1C4E4A3F -name El_Aaiun -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::6B94B8E9-BA57-4B48-9990-B343B6FEEB6F -name Freetown -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 313 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::D8A8F52B-9F68-4166-8B3B-D0E148B37A69 -name Gaborone -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::58574B2F-0CF1-4034-8A52-E2492255ADA5 -name Harare -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::C188F042-7D42-4C53-9FA0-AFAB0EC94C58 -name Johannesburg -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 105 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::E839BAA9-A36A-41EB-98CF-3AB74D4BD491 -name Kampala -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 97 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::B5493927-29D5-4D3A-9990-E3A5B7C8B35E -name Khartoum -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 337 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::0BF2E504-D98F-4774-AFC1-68B6DFE3F1E1 -name Kigali -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::0501EC38-04FC-4230-B5D6-FE0C3FA06B8A -name Kinshasa -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 27 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::E034035F-0839-4D71-9CB3-1041D9375EC0 -name Lagos -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::72B14F36-82A3-43FB-ACD5-0F76C981D0FB -name Libreville -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::2088414D-E36C-4891-AA70-E53AE3469B44 -name Lome -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 27 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::687D6267-02B9-4E1B-8871-4434B02BC293 -name Luanda -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::895731D9-6C13-4328-B86C-8B354076250C -name Lubumbashi -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 27 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::46AC8AE9-3A08-46A0-AE4D-F6D430B4E050 -name Lusaka -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::795A56FF-D6FF-40A0-B925-501C09F39F0A -name Malabo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::1D14784B-E7B1-4B53-B7BC-E1820EF6305C -name Maputo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::21E95A8A-2729-42BD-974F-C60176CC7D7D -name Maseru -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 89 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::647F4643-36BF-4871-987D-1191607477E0 -name Mbabane -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::D3340CC7-137D-4BDE-B6FC-1BBA507F3DC3 -name Mogadishu -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 73 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::B61CF158-0EBD-4F22-AAC3-91101C5CD654 -name Monrovia -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::6C6249DC-BD3D-4E42-886B-1DD5D80FDED0 -name Nairobi -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 97 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::2E3C8C75-0F38-41B2-9FF1-8D24F6982E78 -name Ndjamena -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 89 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::0F6639EC-5435-4C81-A665-54F5B4DEA8E8 -name Niamey -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 89 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::B821E614-B4C5-4E26-B893-EFFBE8D008F0 -name Nouakchott -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 85 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::CBBC36B3-1534-4820-A964-85E4833A43E4 -name Ouagadougou -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::17B174BF-C199-4DA9-AD2D-2E2362870EC8 -name Porto-Novo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::7CF1D1F6-B2BB-4F1B-82BE-49015535E6C1 -name Sao_Tome -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::25241EC1-937D-4A6D-8D8C-F73CF38DD56F -name Tripoli -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 293 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::37FCE830-8DEC-4E52-8373-B0FAC4C12972 -name Tunis -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 812 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::ACE275B2-2ABE-4B01-8EEE-867A26560834 -name Windhoek -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Africa -size 824 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::9026C5A1-6CF6-4629-9283-ADEAD815643E -name America -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -type dir -attributes 0000 -filemethod 0
File ::84ADCDE2-2787-4FEF-8490-8C8316952110 -name Adak -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1224 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::156B1130-BB13-426E-A0DE-A888CA781691 -name Anchorage -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1224 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::8C1BEFCF-2A36-445D-A5C2-8A45D18877BC -name Anguilla -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::44B79FE4-5608-4222-9858-63103DF43255 -name Antigua -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::1F0D873F-6DBF-48B1-B54F-37960C93CD0E -name Araguaina -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 457 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::0A63D5C6-E880-4358-A7B8-7566CAD5EE3E -name Aruba -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::9FBE9CBA-D0F7-40B8-A5DD-21E4D31E74E2 -name Asuncion -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1116 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::AF1CB56C-92F9-4E1D-A0F9-4EC5ACA7E98F -name Atikokan -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 93 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::984A41CE-DB73-4111-B35B-C3545268A38F -name Bahia -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 537 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::1A2731D4-649F-4159-97F7-4B699D3397F9 -name Barbados -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 137 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::4018DBC2-1B3B-4CE2-9122-2E2E05E3F8B2 -name Belem -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 297 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::2520C755-6DA5-4438-AB0A-2E4B9D193B9B -name Belize -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 513 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::7A4CB66E-B608-42DC-ADFE-4A4B52B6B01F -name Blanc-Sablon -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 93 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::1C4C3EE6-F62F-4BF0-AC22-86A8C9929862 -name Boa_Vista -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 329 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::765F7A60-1DB7-4B48-AFE7-4503833A4C98 -name Bogota -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 89 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::D21CD90A-C6F9-4692-A7F4-391D4A1E69BD -name Boise -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1284 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::111B2818-3021-40F8-ADC4-883C4AE6435A -name Cambridge_Bay -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1076 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::FC78C0E2-141D-4EF4-B661-B448C474F903 -name Campo_Grande -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1116 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::9A2A81DB-F7F9-4F7A-AEA7-762F4C8E72EF -name Cancun -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 792 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::CF0DBF88-A59B-4CA7-AFC5-997994CB48BA -name Caracas -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 85 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::9DF31D6C-C4FB-496A-9481-7AC91AA6C070 -name Cayenne -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::869813F4-2DC4-4810-8308-0CEC3C5C1AA4 -name Cayman -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::DA713B8B-98E8-4629-A203-7F928A7DEF6C -name Chicago -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1960 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::252BE28F-F77F-4474-88E6-944EAD98D7AC -name Chihuahua -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 816 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::BDB1687E-E43B-4E44-980B-8C63AD092487 -name Costa_Rica -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 137 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::CC2F2E6B-A436-4EF4-8177-6408289BEBDD -name Cuiaba -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1100 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::E76DEC46-9D90-44BB-A923-1D46F65C6A6B -name Curacao -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::48EBE2FC-7BEA-40C0-A63A-DCD0E73BC6AE -name Danmarkshavn -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 341 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::3CE1CAB5-E84E-490A-BEF6-2BFA6DBA1D0F -name Dawson -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1108 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::C6FFEEDA-B408-4972-BCEC-E4EC4C9DBD57 -name Dawson_Creek -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 509 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::7F69A60B-F6E2-4CDF-BD29-6EE25568A1BF -name Denver -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1336 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::3056A4D3-1C67-4577-AAFD-1A9C6B03AEC9 -name Detroit -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1200 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::3C7115B5-D7DE-4581-BCAD-AA65F7292FF1 -name Dominica -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::09EAE5FA-8299-401C-929D-F844FD822222 -name Edmonton -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1316 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::D631BDD0-0E0B-4B53-91FB-05C2737E5ABF -name Eirunepe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 321 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::F196D0E9-EAAD-4092-88BC-5FBBD59E4AE5 -name El_Salvador -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 105 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::D7BAC929-97E6-475D-8313-E5B6408D44EC -name Fortaleza -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 377 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::F736026D-12BC-4633-BAD1-18BE4090A1C9 -name Glace_Bay -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1204 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::2ECB068D-F5E5-468C-98DE-1790DD8C961D -name Godthab -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1036 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::1F116200-8376-417B-BE39-C0FE90D9F199 -name Goose_Bay -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1728 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::52CCFEA3-CE4B-4A74-BF0B-423C63DA08A5 -name Grand_Turk -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1044 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::FC090508-A685-43AD-B67E-855453A95C35 -name Grenada -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::67D5B4E9-2803-4106-8D5F-D73DF23BE391 -name Guadeloupe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::1A971D06-A010-4D9E-90F9-29EF712A216D -name Guatemala -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 137 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::70FA8CBF-FEE1-43A2-BA8B-5972E60A637E -name Guayaquil -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::4AAB478B-0052-459A-81DA-C71F2EC49B36 -name Guyana -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 89 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::E6321E56-0CB8-48B7-A0A0-2FD82967DC70 -name Halifax -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1908 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::A77382EC-D30B-4DD2-B5B1-6998F2E239EA -name Havana -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1340 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::5C7109C4-3A91-46F1-BAA3-94D464F9461E -name Hermosillo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 189 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::6AF8F39A-EF86-4CBB-A876-E17D082A27E8 -name Inuvik -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1060 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::23C98842-1D18-44D0-A769-358EF1A1F426 -name Iqaluit -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1064 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::2B3E7EB1-E8FF-4758-8FDB-C168DA170851 -name Jamaica -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 233 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::9107AF5C-2487-4BFD-A623-220853D70A6E -name Juneau -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1224 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::F7D83C61-88EB-4455-B9F9-9D6F864D72CB -name La_Paz -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 81 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::83C1C817-2CC2-4D7E-829C-6A6764DD50E0 -name Lima -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 185 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::D65B8D55-467F-4828-9394-D25FE0C9EB3F -name Los_Angeles -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1560 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::F54F9A39-65CD-4117-931C-F0F7866DB75D -name Maceio -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 393 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::4B0DA40D-F854-4B44-8FF7-90E7D8AC8D33 -name Managua -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 185 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::88C945F3-0604-4655-8B3B-447A2584FA99 -name Manaus -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 313 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::02CD4517-1401-4C99-B805-1126327B1EE3 -name Martinique -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 89 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::85096E3D-D649-4EC8-A824-ACAB49762598 -name Mazatlan -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 840 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::DEACD065-8091-40FE-8F02-992EB08A5469 -name Menominee -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1216 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::F18FC25B-C084-4B77-B525-F6D9270BBECB -name Merida -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 788 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::34728B98-479A-41B5-BB20-5DF52138B929 -name Mexico_City -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 880 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::A17B37FD-AA57-4579-BB88-3CA05AA7DCD3 -name Miquelon -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 928 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::8D5D264D-C971-4832-98D0-DB29798721E5 -name Moncton -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1732 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::C8FA2912-C224-49AD-9883-03AE68382D7A -name Monterrey -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 788 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::40AC2C19-AE6D-4E54-9D4E-DC4FE5B53548 -name Montevideo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1152 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::2D912624-11FE-4C2E-8D16-70291FCF066D -name Montreal -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1928 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::EAAD47AC-A947-4714-8776-4EA1F9D5CE96 -name Montserrat -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::C51BE834-D79F-4A9A-93EA-36C573DDA95E -name Nassau -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1284 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::F6AD52CA-B095-4ED2-A31A-8647B41D21A4 -name New_York -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1960 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::B59882D5-8E2E-45B0-A67D-AA622BB96944 -name Nipigon -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1144 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::BEDFF43E-4746-46A4-AB22-C13344CB51DA -name Nome -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1228 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::42E1704B-C4A6-4A76-A56E-29783A54EBFD -name Noronha -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 377 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::BA9FDAD0-6D4B-4F53-91CD-7D134CF72C90 -name Panama -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::54AD7BFB-D9A6-42CC-9C98-9CA9ACA07CF1 -name Pangnirtung -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1076 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::2DD6A57F-6859-4EF9-A870-C6E1DCFE56A1 -name Paramaribo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 101 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::4730CD3A-2F3F-4FF0-89F7-C4D33A1A0ABE -name Phoenix -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 141 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::A891D64D-18BD-4D5E-8F54-DBB6BE9A921F -name Port-au-Prince -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 345 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::13756879-C66C-4A02-830D-4E96EC8E8E7C -name Port_of_Spain -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::D3E77799-B275-4BA3-A3E3-7653BB80EB63 -name Porto_Velho -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 297 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::C7213705-2D27-45C5-A2B8-B8E554D3C70E -name Puerto_Rico -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 77 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::B4E18A73-3D95-45B8-9C78-942D1645CCD7 -name Rainy_River -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1144 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::B1FF55FB-43B3-4F1E-AC83-8A4204A88DFE -name Rankin_Inlet -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1052 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::3FC2F10A-8DFE-421A-9F07-9EBABF988E5A -name Recife -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 377 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::11E3C0AD-6163-4B9C-85D7-2E9746C9975A -name Regina -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 481 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::A85C4A1C-55D7-4477-946C-70B4CA1BAAE5 -name Resolute -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 529 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::AAF0384C-4F43-47A2-9E11-2A7548F791C7 -name Rio_Branco -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 305 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::95EE9EAF-A55B-4AAD-A185-0D2629868672 -name Santarem -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 305 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::B66D1DFA-F4DE-4862-8D64-061AE5E9CCFA -name Santiago -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1368 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::0C2A5FD5-66AE-4227-AA74-B380EDF674B8 -name Santo_Domingo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 201 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::CADCB6E2-153A-4007-BD00-0955652593DE -name Sao_Paulo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1116 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::D377057C-0B70-40B2-9BFC-5C05D70FFD5D -name Scoresbysund -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1040 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::FE9FA529-7CE2-4029-A1E1-C6F5D579A163 -name St_Johns -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 2000 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::DFCC5626-BC6B-416F-885E-C16BFF21A332 -name St_Kitts -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::98F25A55-2757-478E-AAED-F38018C1ACC9 -name St_Lucia -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::F4236A53-C7B7-4CF3-BED0-06E640529AE8 -name St_Thomas -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::7CE74239-A4D1-4F32-AC31-23933C82E745 -name St_Vincent -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::5BDCFAD9-10FC-44C7-A025-C39DC851E1D1 -name Swift_Current -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 241 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::3305078F-A563-4D56-9290-7ADE2D52FE19 -name Tegucigalpa -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 121 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::F3D5B584-A556-4B9D-B324-ECAE9DF79B23 -name Thule -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 852 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::1B2DC8B8-FBD3-4E8A-8F13-FA4D98377B8C -name Thunder_Bay -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1188 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::BD34E852-DD2D-4F0A-B29D-7A5017B6B5CC -name Tijuana -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1276 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::F4D8C9B0-86E1-451B-B19B-4FC61ED76CC5 -name Toronto -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1928 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::56002FDA-5FCF-4DEA-8C9C-66E68C6B26D5 -name Tortola -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::7B244FEE-A9A3-4605-9F19-D625BC15E8A4 -name Vancouver -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1592 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::E5D20934-9A99-4114-A0D6-0FDE401817B9 -name Whitehorse -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1108 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::FD474948-4C3D-49D1-AEB1-8D071A6FDDF0 -name Winnipeg -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1560 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::55A6A3A4-6CEB-45B6-B816-0E6370C92855 -name Yakutat -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1220 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::D06C9C65-3E2F-4C92-9B2E-3F8262BC7E68 -name Yellowknife -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America -size 1068 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::0E0AB332-DB5C-4E8B-891E-3E4EE4AC2359 -name Argentina -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -type dir -attributes 0000 -filemethod 0
File ::33FA54AE-14E3-461E-83A5-B1BFB21BE18C -name Buenos_Aires -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 1032 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::E705500A-6EA2-4DBE-944F-08D29671F980 -name Catamarca -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 549 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::5DC26785-FDC6-4230-9689-704D752C1912 -name Cordoba -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 1032 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::13991CA4-B3C0-4AC5-8473-EF5F6C04234A -name Jujuy -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 533 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::9822D85B-B5A0-4845-B213-9B11CA31C46D -name La_Rioja -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 557 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::9E1F504C-1BB4-426A-AEF2-CA3D0AABF1F9 -name Mendoza -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 549 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::83B15F5D-F53A-4DA3-9B43-066A1E208339 -name Rio_Gallegos -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 549 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::295860DB-563D-41F5-8A64-87B8428792A0 -name Salta -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 533 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::2374C351-2EE0-41D0-8699-AB89BEB3FD3F -name San_Juan -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 557 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::8AF3AA4B-809A-47B5-932F-671D3ECB102A -name San_Luis -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 1016 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::CC4B7F81-BB4E-4690-BF0E-752C83171521 -name Tucuman -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 1048 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::17A84E06-A19F-4A49-B284-83DB1DCAB769 -name Ushuaia -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Argentina -size 549 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::6EE688D6-7CEB-434D-A43E-01CF2DB1F1C9 -name Indiana -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Indiana -type dir -attributes 0000 -filemethod 0
File ::CB7F1A00-5D9C-427F-B8FD-C161C5F9960E -name Indianapolis -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Indiana -size 868 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::A4AFE744-37B8-40B5-9F86-D560A6A1BD6E -name Knox -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Indiana -size 1304 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::2B1A5EA8-CC38-458E-907D-F24FC49C985F -name Marengo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Indiana -size 900 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::B256EE00-DE18-4C0C-B54C-1D1757F64038 -name Petersburg -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Indiana -size 1004 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::EF3581DF-A07C-483A-ABF0-FD419312A839 -name Tell_City -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Indiana -size 884 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::E8AB8059-24EC-4845-8CC3-4A7B88A7B225 -name Vevay -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Indiana -size 724 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::36404BE0-37B9-497E-9E14-EC847664F993 -name Vincennes -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Indiana -size 884 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::BC40978E-0E4E-453E-A53C-C494DEDC7366 -name Winamac -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Indiana -size 932 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::D075F608-F220-4BF5-9433-DC7445FE93EA -name Kentucky -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Kentucky -type dir -attributes 0000 -filemethod 0
File ::0242E818-8DEF-45DF-859C-498BDB368B05 -name Louisville -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Kentucky -size 1500 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::FD126EBC-74C1-47E5-A1EA-91A0FF63897A -name Monticello -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/Kentucky -size 1260 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::15DDD089-0E74-4083-BD4E-9B0393D04ADA -name North_Dakota -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/North_Dakota -type dir -attributes 0000 -filemethod 0
File ::956C110C-529F-4204-BF52-91C9C88B681B -name Center -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/North_Dakota -size 1276 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::8849BC48-29EF-486E-A359-114DB8CBBD74 -name New_Salem -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/America/North_Dakota -size 1276 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::1C5ADBB2-B8F3-49AE-8E8A-6157F8803B19 -name Antarctica -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Antarctica -type dir -attributes 0000 -filemethod 0
File ::24628923-B551-463D-8508-A11EAD8BADCF -name Casey -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Antarctica -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::795A50B0-A8DF-47C5-816A-0DFFA8586F78 -name Davis -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Antarctica -size 81 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::3CA92073-99AF-49C3-A48E-B734485EF0F5 -name DumontDUrville -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Antarctica -size 81 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::CE1B0EA4-2783-4780-907E-D826CE86DA8B -name Mawson -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Antarctica -size 65 -mtime 1255884920 -attributes 1000 -filemethod 0
File ::B9E3ECBC-2827-48F8-8354-5FF3167ABD14 -name McMurdo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Antarctica -size 1124 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::E308DFE3-88A4-4FA2-8642-0C7BF1CCC3F2 -name Palmer -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Antarctica -size 1104 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::BF7B7176-4954-42A1-A923-04B637B4E61B -name Rothera -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Antarctica -size 65 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::BD82E8A5-D9A9-4ADE-9CEC-4F85A70EBD20 -name Syowa -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Antarctica -size 65 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::7EC95E46-1C24-4E0A-9A69-035B277F2B4B -name Vostok -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Antarctica -size 65 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::1A1DD4E4-B9D8-4881-BC64-05E84F69C300 -name Asia -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -type dir -attributes 0000 -filemethod 0
File ::2BB0E47D-13C9-4BA1-AAFE-8C223ED61022 -name Aden -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 65 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::A1E580D5-2680-4218-A9AD-18280DA68184 -name Almaty -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 453 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::BCEA4C9A-B2DA-42E4-B940-D86B1951396F -name Amman -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1052 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::CE3D6716-35E3-4621-8F64-0C0B67FEB851 -name Anadyr -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1044 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::AD457C40-AFBC-4212-967C-D93E6CFAAEF3 -name Aqtau -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 453 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::AD8A217B-6CCD-4742-B671-7FA7E8544D0D -name Aqtobe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 453 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::CE508687-DE88-44C0-9139-C974FDBA8D00 -name Ashgabat -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 269 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::7B25DD1E-707D-42D6-971D-27C69532F3BD -name Baghdad -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 489 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::7BA31330-22C1-444E-B1D0-0502C7757EA8 -name Bahrain -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 77 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::D783C2CA-FE64-4FE9-A6E5-6AAABE860AC8 -name Baku -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 976 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::EFD3A832-B966-4CC4-9E2E-FAE50428B816 -name Bangkok -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 65 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::C25B89FA-A803-40DF-AED8-6EDEC3158FA6 -name Beirut -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1208 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::2D8F3798-FB3E-47B1-9488-AE8A3309B52D -name Bishkek -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 485 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::38AE8B6F-80EA-44F6-B5A8-28CE00091E03 -name Brunei -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 77 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::3BF89490-6695-4D24-93ED-69D7DBD1B7EC -name Choibalsan -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 449 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::92D45F27-5196-43DE-9E8D-64D78982F610 -name Chongqing -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 181 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::63FD9629-0288-427C-A412-A6D1EBA51BCD -name Colombo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 129 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::B1764A64-86A3-4E3F-BD04-C1031CA55E5A -name Damascus -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1300 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::9C1526F8-F382-4016-9C41-E4C41D78BCCE -name Dhaka -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 113 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::DFBDBAFD-BC4F-45B2-93B8-E1BEFCF00769 -name Dili -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 93 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::F171EECC-4464-4AF5-B264-815BAF570089 -name Dubai -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 65 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::8FB1DD7E-E72D-4E57-9210-F034D7AFED99 -name Dushanbe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 261 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::4C15B1F6-1B4D-4508-A278-E86E0F6EA74C -name Gaza -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1236 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::2AB7B307-6999-441C-8186-76007C69A480 -name Harbin -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 205 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::28332A90-2B3B-4CB4-915E-BFDD85198040 -name Ho_Chi_Minh -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 97 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::1571F86E-E956-4E17-8ED8-ADA8168F279C -name Hong_Kong -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 617 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::4BF8E5E5-F850-46CF-989C-28864232B704 -name Hovd -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 437 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::DE9D8EE8-722B-4B6D-B028-E4893AF9D34B -name Irkutsk -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1040 -mtime 1255884922 -attributes 1000 -filemethod 0
File ::E5040FC5-271D-4229-9605-6EFE954B720F -name Jakarta -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 129 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::DBAEF5CE-E3A1-4337-B2A0-B9731543E5F6 -name Jayapura -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 85 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::E7C53058-DB70-47BE-81B7-F36479D14B93 -name Jerusalem -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1236 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::C154862E-9FF0-423C-8247-ECEB780A779D -name Kabul -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 65 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::93C0EC7A-E762-479E-BF86-F8DB37D1F5F4 -name Kamchatka -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1040 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::C97B7DBA-900D-4A6E-BA32-2215736F360A -name Karachi -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 153 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::A795406C-FC14-4C53-8F29-4B96D20D1970 -name Kashgar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 193 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::1E4FCA17-AE18-4E06-A61E-88B4A350BD0C -name Kathmandu -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 77 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::85FFFD29-C6E0-477A-B4D9-19927E595919 -name Kolkata -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 97 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::348B7FDA-35E6-4F4D-A64D-1C8E0C9EAFE5 -name Krasnoyarsk -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1040 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::8E39DD8D-F7D6-428A-95A0-A395A7BDA820 -name Kuala_Lumpur -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 145 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::A77791D6-0920-4900-B827-F1081FD1D941 -name Kuching -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 217 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::E2F9D5C1-1393-46A6-9FA9-3299F4828F80 -name Kuwait -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 65 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::A6344290-3F5B-4CF9-8781-D7B195D1985F -name Macau -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 393 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::E077829D-216C-42D3-9597-640F7C7452FF -name Magadan -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1040 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::1CF792AC-0B21-4007-9F63-378CD22DCF60 -name Makassar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 85 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::0967AD48-5739-4256-8F80-FC0E0D324289 -name Manila -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 125 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::5A5B4701-B52D-4F30-9585-DC8CFB290829 -name Muscat -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 65 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::2A6C26FA-74BE-4D8E-ACC0-EBC35AB7EF99 -name Nicosia -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1116 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::3EA01E42-6CBA-4607-9D4F-50F9B38E47FB -name Novosibirsk -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1048 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::A48EAF56-FEC6-4D7C-BC0E-9F199F19DB2B -name Omsk -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1040 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::B1E0087E-A4A0-4A5E-861E-D74751FF2B9E -name Oral -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 461 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::D0CBF862-AFE9-41AA-A10B-4AF32D22ABB5 -name Phnom_Penh -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 97 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::D582C61C-19DC-428F-B4C4-4A2C4AF15AA2 -name Pontianak -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 125 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::284924C8-57AC-4AD3-97CD-73E9DC5C6083 -name Pyongyang -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 101 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::13CFE168-8847-4610-B048-42D88CDCF0C3 -name Qatar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 77 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::1FB30ADF-80E7-46EC-99E6-5DD68CAE3139 -name Qyzylorda -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 465 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::10E2F534-DFDA-4ECB-88A5-2A0A08673ABF -name Rangoon -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 85 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::E35D4786-A103-4F1A-9D38-8AD39B75F0BE -name Riyadh -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 65 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::7DCF998F-7A99-40F4-991F-66AB65678B99 -name Riyadh87 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 4821 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::793F15B6-37E2-426C-8935-4DB720A496C3 -name Riyadh88 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 4733 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::CEE50E04-1F82-49A6-AB92-18071DEAFB8C -name Riyadh89 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 4765 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::7BE39AC0-BD57-46A2-9B4F-727BC618F878 -name Sakhalin -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1044 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::BF46E01C-DD99-49EB-99AB-A8E91756644D -name Samarkand -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 261 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::A39F5CFC-BA23-498F-9DBF-2B980F95B41E -name Seoul -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 165 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::009638F3-A237-4A9F-99D6-B72D510CF386 -name Shanghai -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 201 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::44B65F66-95AF-4EB2-BD5A-5FCA18643652 -name Singapore -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 133 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::9D2A9B34-9B73-4630-B628-A8E39BF505FA -name Taipei -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 381 -mtime 1255884924 -attributes 1000 -filemethod 0
File ::27D7FD39-F3DD-4DB5-B7E7-7E76D1F09CDC -name Tashkent -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 261 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::789CBD37-126E-4140-BDE2-6CB40E09C281 -name Tbilisi -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 469 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::BD0090F6-6DED-4078-961D-9E821BAFA1C5 -name Tehran -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 892 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::A1A67EFD-3284-44AC-93A8-306FF7F0F224 -name Thimphu -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 77 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::83B0EB3E-5F67-428C-B2F3-96AA9C2603CD -name Tokyo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 125 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::C3945036-09AF-4BDF-826A-3E42ABC5A8E7 -name Ulaanbaatar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 437 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::567752A8-92C2-479E-BA9D-275026C7CEC7 -name Urumqi -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 181 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::5BBE4408-9EB9-4BC5-B611-4627799F01DE -name Vientiane -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 97 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::F94936D4-7934-4ED0-98C0-F64570AD5388 -name Vladivostok -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1040 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::D872124A-18FD-4C2E-B752-804B4B14B659 -name Yakutsk -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1040 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::58D3FAA0-1A19-42FE-A031-43D2F6EC33AD -name Yekaterinburg -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1040 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::DD7F589B-49D7-43CB-93BE-8BB05032B609 -name Yerevan -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Asia -size 1016 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::24A15F2E-5EA8-452D-8F18-45E15B2B2921 -name Atlantic -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Atlantic -type dir -attributes 0000 -filemethod 0
File ::68C8C058-724F-481E-B938-7B1A3241CB5F -name Azores -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Atlantic -size 1868 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::3CFAE8B3-3EE9-4E80-BECD-5D78A0BC7C7A -name Bermuda -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Atlantic -size 1124 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::B696818C-36DE-4B62-A8A9-021CF117E250 -name Canary -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Atlantic -size 1044 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::752B7F44-4486-4470-8BC8-F108BF5D4BFD -name Cape_Verde -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Atlantic -size 97 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::01182989-77B6-49D5-841E-35D11182BA4A -name Faroe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Atlantic -size 1016 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::206058BF-AB02-4227-B811-2587E11FE041 -name Madeira -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Atlantic -size 1864 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::1159EC2B-0395-4D7C-93F7-87861730D9C8 -name Reykjavik -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Atlantic -size 577 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::59A8C60B-DD3D-4244-9373-857F2716084C -name South_Georgia -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Atlantic -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::A5AD0AE9-09EC-4006-AAA1-F72114B9FB93 -name St_Helena -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Atlantic -size 65 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::021B7394-8DF8-4327-9264-E20601F47183 -name Stanley -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Atlantic -size 1080 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::7850A484-9EA8-4956-9250-6FCE9C49FE74 -name Australia -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -type dir -attributes 0000 -filemethod 0
File ::8835FF1D-5147-4A11-9DEE-37EB0104B589 -name Adelaide -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 1224 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::605CF4E2-6209-4D3E-AA2A-A58C22F05868 -name Brisbane -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 189 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::733BA303-0D3F-40F8-8B6A-59D0EB41DFD8 -name Broken_Hill -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 1224 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::CC1A927F-77C7-4097-BC40-9D34ED15AA69 -name Currie -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 1224 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::65FF05DD-340A-422B-981E-BA8568D71E00 -name Darwin -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 125 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::A3C33280-A64A-4E52-8E8C-B0B7096748D5 -name Eucla -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 205 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::EA6C1FDC-9922-4AB0-855B-C50ED1CFD8D0 -name Hobart -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 1288 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::A7BD9E0E-11CA-46D2-A2C3-A81EF33F848C -name Lindeman -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 221 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::E9FBBD57-712D-478F-B63F-0571297ADAC2 -name Lord_Howe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 1012 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::1D7494F2-0041-4EC4-85BB-6DC652AA31C3 -name Melbourne -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 1224 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::6292B589-6D0E-455A-BCBB-DD00C94426B6 -name Perth -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 205 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::10DAE800-89C1-42DF-B886-2236ADD72564 -name Sydney -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Australia -size 1224 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::56BD9002-F909-4E46-B4E2-57BB07981480 -name Etc -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -type dir -attributes 0000 -filemethod 0
File ::7F1800A0-C8D0-4283-BAA1-694B3D92DA30 -name GMT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::FB8D492B-68CB-413B-8630-3D19F2105D19 -name GMT+1 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::F9060105-196C-415D-9528-02EE08DE28CB -name GMT+2 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::F6AC824E-23B3-43AB-80D1-8CFE0F7BC570 -name GMT+3 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::BA327605-7586-4207-B555-7326F93D984F -name GMT+4 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::9A6AC636-22F2-476A-ABEE-F3C6ACEED713 -name GMT+5 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::8F463116-FED7-4947-A686-4419AEA3C3F2 -name GMT+6 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::9A756E65-C614-4C9F-BA8F-921DFA35B84A -name GMT+7 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::E1C95597-E85C-489F-86EC-66AB3FAD6C88 -name GMT+8 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::DD3725B9-AF08-44ED-A50C-90EA885F2D33 -name GMT+9 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::308FFD75-1509-45F0-B4E4-630A64003DFE -name GMT+10 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::E313C671-A558-45AA-9AA6-2133D57DE5D0 -name GMT+11 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::AC09C5D7-E484-453E-8867-0D57C9083EC8 -name GMT+12 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::16CD07CE-D667-467E-8AA4-CEA81BFCF58B -name GMT-1 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::6E04633C-AEEA-4FFC-B2E6-7132B518D769 -name GMT-2 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::15B751A9-A82E-443B-A227-04B30325652B -name GMT-3 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::DB7D0ACC-143E-4F9E-AB84-468C06F036BF -name GMT-4 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::D768A19A-FDD7-4939-BA8A-C42D94BEF459 -name GMT-5 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::9A620C50-17B0-4844-ABC8-3FDD6C58ACD4 -name GMT-6 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::3906A6B0-5275-4894-BD02-06C17C26A7EE -name GMT-7 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::47DDAD7B-A6E4-4E4E-8043-006A69353C59 -name GMT-8 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::E638F56C-B9A8-4B87-AEC2-A272E2F6F8F4 -name GMT-9 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::5F94EC62-38C2-4E29-AF55-56F5A58627EF -name GMT-10 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::212F3338-A110-4506-8603-641EE2283D46 -name GMT-11 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::B8B78A53-D921-4230-8283-9549AA75F541 -name GMT-12 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::3F4326C6-3970-435C-A7B1-1BAC82906E2A -name GMT-13 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::DAE5D27D-41DF-46A4-9104-9DBC48B08C76 -name GMT-14 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::C4905B36-2E83-4353-BF63-247238550FF2 -name UCT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::F61B4097-116D-4254-AA6E-CB82F2087186 -name UTC -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Etc -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::EA70E452-E8E1-4BB2-88CB-B7614E5C5EE5 -name Europe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -type dir -attributes 0000 -filemethod 0
File ::5717BD6E-C534-49A9-AE4B-A3876E99BAB4 -name Amsterdam -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1544 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::5445AE5B-BE5D-4460-8D16-6FB865F2F4CF -name Andorra -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 968 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::AD14F5FE-C908-4F93-8EF4-D2BD7B0B5FB6 -name Athens -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1196 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::3B0E5A3E-9101-4E41-A4F6-13723F0C1F9E -name Belgrade -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1040 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::C2A58147-4212-42AE-801E-86CA5559C650 -name Berlin -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1236 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::DA0D287C-B085-42B1-8728-B116FBAD8E21 -name Brussels -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1564 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::5C9546E4-240E-4891-9C6A-72FB76D72B75 -name Bucharest -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1180 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::FE0BBF09-3FDA-4FD2-93A5-30A8775735CA -name Budapest -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1312 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::F2249023-9BD3-4719-A243-EEDC72560B34 -name Chisinau -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1212 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::C06BAA1A-273D-4A3C-A916-3673B3B294CC -name Copenhagen -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1152 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::E6F30EED-71B8-4EC6-921A-5A4FAD3D1705 -name Dublin -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1916 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::03CE2C36-32AD-4B92-8D08-855CAE0FD472 -name Gibraltar -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1676 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::AE2C5BA1-A7E5-493B-97B9-CFCD06E811C8 -name Helsinki -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1036 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::C4716F00-1273-4F84-96EA-9FF36E284B3F -name Istanbul -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1464 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::0B7AE7CE-ADF5-4DA1-875B-A9F063FFF827 -name Kaliningrad -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1140 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::BC6CB4EE-00EF-474C-B47B-7C5606981E61 -name Kiev -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1048 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::1659813B-F0CD-4A02-A579-5B989D854625 -name Lisbon -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1868 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::545F9DCC-9178-4AB5-A0B2-3BD46F4D8906 -name London -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 2024 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::2DE21F40-14D4-4355-970D-55DA00AFC6C7 -name Luxembourg -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1568 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::EA879A41-5284-4883-8DA1-5484FAD3EAE9 -name Madrid -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1416 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::C5CB518C-6989-4190-9142-DA776CD745D1 -name Malta -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1440 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::ACBAD703-B222-405B-AFAE-EE0DD954780D -name Minsk -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1064 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::78B8AA6D-F564-4199-8F73-02220D902EEF -name Monaco -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1576 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::005BE7B2-BD15-4E1B-9D44-627A78123433 -name Moscow -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1152 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::173662CA-54AB-433D-A52F-42A0F103DA98 -name Oslo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1216 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::8EEE8998-8FB8-4055-AFB4-BA47F210E8B8 -name Paris -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1568 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::71EF28EB-063A-4046-8207-CA11642B4651 -name Prague -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1216 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::BE5AD82E-6239-4E72-AFE6-29A99A6A2675 -name Riga -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1108 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::037C121A-C3C0-4F84-BFCA-BE8E47395BF7 -name Rome -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1440 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::2A807E55-8AD8-4837-9662-019C32DF2DEB -name Samara -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1040 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::E7A9BB05-5E66-420E-8FE2-18AFF1245C04 -name Simferopol -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1064 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::398EE7CE-1E1F-435D-A6DD-7775BA0CDAF6 -name Sofia -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1088 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::9EC5E5F9-096A-4426-9105-A8A68284D482 -name Stockholm -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1040 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::EC9DEE0C-B002-44A2-B139-BB1BCF713AAB -name Tallinn -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1080 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::FBA8FDB2-565B-4510-8505-F1729984B20F -name Tirane -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1164 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::A581FD08-C6F8-4CAF-AF94-7679D95563B9 -name Uzhgorod -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1052 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::DAB0A619-2575-413C-AA0D-9C62BC7730D6 -name Vaduz -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1008 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::1ADD757C-5DA7-429C-9281-1AE801326607 -name Vienna -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1200 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::3C7B409B-88D3-47E0-BC1A-5663893A5BC1 -name Vilnius -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1060 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::FFE02845-D11C-4CD2-9761-529264D53C9D -name Volgograd -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1024 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::4498C3C4-3884-4E31-8705-499A963A3598 -name Warsaw -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1416 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::9F7DE896-F2D1-4C19-A20D-12175FBAC4FF -name Zaporozhye -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1072 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::00331631-0EAC-482D-8533-D0AFEECB50DE -name Zurich -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Europe -size 1040 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::E11B561B-F2E6-4561-B32D-FB71DD2B3F89 -name Indian -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -type dir -attributes 0000 -filemethod 0
File ::552CFC4E-D18D-4770-A1BF-95A49DAAC796 -name Antananarivo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -size 89 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::5D297E7C-C738-4DA7-A4B4-7D0FC0E3D0B3 -name Chagos -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -size 77 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::E93EA533-C858-4A5D-9015-C8EDDAAC8526 -name Christmas -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::7774CEAC-4F62-4893-8547-958C0DA49CD9 -name Cocos -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -size 27 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::61B0C91C-1067-4543-B081-1D4D9309DC1B -name Comoro -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -size 65 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::42F03F5D-D49F-4CD5-9FC8-700A909E61F5 -name Kerguelen -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -size 65 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::DC9ECB29-A29F-4614-9679-DA74F28DFC68 -name Mahe -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -size 65 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::30B9DA60-6886-40DC-983B-919768CC39EC -name Maldives -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -size 65 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::58F986E8-153C-432C-8FA5-8A083745B32D -name Mauritius -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -size 596 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::F691F6A2-85B9-4BC9-AD89-5805A2460501 -name Mayotte -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -size 65 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::3E96513A-D9E6-4035-9FCB-B4BF63462E95 -name Reunion -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Indian -size 65 -mtime 1255884926 -attributes 1000 -filemethod 0
File ::24BDE207-6654-46F5-8166-CD78AD10853B -name Pacific -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -type dir -attributes 0000 -filemethod 0
File ::F40C7936-ED53-451B-A10B-82F84A622C5D -name Apia -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 77 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::881A6EEA-DA8A-4257-9C02-1BF11AF26E73 -name Auckland -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 1348 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::4C2AC447-8F99-4F5C-B482-81D0910E3567 -name Chatham -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 1124 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::8DB5E42A-D5BD-4175-8132-4063F56B7E52 -name Easter -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 1248 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::AABCA72E-124A-4A3A-82EE-087EE89E3229 -name Efate -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 233 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::966B82E2-5BD8-45EF-A345-32BF2CA3C5E3 -name Enderbury -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 89 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::39A28995-8D43-459A-BEC7-4CFB9FCE8A68 -name Fakaofo -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::9EB3EDC7-9538-448F-897F-8213C13542A2 -name Fiji -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 105 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::94324DE8-13F7-48C3-8499-1947210A7363 -name Funafuti -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::FA930DEE-46FA-4998-AAC5-5EE3F4713333 -name Galapagos -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 77 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::A8FBE9AD-1AE5-4A65-BA43-A069298CC021 -name Gambier -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::E44813DF-881C-470F-AF6E-C9A72CC3DA3F -name Guadalcanal -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::990D6513-FA2B-46D2-90E5-B45E31C49388 -name Guam -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::240445C6-71BC-403F-AED7-A0EB99BD2A60 -name Honolulu -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 117 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::32186042-6B75-4475-983C-799DE32CAD85 -name Johnston -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 27 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::A65671A0-3836-4FFD-9B37-CF29BCFED4AD -name Kiritimati -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 89 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::F83521CA-D065-40AD-9531-0C8CA4CC68D9 -name Kosrae -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 85 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::4A9E4BA4-9476-41CC-9F2C-A2A1511EF383 -name Kwajalein -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 89 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::772965E2-AECB-41A0-8809-294034817D85 -name Majuro -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 77 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::7A5FF472-E609-4CB3-A86A-CA982F0D4B84 -name Marquesas -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::07C735BC-E8D6-44DE-A534-63DB49195430 -name Midway -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 89 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::AE8A690D-5981-46E4-B5E4-FEFDC4F9C4FB -name Nauru -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 97 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::9F2E3D4A-7891-4C75-88E0-25FDF68A8CCA -name Niue -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 89 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::CE4F2462-6940-4CC6-9850-06C5419EDCB2 -name Norfolk -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 77 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::C4C729B4-E075-4DA2-B248-D828D7571AE2 -name Noumea -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 121 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::9A99C5C4-E646-4941-99DE-38DD1F35A159 -name Pago_Pago -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 77 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::3F583682-3150-4295-9013-F853D471033E -name Palau -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::BD419EE6-0343-48BC-BF8F-0F458F177FC1 -name Pitcairn -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 77 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::2960C03B-423E-44B4-B2A5-AD33A771645B -name Ponape -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::0B38152A-47DB-412F-8DC7-BA83E6759803 -name Port_Moresby -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 27 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::BE0378A3-04EE-4E8F-8F39-E6B2FDB40DD5 -name Rarotonga -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 285 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::7C155B42-C847-4EDF-9B4A-2192A66B5E3B -name Saipan -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 77 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::5C471CEC-3A0C-4B7A-9412-E44B38E10287 -name Tahiti -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::EEBFC3BF-AA6D-4A79-A1A9-18AEA21BF7DE -name Tarawa -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::5ABABE7D-B8E9-480D-8D31-FF19FBC177EA -name Tongatapu -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 133 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::E0A28670-5782-4253-B2F5-8F83C8B11ACE -name Truk -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::9A325672-064A-4B1E-9EEF-9A2936C17465 -name Wake -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::0745A03C-82F9-4E6B-83EB-6FD371852D2B -name Wallis -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/Pacific -size 65 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::960A423B-F9BA-4FBF-A48B-F1DFC55D48AC -name SystemV -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -type dir -attributes 0000 -filemethod 0
File ::1A4828B2-F8AC-49D1-A9CC-5B49AA200F76 -name AST4 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 27 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::8B5F7279-2968-4D93-B16F-86733E5997C6 -name AST4ADT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 2288 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::B0C5F8DB-597C-4A02-A284-01EE6EADD8B4 -name CST6 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 27 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::5A1C41E3-D482-4C47-91A5-D381C7FE8017 -name CST6CDT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 2288 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::9D310FB8-D496-4181-8EF1-930630A9054D -name EST5 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 27 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::23BACE76-828A-4C51-BE82-DF629C3ECCDD -name EST5EDT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 2288 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::6A8F3E8E-88A1-4BE8-A45C-742B2AFBFA4D -name HST10 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 27 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::9A3E72B6-F220-4F3A-B020-7D385FEC32A5 -name MST7 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 27 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::D750D515-8EBA-4818-ADDD-4135AA444987 -name MST7MDT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 2288 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::F84633CF-DE20-40B8-8905-584F0688B41C -name PST8 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 27 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::3956BC3C-05AF-46C0-A22D-58AD82C6AE30 -name PST8PDT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 2288 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::7B5BC379-F056-40B6-AFC6-C526C257E899 -name YST9 -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 27 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::94A6BBA4-6EE7-42CD-B55B-6BE9F8412C7A -name YST9YDT -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java/lib/zi/SystemV -size 2288 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::13C0C501-A566-484F-A6F1-B209929717EA -name LICENSE -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 12981 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::AD5EDFC9-93CD-4B2E-81FD-4D4FC6E87863 -name LICENSE.rtf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 13176 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::E1EE670B-10A5-4265-82FA-720710F2407E -name LICENSE_de.rtf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 39456 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::009199A8-5616-4C08-B1B5-8E7E79776EF8 -name LICENSE_es.rtf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 26513 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::701FFF7C-F259-45A8-88CE-59EDE78976D4 -name LICENSE_fr.rtf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 37809 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::D392094E-B46E-40BB-A0D8-27FDADD408F3 -name LICENSE_it.rtf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 25904 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::4D6DE784-6EB4-44AB-88DA-07C8CDB2D47A -name LICENSE_ja.rtf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 139421 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::E0A044C1-B837-42FB-8D68-66CE1D8DA28D -name LICENSE_ko.rtf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 44679 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::23C7E91B-E20D-462C-A722-D5C9252B1C06 -name LICENSE_sv.rtf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 45229 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::1FCC714A-C204-4029-B9C0-4DA2D916C67B -name LICENSE_zh_CN.rtf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 207774 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::ADD94A9C-22E0-4A36-9586-561B6EEA2352 -name LICENSE_zh_TW.rtf -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 29896 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::F9DC7F6B-9F37-4E2F-82E5-25B0F876F66E -name README.txt -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 16282 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::F9F2FF53-843A-4C1D-85A6-53D0B605532B -name THIRDPARTYLICENSEREADME.txt -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 252567 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::8372D04D-EB21-4261-BAFF-0D96CC1A5C38 -name Welcome.html -parent F670D37D-90C2-40BE-B774-966979C96B66 -directory <%InstallDir%>/java -size 994 -mtime 1255884928 -attributes 1000 -filemethod 0
File ::37408FDC-CE2C-4FA0-896D-6981777226B1 -name {Papilio Loader} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -type dir -attributes 0000 -filemethod 0
File ::3D9B8A26-94D7-4E50-A859-986131F10796 -name .classpath -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 301 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::3B2BC80D-2039-4E77-8DB7-9915F5112606 -name .project -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 390 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::53C9C8FF-5F84-47BE-B6C3-E4B44538C299 -name bin -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin} -type dir -attributes 0000 -filemethod 0
File ::27263D6B-1BC9-4C82-9678-B39BCCD33AD7 -name net -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net} -type dir -attributes 0000 -filemethod 0
File ::C513A466-A07B-4EA5-B21D-88E03C2D13C2 -name gadgetfactory -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory} -type dir -attributes 0000 -filemethod 0
File ::637DEE1C-2A5D-4312-BA10-06B26D70E9EB -name papilio -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio} -type dir -attributes 0000 -filemethod 0
File ::AE37282E-E629-4426-938F-DB7BB66A9843 -name loader -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -type dir -attributes 0000 -filemethod 0
File ::6D5FB760-3B23-4925-9363-57A0D884028C -name {HelperFunctions$1.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1419 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::16F7B73C-FDEB-4AA3-9C2A-BDD02D40D9B3 -name {HelperFunctions$2.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 913 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::347CE759-F3C9-4622-ABBA-A8AE92B2EF9F -name {HelperFunctions$3.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 807 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::C293DEA9-BEC6-49A1-8CBE-A75EA923F030 -name HelperFunctions.class -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 11335 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::2840DE01-F042-4BFB-A560-F89D8F3B4412 -name LastOperations.class -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 3701 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::EB565251-B673-4DBD-B261-2DB8F5F0789F -name {LoaderProject$PPJProject.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1454 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::B896F271-882C-4675-8D74-DF4A61532BD5 -name LoaderProject.class -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 5354 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::C5278928-7FF5-47FC-8646-A229881DBE86 -name MessageConsumer.class -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 193 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::46FE63E6-F7A3-40D4-82E3-D27726971D34 -name MessageSiphon.class -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 2211 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::C8ED3CA4-2528-43CE-8FCE-F67F102CDBA4 -name {OperationPanel$1.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1721 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::957E39D0-C701-4643-A0B7-A1CC01245969 -name {OperationPanel$2.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1321 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::FFB4CA53-E701-415C-BF27-EDF44E8CF1F0 -name OperationPanel.class -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 9049 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::598EF4A8-4903-48A2-98DA-BAA792110DA4 -name OutputPanel.class -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1711 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::1A902CED-5CC9-4CE1-A4FD-33DFFC9A7C5E -name {PapilioLoader$1.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1299 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::5498FEC9-17F4-4A55-A451-17676777D796 -name {PapilioLoader$2.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 903 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::6DF935E0-D666-41E9-A225-99F32AD9AE10 -name {PapilioLoader$3.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1336 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::465B46C7-1B41-425B-B0B4-CB41061621AD -name {PapilioLoader$AsyncProgrammer$1.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1258 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::236DF22F-B625-4793-B0C1-D80E45CA54A5 -name {PapilioLoader$AsyncProgrammer.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 10291 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::3C22A532-626D-47E6-9F02-668C71C3F89F -name {PapilioLoader$PopulateStatus.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1372 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::D6B33E67-0A07-4EA9-B218-9128AB681A67 -name {PapilioLoader$ShellDefaultActions.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1433 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::B35581A6-9158-47FB-8BB2-444F04BE5945 -name {PapilioLoader$UserModes.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1274 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::3E01BDEC-7E33-4BFA-A509-91FE0FACC496 -name PapilioLoader.class -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 27290 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::1F8C8E6E-3E5C-4A7E-924F-7CDC2CF0A467 -name PreferencesDialog.class -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 10589 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::22CCC119-7167-4216-A85B-20A845C3B26E -name {TargetPanel$1.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1679 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::AFEE96B0-64BB-4C9A-9B46-2050B4366CC4 -name {TargetPanel$2.class} -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1243 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::6CFFAE62-307E-4D97-83FC-DACCAA60274B -name TargetPanel.class -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 16539 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::03651268-A6B9-4A34-84B9-CF97549132BA -name WriteTargets.class -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/bin/net/gadgetfactory/papilio/loader} -size 1415 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::EFCDB58D-35A7-4FCE-B621-99ED9AC99638 -name Compile.vbs -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 189 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::07957EE6-B3D7-4EEE-9F71-0A7656213D1A -name help -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/help} -type dir -attributes 0000 -filemethod 0
File ::BF1A6241-12D1-4057-A583-15494386E43F -name index.htm -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/help} -size 12889 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::54DD61E1-3132-4048-B486-BA3B26AE34AA -name images -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/help/images} -type dir -attributes 0000 -filemethod 0
File ::7E1E6054-964D-44A6-9D9E-D021642D37ED -name expert-mode-screen.png -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/help/images} -size 18116 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::DA21AA5C-4D9C-44AF-9C53-00CD9BB3936B -name installer-preferences-screen.png -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/help/images} -size 59848 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::2C5AAFC6-8C97-4EBF-A098-78836CC112E6 -name papilioRed.css -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/help/images} -size 5317 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::AC490CF0-DFC9-46D6-A25E-3E1BB7B32666 -name simple-mode-screen.png -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/help/images} -size 12050 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::1F939E15-58AE-4A6D-8425-3359A04FD992 -name images -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/images} -type dir -attributes 0000 -filemethod 0
File ::FE717E62-32EC-49CF-967D-7473D8082BFA -name loader_about.png -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/images} -size 235416 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::9DC4C526-4C8B-4854-B04B-430B47B2A2C0 -name right_arrow.png -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/images} -size 245 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::AB41FB84-BBAE-4685-8F3C-C807BF6B55BB -name JAR.vbs -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 475 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::8DFA42F0-036C-4F8B-8397-5605A1BDC470 -name license.txt -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 40738 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::1742A7E4-4DDF-4159-BECA-7A7F06BC82FF -name papilio-loader.exe -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 156291 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::4F076C99-2935-421D-B40C-A7B326353E6E -name papilio-loader.jar -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 124212 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::67D4C367-95F0-42EB-AF0F-0E84891C954B -name PapilioLoader.mf -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 74 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::FC3F9681-45E3-42C4-A8E0-A8E280CC11FF -name PapilioLoader.xml -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 935 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::B1E95E0C-2BEA-43BB-9C62-9B7CC4D3CD57 -name programmer -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer} -type dir -attributes 0000 -filemethod 0
File ::7ECA7156-3534-42DD-A0C8-D46300E39D40 -name bscan_spi_xc3s100e.bit -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer} -size 41094 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::B5627E6E-A658-4182-BE1E-B2A621E57AD0 -name bscan_spi_xc3s250e.bit -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer} -size 72262 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::8D315B13-097C-4AA2-A16A-E06884384F4A -name bscan_spi_xc3s500e.bit -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer} -size 115346 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::53709BDE-0BC8-49A6-B31C-545CB5265222 -name linux32 -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer/linux32} -type dir -attributes 0000 -filemethod 0
File ::FAE0FE0A-25B7-4E2A-B434-BFE9240B72C9 -name data2mem -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer/linux32} -size 2006416 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::D01D913A-C0B3-4AA1-929F-2B007899C011 -name devlist.txt -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer/linux32} -size 3664 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::8CBB718C-270A-49E8-8415-BC11F54C8D5F -name papilio-prog -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer/linux32} -size 342108 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::4583265B-85F7-4677-BDE7-9D12C0664DC8 -name srec_cat -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer/linux32} -size 18080 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::7FE2BE88-4C7C-44A9-AA44-DC205D1462CB -name win32 -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer/win32} -type dir -attributes 0000 -filemethod 0
File ::5624CF1A-DF5B-43E7-AEE7-E98A288CDF6E -name data2mem.exe -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer/win32} -size 1044480 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::2C9BDBFD-EE72-4541-A9AD-5334633E2608 -name devlist.txt -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer/win32} -size 3664 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::6B430E5B-596C-4EAC-B802-E0BF9DBF76AD -name papilio-prog.exe -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer/win32} -size 1433787 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::34D68142-31A5-46CD-9BF9-91E7E4A9266A -name srec_cat.exe -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer/win32} -size 589824 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::65D49456-89B1-42F7-B8AD-8AA2712C6BBF -name bscan_spi_xc6slx4.bit -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer} -size 340698 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::43CD54A5-E533-4B60-9F72-9659C6A7AF5D -name bscan_spi_xc6slx9.bit -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader/programmer} -size 340698 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::08043509-55B9-4CAA-9812-F7B8ABD48169 -name readme.txt -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 756 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::85DA92B6-C3FA-4E8A-BEBD-05E724C0C09E -name run -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 84 -mtime 1340955863 -attributes 1000 -filemethod 0
File ::A3CB8522-133D-43A1-971D-9E13C94E2EBF -name Run.vbs -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 151 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::0A606B9B-9E23-4CA9-B920-0EC3A39EE9DD -name Run_Arguments.vbs -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 882 -mtime 1340955856 -attributes 1000 -filemethod 0
File ::9F315ACC-71FD-458C-AC9A-7D6B743AAB98 -name logo.ico -parent D14F20BD-593E-4286-B63B-B60266A64F57 -directory {<%InstallDir%>/Papilio Loader} -size 4846 -mtime 1340955863 -attributes 1000 -filemethod 0

}
} gui.tcl {proc ::InitGui {} {
if {[info exists ::conf(InitGui)]} { return }
set ::conf(InitGui) 1

set ::conf(x11)  0
set ::conf(aqua) 0

if {[catch { package require Tk } error]} {
if {!$::info(FallBackToConsole)} {
puts "This program must be run in a graphical environment,"
puts "or you must specify a silent or console install."
::InstallJammer::ShowUsageAndExit
}

set ::info(GuiMode)       0
set ::info(SilentMode)    0
set ::info(DefaultMode)   0
set ::info(ConsoleMode)   1
set ::info($::conf(mode)) "Console"

if {![catch { exec stty size } result]
&& [scan $result "%d %d" height width] == 2} {
set conf(ConsoleWidth)  $width
set conf(ConsoleHeight) $height
}

return
}

set ::info(GuiMode) 1

set ::conf(wm)   [tk windowingsystem]
set ::conf(x11)  [string equal $::conf(wm) "x11"]
set ::conf(aqua) [string equal $::conf(wm) "aqua"]

wm withdraw .

if {[package vcompare [package require Tk] 8.5] >= 0} {
namespace eval :: { namespace import ::ttk::style }
} else {
package require tile
}

package require tkpng

if {$::conf(x11)} {
tile::setTheme jammer
}

bind TButton <Return> "%W invoke; break"
array set ::images {E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE,Icon <%Icon%> 3F8FDE11-35CC-4405-B6A1-96EA4D066593,Icon <%Icon%> 2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130,Icon <%Icon%> 69594F85-CA9E-4929-A720-4F1EF022934A,Image <%Image%> CE2C8BD4-87A9-483E-81F6-EE8AE5402128,Icon <%Icon%> A583FDD4-6649-4E1B-B80E-6FA39B7679B1,Icon <%Icon%> C7F851DF-4A8A-4AF9-B383-98934210530E,Icon <%Icon%> 06282C45-3F2A-4AEC-9AD7-FD5C2D65C834,Image <%Image%> 461032D1-6639-4A6C-8348-907909276E74,Icon <%Icon%> 33F3321F-92D8-45A6-934E-5F3D1E4387A4,Image <%Image%> CFAAA850-84CE-4B01-A86D-9439F92E0AA2,Image <%Image%> 94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Icon <%Icon%>}
set "::images(Modern/Small/SetupModernSmall01.gif)" [image create photo -data R0lGODlhNwA3APcAAP/////78Pf39+/39+/v9+/v7+fv7+fn797n597e59be3tbW3s7W3s7W1s7O1sbO1sbOzr3Gzr3GxrW9xq29xq21xqW1xrW9va21vaW1vaW1taWtvaWttZytvZyttZyltZSltZylrZSlrYyltYylrZScrZScpYycrYycpYyUpYScrYScpYSUrYSUpYyUnISUnISMnISMlHuUpXuMpXOMpXuUnHuMnHuMlHuElHOMnHuEjHOEjHN7jGt7hGtzhGNzhGtze2NzewcAAAj+AHMIFEgjR8GCM2jMkLFQhsMWLWSwYNFi4goWKk6IEJGRxYmPIEmAHDnSYMGBMwzOsKHQYUOHKipavKhChYgNIEhkHClS5IkRP4P6xHFyIA2FKh0qfSijxYoWMVmsqAkiQwefH7EG/QhUJNARB43SYDmjLMOXDifKnIqRRAerPneCBCrUp8+BeI/aSIh2qQyaF52yAPEWp9aQdLV6LXr0aI6EDF0upRiRolSnIDZksEoyK92sI4GqcGxSId+yNZZGlDhR6lMSHjRbzXnC52fEXD8yAJHQMeSyDVc3rXzxKQsSITxszrDhA1a7dEc8/2lAAQcZBg3upSE5+GrLKlb+aPTwocMG5VdJdu2c2ECBAxdYcAe+sK9Sta41fvjgwfyGDjnZVduAJNgGUgEIHhDBCDIUFJlfDzlVXAsoaCQCCB70958HBc6FFQi3fYQgAQjudpZ9TEHUwgsvpFBhCBhy0AEH/YnQWW0jgKAjCZ+NSKIBDVxnll/CwVCDDSy+gIIJJHwgAn8dZGhjT89VlVNXI7hHgAA/KlABCxAuZcOYY8LwAoUWYpgheTZuxdUHGXiwHglaCiDAewgoMAGYYcpwZA433DAmiym0QMKFGe5n4208dlBBBgH+dEABdnJJwAEKLFDBCX2OCSgONgg0KIvibXThgCFVZQGkPH6EQAH+W9o5QAEINPDABCIwxZANONyAAw6ACiQomTW0kFurqIKAAQUVAMhVAghWeucBCTQQAa4uhZoDsMB+mgOZYxZ740gZMGsBTiAl4J4AAFR6QJ4PXIABCRGR+S24+IZrbEZfjeRBBQBjYAGHHykwqbR3GlBtBFZ9AOYKw6XoZ0QvHAlVViWMpCwFzD7q7AkKvFppu7MisAAEE3Cwn2UXWUbZRFFVJFeqG3QM8Ga0NaAupe1WqrC1GDjJ0VMqYBReTTVNdcJOXnGVmc0VYIBBBk6S8IDBlLLbMwF5Xkv1CRViRDTSZH+kgoEnZBb1zWtbJYLVC0xKQM92ElCdAxJg4AH+2CiUUJPRSC9ttlYg3LScBRUwS8FmhkXQgALrslvpeyenDMIJKaQwFdkZdQ7aRyB8kJlsiK+awdRwSfBAAgcDQLfdC2PAgQgotFhh4Lcv/VyTGco29aOPbgYgBhAsgMABdgbguqUmQ3ABB5dnruTSgQteE0glhMBfbLI9OvWqOGngOOuxLs8lpg/kDX0JJaRgZu4qoLDCUyqaUFsIInjAwQaybRb8eRiYwNUOJrmeFSABDLhV6C5Egtq16ATze0qSXuCCFVRIBMnpXf+W858IEK8Bxyvf8gxQHQ6cwCMhQYGxPjI/iLAISS4wlv10FBvuaYZ/50lABiSgMwLSTQD+CTBBr14gl56AJDwQSY2RXgCDFbXARScowaGchKEZeQAAF7hA8RCwrgDYCQAJSIEOfGWmFIzrKTKoGLFscKQX2AAGTWERREqlIwAwQHw6i5zyEFCCHfBgjDcwU0ZEYkb65StciDwSuORYGxIAYAAciMAADRCrAoiABz3YwQ7GGIMmVoiFJ3AhxdIYLjMhCQYzMFINYIAkY4nEdRDAQAQYgLUtZaAHQOgBD3igyUARClVmg6BrnKIiFSWpBTVY5QodCQAERNIBxjPAACCwg1zikpc7wEEnXZCCF9iPBCVo02EERz2oEFNFWXEdACYgy8chAAEmCII8e9ADH/CyVzH+oKCLTCDFRgLTn8DEShHVuQANCFBnEdiBPOXpAx9kUgdDbNEKoPiRt80lRP40YlaY6ToOXECSCzABEBYahFzu8o++rKAJ+BlOEYSzQDANDUkUo04ANGADE5DkC0gaBB+YVJM62OZEV9rSjejoQpf73E+6YsQR1LQAHriABCaAA5729KdjrIHtmIQ/7SWKPKLbkUWnlJuP1BQAEfAAO3lgVZ/qUpPa9KT9MKi9/XSgMDjsjwd0xNek/uSsCvCA7Hxg1SDQ06G9hIELvGmCJ3lVQ/xbTgYswDHEMe48/zkrADCwAQ70oLAlpScvx0hBFKBgI/uh0YzMsxkLuBZgiUv+nOI4plkGcIADbLUqEH5Az4f6ckmo/QCN9kc6/8H2uLClgGYFcB4YgLanusRmUJXU2O3FhgP+W07iMgCw2XKsApoFwANAgILnGhaTm/xVDFzQNwzq74aSZdt2Y8sx5WrWkijIrW4duksdjNFM3nwS9yTL3fk+qr4UWJZ9NSsBGOjgB4UFgk93uclAbbNvmdmMwLh7ugogTnH0pW14EdCCGxAWtA3FZq9g0MkzoUB//lsWd7/bsQTLdsGaxcAOPltYH/ygoXC9wTZX5CIUhEDDzMLAcUGcYBGH1wA24MFII8zf9MYgnxRaAXuBe2QO1ze5CA6vOieASZJOeaH1BKpIoFz8EfuZFgXIUU7UEOxdMbtuAB/AAY9LamaHZjKbLV6SRhoLtgiGsz+tVTDA7Ow6A+T3ufakMCDZHIJwJlV+EDHtoaoom4AAADs=]
set "::images(Modern/SetupModern01.gif)" [image create photo -data ]


proc ::ThemeSetup {} {
option add *font  TkTextFont

if {$::tcl_platform(platform) ne "windows"} {
option add *background          [style default . -background]
option add *selectForeground    [style default . -selectforeground]
option add *selectBackground    [style default . -selectbackground]

option add *Listbox.background  #FFFFFF

option add *Entry.background    #FFFFFF
option add *Entry.borderWidth   1

option add *Text.background     #FFFFFF
}
}

ThemeSetup


package require Tcl 8.1.1

namespace eval Widget {
variable _class
variable _tk_widget

variable _theme 0

variable  _optiontype
array set _optiontype {
TkResource Widget::_test_tkresource
BwResource Widget::_test_bwresource
Enum       Widget::_test_enum
Int        Widget::_test_int
Boolean    Widget::_test_boolean
Boolean2   Widget::_test_boolean2
String     Widget::_test_string
Flag       Widget::_test_flag
Synonym    Widget::_test_synonym
Color      Widget::_test_color
Color2     Widget::_test_color2
Padding    Widget::_test_padding
}

proc use {} {}
}


proc Widget::CreateTempWidget { class {command frame} } {
set class [string map [list :: ""] $class]
set path  ".#BWidget.#Class#$class"
if {![winfo exists .#BWidget]} { frame .#BWidget }
if {![winfo exists $path]} {
if {[string equal $command "frame"]
|| [string equal $command "toplevel"]} {
$command $path -class $class
if {[string equal $command "toplevel"]} { wm withdraw $path }
} else {
$command $path
}
}
return $path
}


proc Widget::tkinclude { class tkwidget subpath args } {
foreach {cmd lopt} $args {
switch -- $cmd {
remove {
foreach option $lopt {
set remove($option) 1
}
}

include {
foreach option $lopt {
set include($option) 1
}
}

prefix {
set prefix [lindex $lopt 0]
foreach option [lrange $lopt 1 end] {
set rename($option) "-$prefix[string range $option 1 end]"
}
}

rename - readonly - initialize {
array set $cmd $lopt
}

default {
return -code error "invalid argument \"$cmd\""
}
}
}

namespace eval $class {}
upvar 0 ${class}::opt classopt
upvar 0 ${class}::map classmap
upvar 0 ${class}::map$subpath submap
upvar 0 ${class}::optionExports exports
upvar 0 ${class}::subpaths subpaths

if {![info exists subpaths($subpath)]} { set subpaths($subpath) [list] }
eval [list lappend subpaths($subpath)] [array get initialize]

set widg [Widget::CreateTempWidget $tkwidget $tkwidget]
foreach optdesc [_get_tkwidget_options $tkwidget] {
set option [lindex $optdesc 0]

if {[info exists remove($option)]} { continue }
if {[info exists include] && ![info exists include($option)]} {continue}

if {[llength $optdesc] == 3} {
set syn [lindex $optdesc 1]
if {![info exists remove($syn)]} {
if {[info exists rename($syn)]} {
set classopt($option) [list Synonym $rename($syn)]
} else {
set classopt($option) [list Synonym $syn]
}
}

continue
}

set ro      0
set value   [lindex $optdesc 1]
set realopt $option

if {[info exists rename($option)]} {
set realopt $option
set option  $rename($option)
}

if {[info exists readonly($option)]} {
set ro $readonly($option)
}

set optionval [list $tkwidget $realopt]
set classopt($option) [list TkResource $value $ro $optionval]

if {![info exists initialize($option)]} {
set conf    [_configure_option $option ""]
set dbName  [lindex $conf 0]
set dbClass [lindex $conf 1]

set def [option get $widg $dbName $dbClass]
if {[string length $def]} {
set value $def
lappend subpaths($subpath) $option $value
}
}


lappend classmap($option) $subpath "" $realopt
set submap($realopt) $option
}
}


proc Widget::bwinclude { class subclass subpath args } {
upvar 0 ${subclass}::opt subclassopt

foreach {cmd lopt} $args {
switch -- $cmd {
remove {
foreach option $lopt {
set remove($option) 1
}
}

include {
foreach option $lopt {
set include($option) 1
}
}

prefix {
set prefix   [lindex $lopt 0]
set options  [lrange $lopt 1 end]
set doremove [string equal [lindex $options 0] "remove"]
if {![llength $options] || $doremove} {
set options  [list]
set toremove [lrange $options 1 end]
foreach option [array names subclassopt] {
if {[lsearch -exact $toremove $option] < 0} {
lappend options $option
}
}
}

foreach option $options {
set rename($option) "-$prefix[string range $option 1 end]"
}
}

rename - readonly - initialize {
array set $cmd $lopt
}

default {
return -code error "invalid argument \"$cmd\""
}
}
}

namespace eval $class {}
upvar 0 ${class}::opt classopt
upvar 0 ${class}::map classmap
upvar 0 ${class}::map$subpath submap
upvar 0 ${class}::optionExports exports
upvar 0 ${subclass}::optionExports subexports
upvar 0 ${class}::subpaths subpaths

if {![info exists subpaths($subpath)]} { set subpaths($subpath) [list] }
eval [list lappend subpaths($subpath)] [array get initialize]

set path [Widget::CreateTempWidget $class]
foreach {option optdesc} [array get subclassopt] {
set subOption $option

if {[info exists remove($option)]} { continue }
if {[info exists include] && ![info exists include($option)]} {continue}

set type [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set syn [lindex $optdesc 1]
if {![info exists remove($syn)]} {
if {[info exists rename($syn)]} {
set classopt($option) [list Synonym $rename($syn)]
} else {
set classopt($option) [list Synonym $syn]
}
}
continue
}

set ro      [lindex $optdesc 2]
set value   [lindex $optdesc 1]
set realopt $option

if {[info exists rename($option)]} {
set realopt $option
set option  $rename($option)
}

if {[info exists initialize($option)]} {
set value $initialize($option)
}

if {[info exists readonly($option)]} {
set ro $readonly($option)
}

if {![info exists initialize($option)]} {
set conf    [_configure_option $option ""]
set dbName  [lindex $conf 0]
set dbClass [lindex $conf 1]

set def [option get $path $dbName $dbClass]
if {[string length $def]} {
set value $def
lappend subpaths($subpath) $option $value
}
}

set classopt($option) [list $type $value $ro [lindex $optdesc 3]]


lappend classmap($option) $subpath $subclass $realopt
set submap($realopt) $option
}
}


proc Widget::declare { class optlist } {
variable _optiontype

namespace eval $class {}
upvar 0 ${class}::opt classopt
upvar 0 ${class}::optionExports exports
upvar 0 ${class}::optionClass optionClass

set path [Widget::CreateTempWidget $class]
foreach optdesc $optlist {
set option  [lindex $optdesc 0]
set optdesc [lrange $optdesc 1 end]
set type    [lindex $optdesc 0]

if {![info exists _optiontype($type)]} {
return -code error "invalid option type \"$type\""
}

if {[string equal $type "Synonym"]} {
set syn [lindex $optdesc 1]
if {![info exists classopt($syn)]} {
return -code error  "unknow option \"$syn\" for Synonym \"$option\""
}
set classopt($option) [list Synonym $syn]
continue
}

set value [lindex $optdesc 1]
set ro    [lindex $optdesc 2]
set arg   [lindex $optdesc 3]

set conf    [_configure_option $option ""]
set dbName  [lindex $conf 0]
set dbClass [lindex $conf 1]
set default [option get $path $dbName $dbClass]

if {[string equal $type "BwResource"]} {
set subclass    [lindex $arg 0]
set realopt     [lindex $arg 1]
if {![string length $realopt]} { set realopt $option }

upvar 0 ${subclass}::opt subclassopt
if {![info exists subclassopt($realopt)]} {
return -code error "unknow option \"$realopt\""
}

set suboptdesc $subclassopt($realopt)
if {![string length $value]} {
set value [lindex $suboptdesc 1]
}

set type [lindex $suboptdesc 0]
set ro   [lindex $suboptdesc 2]
set arg  [lindex $suboptdesc 3]
set classopt($option) [list $type $value $ro $arg]
continue
}

if {[string equal $type "TkResource"]} {
set tkwidget [lindex $arg 0]
set widg [Widget::CreateTempWidget $tkwidget $tkwidget]
set realopt  [lindex $arg 1]
if { ![string length $realopt] } {
set realopt $option
}
set tkoptions [_get_tkwidget_options $tkwidget]
if {![string length $value]} {
set ind [lsearch $tkoptions [list $realopt *]]
set value [lindex [lindex $tkoptions $ind] end]
}
set classopt($option) [list TkResource $value $ro  [list $tkwidget $realopt]]
set optionClass($option) [lindex [$widg configure $realopt] 1]
continue
}

if {[string equal $type "Color"]} {
if {[info exists ::BWidget::colors($value)]} {
set value $::BWidget::colors($value)
}
}


set classopt($option) [list $type $value $ro $arg]
}
}


proc Widget::define { class filename args } {
variable _inuse
variable ::BWidget::use

proc ::${class}::use {} {}

if {[set x [lsearch -exact $args "-classonly"]] > -1} {
set args [lreplace $args $x $x]
} else {
interp alias {} ::${class} {} ${class}::create

proc ::${class}::cget { path option } {
return [Widget::cget $path $option]
}

proc ::${class}::configure { path args } {
return [Widget::configure $path $args]
}

bind $class <Destroy> [list Widget::destroy %W]
}

set _inuse($class) 0

set use($class)      $args
set use($class,file) $filename
lappend use(classes) $class

foreach class $args { ${class}::use }
}


proc Widget::create { class path {rename 1} } {
if {$rename} { rename $path ::$path:cmd }
set cmd "${class}::\$cmd"
proc ::$path { cmd args }  [subst {return \[eval \[linsert \$args 0 $cmd [list $path]\]\]}]
return $path
}


proc Widget::addmap { class subclass subpath options } {
upvar 0 ${class}::opt classopt
upvar 0 ${class}::optionExports exports
upvar 0 ${class}::optionClass optionClass
upvar 0 ${class}::map classmap
upvar 0 ${class}::map$subpath submap
upvar 0 ${class}::subpaths subpaths

if {![info exists subpaths($subpath)]} { set subpaths($subpath) [list] }

foreach {option realopt} $options {
if {![string length $realopt]} { set realopt $option }


lappend classmap($option) $subpath $subclass $realopt
set submap($realopt) $option

lappend subpaths($subpath) $realopt [lindex $classopt($option) 1]
}
}


proc Widget::syncoptions { class subclass subpath options } {
upvar 0 ${class}::sync classync
upvar 0 ${class}::subpaths subpaths

if {![info exists subpaths($subpath)]} { set subpaths($subpath) [list] }

foreach {option realopt} $options {
if {![string length $realopt]} { set realopt $option }
set classync($option) [list $subpath $subclass $realopt]
}
}


proc Widget::init { class path options {initFromODB 0} } {
variable _inuse

upvar 0 Widget::_optiontype opttype
upvar 0 ${class}::opt classopt
upvar 0 ${class}::map classmap
upvar 0 ${class}::$path:opt  pathopt
upvar 0 ${class}::$path:mod  pathmod
upvar 0 ${class}::$path:init pathinit

if {[info exists pathopt]} { unset pathopt }
if {[info exists pathmod]} { unset pathmod }

set fpath    $path
set rdbclass [string map [list :: ""] $class]
if {![winfo exists $path]} { set fpath [Widget::CreateTempWidget $class] }

foreach {option optdesc} [array get classopt] {
set pathmod($option) 0
if {[info exists classmap($option)]} { continue }

set type [lindex $optdesc 0]
if {[string equal $type "Synonym"]} { continue }

set alt ""
if {[string equal $type "TkResource"]} {
set alt [lindex [lindex $optdesc 3] 1]
}

set optdb [lindex [_configure_option $option $alt] 0]
set def   [option get $fpath $optdb $rdbclass]
if {[string length $def]} {
set pathopt($option) $def
} else {
set pathopt($option) [lindex $optdesc 1]
}
}

if {![info exists _inuse($class)]} { set _inuse($class) 0 }
incr _inuse($class)

set Widget::_class($path) $class

if {$initFromODB} {
array set pathopt $options
} else {
foreach {option value} $options {
if {![info exists classopt($option)]} {
unset pathopt
unset pathmod
return -code error "unknown option \"$option\""
}

set optdesc $classopt($option)
set type    [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set option  [lindex $optdesc 1]
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
}

set arg [lindex $optdesc 3]
set pathopt($option)  [$opttype($type) $option $value $arg]
set pathinit($option) $pathopt($option)
}
}
}



proc Widget::initFromODB { class path options } {
Widget::init $class $path $options 1
}




proc Widget::copyinit { class templatepath path options } {
upvar 0 ${class}::opt classopt  ${class}::$path:opt	 pathopt  ${class}::$path:mod	 pathmod  ${class}::$path:init pathinit  ${class}::$templatepath:opt	 templatepathopt  ${class}::$templatepath:mod	 templatepathmod  ${class}::$templatepath:init templatepathinit

if {[info exists pathopt]} { unset pathopt }
if {[info exists pathmod]} { unset pathmod }

array set pathmod  [array get templatepathmod]
array set pathopt  [array get templatepathopt]
array set pathinit [array get templatepathinit]

set Widget::_class($path) $class
foreach {option value} $options {
if {![info exists classopt($option)]} {
unset pathopt
unset pathmod
return -code error "unknown option \"$option\""
}

set optdesc $classopt($option)
set type    [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set option	[lindex $optdesc 1]
set optdesc $classopt($option)
set type	[lindex $optdesc 0]
}

set arg [lindex $optdesc 3]
set pathopt($option)  [$Widget::_optiontype($type) $option $value $arg]
set pathinit($option) $pathopt($option)
}
}


proc Widget::parseArgs { class options {errorOut 1} } {
upvar 0 ${class}::opt classopt
upvar 0 ${class}::map classmap

foreach {option val} $options {
if {![info exists classopt($option)]} {
if {$errorOut} { return -code error "unknown option \"$option\"" }
continue
}

set optdesc $classopt($option)
set type    [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set option  [lindex $optdesc 1]
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
}

if {[string equal $type "TkResource"]} {
Widget::_get_tkwidget_options [lindex [lindex $optdesc 3] 0]
}

set val [$Widget::_optiontype($type) $option $val [lindex $optdesc 3]]

if {[info exists classmap($option)]} {
foreach {subpath subclass realopt} $classmap($option) {
lappend maps($subpath) $realopt $val
}
} else {
lappend maps($class) $option $val
}
}

return [array get maps]
}



proc Widget::initArgs { class options arrayName } {
upvar 1 $arrayName maps
upvar 0 ${class}::subpaths subpaths

array set maps [list $class {} :cmd {}]
foreach subpath [array names subpaths] {
set maps($subpath) [list]
}

array set maps [array get subpaths]

foreach {var val} [Widget::parseArgs $class $options] {
eval lappend maps($var) $val
}
}



proc Widget::splitArgs { options args } {
array set maps [list :cmd {}]
foreach class $args {
if {![info exists maps($class)]} { set maps($class) [list] }
array set maps [Widget::parseArgs $class $options 0]
}

return [array get maps]
}


proc Widget::optionExists { class option } {
return [info exists ${class}::opt($option)]
}


proc Widget::class { path } {
if {[info exists Widget::_class($path)]} { return $Widget::_class($path) }
return -code error "unknown widget $path"
}


proc Widget::destroy { path {unsetVariables 1} } {
variable _class
variable _inuse

if {[info exists _class($path)]} {
set class $_class($path)

if {[info exists _inuse($class)]} { incr _inuse($class) -1 }

if {![string equal [info commands $path] ""]} { rename $path "" }

foreach x {opt mod init} {
if {[info exists ${class}::$path:$x]} {
unset ${class}::$path:$x
}
}

if {$unsetVariables} { eval unset [info vars ${class}::$path:*] }

unset _class($path)
}
}


proc Widget::configure { path options } {
set len [llength $options]
if {$len < 2} { return [_get_configure $path $options] }
if {$len % 2} { return -code error "incorrect number of arguments" }

variable _class
variable _optiontype

set class $_class($path)
upvar 0 ${class}::opt  classopt
upvar 0 ${class}::map  classmap
upvar 0 ${class}::$path:opt pathopt
upvar 0 ${class}::$path:mod pathmod

set window [_get_window $class $path]
foreach {option value} $options {
if {![info exists classopt($option)]} {
return -code error "unknown option \"$option\""
}

set optdesc $classopt($option)
set type    [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set option  [lindex $optdesc 1]
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
}

if {[lindex $optdesc 2]} { continue }

set newval [$_optiontype($type) $option $value [lindex $optdesc 3]]

if {[info exists classmap($option)]} {
set window [_get_window $class $window]
foreach {subpath subclass realopt} $classmap($option) {
if {[string length $subclass]} {
set curval [${subclass}::cget $window$subpath $realopt]
${subclass}::configure $window$subpath $realopt $newval
} else {
set curval [$window$subpath cget $realopt]
$window$subpath configure $realopt $newval
}
}
} else {
set curval $pathopt($option)
set pathopt($option) $newval
}

set pathmod($option) [expr {![string equal $newval $curval]}]
}

return
}


proc Widget::cget { path option } {
if {![info exists ::Widget::_class($path)]} {
return -code error "unknown widget \"$path\""
}

set class $::Widget::_class($path)
if {![info exists ${class}::opt($option)]} {
return -code error "unknown option \"$option\""
}

set optdesc [set ${class}::opt($option)]
set type    [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set option [lindex $optdesc 1]
}

if {[info exists ${class}::map($option)]} {
foreach {subpath subclass realopt} [set ${class}::map($option)] {break}
set path "[_get_window $class $path]$subpath"
return [$path cget $realopt]
}
upvar 0 ${class}::$path:opt pathopt
set pathopt($option)
}


proc Widget::subcget { path subwidget } {
set class $::Widget::_class($path)
upvar 0 ${class}::$path:opt pathopt
upvar 0 ${class}::map$subwidget submap
upvar 0 ${class}::$path:init pathinit

set result [list]
foreach realopt [array names submap] {
if {[info exists pathinit($submap($realopt))]} {
lappend result $realopt $pathopt($submap($realopt))
}
}
return $result
}


proc Widget::hasChanged { path option varName } {
upvar 1 $varName value
Widget::getVariable $path mod pathmod

set value   [Widget::cget $path $option]
set result  $pathmod($option)
set pathmod($option) 0

return $result
}

proc Widget::hasChangedX { path option args } {
set class $::Widget::_class($path)
upvar 0 ${class}::$path:mod pathmod

set result  $pathmod($option)
set pathmod($option) 0
foreach option $args {
lappend result $pathmod($option)
set pathmod($option) 0
}

set result
}


proc Widget::anyChangedX { path args } {
set class $::Widget::_class($path)
upvar 0 ${class}::$path:mod pathmod

set result 0
foreach option $args {
incr result $pathmod($option)
set pathmod($option) 0
}
return $result
}


proc Widget::getoption { path option } {
set class $::Widget::_class($path)
upvar 0 ${class}::${path}:opt pathopt
set pathopt($option)
}


proc Widget::setoption { path args } {
set class $::Widget::_class($path)
upvar 0 ${class}::${path}:opt pathopt
foreach [list option value] $args {
set pathopt($option) $value
}
}


proc Widget::getMegawidgetOption { path option } {
set class $::Widget::_class($path)
upvar 0 ${class}::${path}:opt pathopt
set pathopt($option)
}


proc Widget::setMegawidgetOption { path option value } {
set class $::Widget::_class($path)
upvar 0 ${class}::${path}:opt pathopt
set pathopt($option) $value
}


proc Widget::_get_window { class path } {
set idx [expr {[string last "#" $path] + 1}]
if {$idx && [string equal [string range $path $idx end] $class]} {
return [string range $path 0 [expr {$idx - 2}]]
}
return $path
}


proc Widget::_get_configure { path options } {
variable _class

set class $_class($path)
upvar 0 ${class}::opt classopt
upvar 0 ${class}::$path:opt pathopt

if {[llength $options] == 1} {
set option  [lindex $options 0]
if { ![info exists classopt($option)] } {
return -code error "unknown option \"$option\""
}
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
if { [string equal $type "Synonym"] } {
set option  [lindex $optdesc 1]
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
}
if { [string equal $type "TkResource"] } {
set alt [lindex [lindex $optdesc 3] 1]
} else {
set alt ""
}

set res [list $option]
eval lappend res [_configure_option $option $alt]
lappend res [lindex $optdesc 1] [${class}::cget $path $option]

return $res
}


set result [list]
foreach option [lsort [array names classopt]] {
set alt     ""
set syn     ""
set optdesc $classopt($option)
set type    [lindex $optdesc 0]

if {[string equal $type "Synonym"]} {
set syn     $option
set option  [lindex $optdesc 1]
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
}

if {[string equal $type "TkResource"]} {
set alt [lindex [lindex $optdesc 3] 1]
}

set res [_configure_option $option $alt]
if {![string length $syn]} {
lappend result [concat $option $res  [list [lindex $optdesc 1]] [list [cget $path $option]]]
} else {
lappend result [list $syn [lindex $res 0]]
}
}

return $result
}


proc Widget::_configure_option { option altopt } {
variable _optiondb
variable _optionclass

if {[info exists _optiondb($option)]} {
set optdb $_optiondb($option)
} else {
set optdb [string range $option 1 end]
}

if {[info exists _optionclass($option)]} {
set optclass $_optionclass($option)
} elseif {[string length $altopt]} {
if {[info exists _optionclass($altopt)]} {
set optclass $_optionclass($altopt)
} else {
set optclass [string range $altopt 1 end]
}
} else {
set optclass [string range $option 1 end]
}

return [list $optdb $optclass]
}


proc Widget::_get_tkwidget_options { tkwidget } {
variable _tk_widget
variable _optiondb
variable _optionclass

if {![info exists _tk_widget($tkwidget)]} {
set widget [Widget::CreateTempWidget $tkwidget $tkwidget]

set config [$widget configure]
foreach optlist $config {
set opt [lindex $optlist 0]
if {[llength $optlist] == 2} {
set refsyn [lindex $optlist 1]

set idx [lsearch $config [list * $refsyn *]]
if {$idx == -1} {
if {[string index $refsyn 0] == "-"} {
set idx [lsearch $config [list $refsyn * *]]
} else {
set refsyn [string tolower $refsyn]
set idx [lsearch $config [list -$refsyn * *]]
}

if {$idx == -1} {
return -code error "can't find option of synonym $opt"
}
}

set syn [lindex [lindex $config $idx] 0]
set def [lindex [lindex $config $idx] 4]
lappend _tk_widget($tkwidget) [list $opt $syn $def]
} else {
set def [lindex $optlist 4]
lappend _tk_widget($tkwidget) [list $opt $def]
set _optiondb($opt)    [lindex $optlist 1]
set _optionclass($opt) [lindex $optlist 2]
}
}
}

return $_tk_widget($tkwidget)
}


proc Widget::_test_tkresource { option value arg } {
set tkwidget [lindex $arg 0]
set realopt  [lindex $arg 1]
set path     [Widget::CreateTempWidget $tkwidget $tkwidget]
set old      [$path cget $realopt]
$path configure $realopt $value
set res      [$path cget $realopt]
$path configure $realopt $old
return $res
}


proc Widget::_test_bwresource { option value arg } {
return -code error "bad option type BwResource in widget"
}


proc Widget::_test_synonym { option value arg } {
return -code error "bad option type Synonym in widget"
}

proc Widget::_test_color { option value arg } {
if {[info exists ::BWidget::colors($value)]} {
set value $::BWidget::colors($value)
}

if {[catch {winfo rgb . $value} color]} {
return -code error  "bad $option value \"$value\": must be a colorname or #RRGGBB"
}

return $value
}


proc Widget::_test_color2 { option value arg } {
if {![string length $value]} { return }

if {[info exists ::BWidget::colors($value)]} {
set value $::BWidget::colors($value)
}

if {[catch {winfo rgb . $value} color]} {
return -code error  "bad $option value \"$value\": must be a colorname or #RRGGBB"
}

return $value
}


proc Widget::_test_string { option value arg } {
return $value
}


proc Widget::_test_flag { option value arg } {
set len [string length $value]
set res ""
for {set i 0} {$i < $len} {incr i} {
set c [string index $value $i]
if {[string first $c $arg] == -1} {
set name [string range $option 1 end]
return -code error [BWidget::badOptionString $name $value $arg]
}
if {[string first $c $res] == -1} { append res $c }
}
return $res
}


proc Widget::_test_enum { option value arg } {
if {[lsearch -exact $arg $value] == -1} {
set name [string range $option 1 end]
return -code error [BWidget::badOptionString $name $value $arg]
}
return $value
}


proc Widget::_test_int { option value arg } {
set map [list %d $value]
if {![string is int -strict $value]
|| ([string length $arg] && ![expr [string map $map $arg]])} {
return -code error  "bad $option value \"$value\": must be integer ($arg)"
}
return $value
}


proc Widget::_test_boolean { option value arg } {
if {![string is boolean -strict $value]} {
set name [string range $option 1 end]
return -code error [BWidget::badOptionString $name $value boolean]
}

return [string is true $value]
}


proc Widget::_test_boolean2 { option value arg } {
if {![string is boolean $value]} {
set name [string range $option 1 end]
set opts [list empty boolean]
return -code error [BWidget::badOptionString $name $value $opts]
}

if {[string length $value]} { return [string is true $value] }
}


proc Widget::_test_padding { option values arg } {
set len [llength $values]
if {$len < 1 || $len > 2} {
return -code error  "bad pad value \"$values\": must be positive screen distance"
}

foreach value $values {
set map [list %d $value]
if {![string is int -strict $value]
|| ([string length $arg] && ![expr [string map $map $arg]])} {
return -code error  "bad pad value \"$value\": must be positive screen distance"
}
}
return $values
}


proc Widget::_get_padding { args } {
if {[llength $args] == 2} {
set padding [lindex $args 0]
set index   [lindex $args 1]
} elseif {[llength $args] == 3} {
set path    [lindex $args 0]
set option  [lindex $args 1]
set index   [lindex $args 2]
set padding [Widget::cget $path $option]
}
set val [lindex $padding $index]
if {![string length $val]} { set val [lindex $padding 0] }
return $val
}


proc Widget::focusNext { w } {
set cur $w
while 1 {


set parent $cur
set children [winfo children $cur]
set i -1


while 1 {
incr i
if {$i < [llength $children]} {
set cur [lindex $children $i]
if {[winfo toplevel $cur] == $cur} {
continue
} else {
break
}
}


set cur $parent
if {[winfo toplevel $cur] == $cur} {
break
}
set parent [winfo parent $parent]
set children [winfo children $parent]
set i [lsearch -exact $children $cur]
}
if {($cur == $w) || [focusOK $cur]} {
return $cur
}
}
}


proc Widget::focusPrev { w } {
set cur $w
while 1 {


if {[winfo toplevel $cur] == $cur}  {
set parent $cur
set children [winfo children $cur]
set i [llength $children]
} else {
set parent [winfo parent $cur]
set children [winfo children $parent]
set i [lsearch -exact $children $cur]
}


while {$i > 0} {
incr i -1
set cur [lindex $children $i]
if {[winfo toplevel $cur] == $cur} {
continue
}
set parent $cur
set children [winfo children $parent]
set i [llength $children]
}
set cur $parent
if {($cur == $w) || [focusOK $cur]} {
return $cur
}
}
}


proc Widget::focusOK { w } {
set code [catch {$w cget -takefocus} value]
if {$code == 1} { return 0 }

if {!$code && [string length $value]} {
if {$value == 0} {
return 0
} elseif {$value == 1} {
return [winfo viewable $w]
} else {
set value [uplevel \#0 $value $w]
if {[string length $value]} { return $value }
}
}

if {![winfo viewable $w]} { return 0 }

set code [catch {$w cget -state} value]
if {!$code && [string equal $value "disabled"]} { return 0 }

set code [catch {$w cget -editable} value]
if {!$code && $value == 0} { return 0 }

set top [winfo toplevel $w]
foreach tag [bindtags $w] {
if {![string equal $tag $top]
&& ![string equal $tag "all"]
&& [string match *Key* [bind $tag]]} {
return 1
}
}
return 0
}


proc Widget::traverseTo { w } {
set focus [focus]
if {[string length $focus]} {
event generate $focus <<TraverseOut>>
}
focus $w

event generate $w <<TraverseIn>>
}



proc Widget::varForOption { path option } {
variable _class
variable _optiontype

set class $_class($path)
upvar 0 ${class}::$path:opt pathopt

if {![info exists pathopt($option)]} {
return -code error "unable to find variable for option \"$option\""
}

return ::Widget::${class}::$path:opt($option)
}


proc Widget::widgetVar { path varName } {
set class $Widget::_class($path)
return ::Widget::${class}::$path:$varName
}


proc Widget::getVariable { path varName {newVarName ""} } {
if {![string length $newVarName]} { set newVarName $varName }
uplevel 1 [list upvar \#0 [Widget::widgetVar $path $varName] $newVarName]
}


proc Widget::options { path args } {
if {[llength $args]} {
foreach option $args {
lappend options [_get_configure $path $option]
}
} else {
set options [_get_configure $path {}]
}

set result [list]
foreach list $options {
if {[llength $list] < 5} { continue }
lappend result [lindex $list 0] [lindex $list end]
}
return $result
}


proc Widget::getOption { option default args } {
foreach widget $args {
set value  [Widget::getoption $widget $option]
if {$value != $default} { break }
}
return $value
}


proc Widget::cgetOption { option default args } {
foreach widget $args {
set value  [Widget::cget $widget $option]
if {$value != $default} { break }
}
return $value
}


proc Widget::nextIndex { path node } {
Widget::getVariable $path autoIndex
if {![info exists autoIndex]} { set autoIndex -1 }
return [string map [list #auto [incr autoIndex]] $node]
}


proc Widget::exists { path } {
return [info exists ::Widget::_class($path)]
}


proc Widget::theme {{bool {}}} {
variable _theme
if {[llength [info level 0]] == 2} {
if {[catch {package require tile 0.6}]
&& [catch {package require tile 1}]} {
return -code error "BWidget's theming requires tile 0.6+"
} else {
catch {style default BWSlim.Toolbutton -padding 0}
}
set _theme [string is true -strict $bool]
}
return $_theme
}


namespace eval BWidget {
variable _gstack [list]
variable _fstack [list]
}


proc BWidget::use { args } {
variable includes

if {![llength $args]} {
BWidget::use aqua [expr {$::tcl_version >= 8.4
&& [string equal [tk windowingsystem] "aqua"]}]
return
}

set package [lindex $args 0]
set value   [lindex $args 1]
set force   [string equal [lindex $args 2] "-force"]
if {![string length $value]} { set value 1 }

if {$value && ($force || ![info exists includes($package)])} {
switch -- $package {
"aqua" {

}

"png" {
if {[catch { package require img::png } err]} {
if {[catch { package require tkpng } err]} {
return -code error "Could not find img::png or tkpng package to support PNG data"
} else {
set ::BWidget::imageFormat png
}
} else {
set ::BWidget::imageFormat PNG
}

if {![info exists ::BWidget::iconLibraryFile]} {
set ::BWidget::iconLibraryFile  [file join $::BWidget::imageDir BWidget.png.tkico]
}
}

"ttk" {
Widget::theme 1

variable ::BWidget::colors

foreach {opt val} [style configure .] {
switch -- $opt {
"-background" {
set colors(SystemButtonFace) $val
}

"-foreground" {
set colors(SystemWindowText) $val
}

"-selectbackground" {
set colors(SystemHighlight) $val
}

"-selectforeground" {
set colors(SystemHighlightText) $val
}

"-troughcolor" {
set colors(SystemScrollbar) $val
}
}
}
}
}
}

set includes($package) $value
return $value
}


proc BWidget::using { package } {
if {[info exists ::BWidget::includes($package)]} {
return $::BWidget::includes($package)
}
return 0
}


proc BWidget::globalexists { varName } {
return [uplevel \#0 [list info exists $varName]]
}


proc BWidget::setglobal { varName value } {
return [uplevel \#0 [list set $varName $value]]
}


proc BWidget::getglobal { varName } {
return [uplevel \#0 [list set $varName]]
}


proc BWidget::traceglobal { cmd varName args } {
return [uplevel \#0 [list trace $cmd $varName] $args]
}



proc BWidget::lreorder { list neworder } {
set pos     0
set newlist {}
foreach e $neworder {
if { [lsearch -exact $list $e] != -1 } {
lappend newlist $e
set tabelt($e)  1
}
}
set len [llength $newlist]
if { !$len } {
return $list
}
if { $len == [llength $list] } {
return $newlist
}
set pos 0
foreach e $list {
if { ![info exists tabelt($e)] } {
set newlist [linsert $newlist $pos $e]
}
incr pos
}
return $newlist
}


proc BWidget::lremove { list args } {
foreach elem $args {
set x [lsearch -exact $list $elem]
if {$x > -1} { set list [lreplace $list $x $x] }
}
return $list
}


proc BWidget::lassign { list args } {
foreach elem $list varName $args {
if {[string equal $varName ""]} { break }
uplevel 1 [list set $varName $elem]
}
}


proc BWidget::assert { exp {msg ""}} {
set res [uplevel 1 expr $exp]
if { !$res} {
if { $msg == "" } {
return -code error "Assertion failed: {$exp}"
} else {
return -code error $msg
}
}
}


proc BWidget::clonename { menu } {
set path     ""
set menupath ""
set found    0
foreach widget [lrange [split $menu "."] 1 end] {
if { $found || [winfo class "$path.$widget"] == "Menu" } {
set found 1
append menupath "#" $widget
append path "." $menupath
} else {
append menupath "#" $widget
append path "." $widget
}
}
return $path
}


proc BWidget::getname { name } {
if { [string length $name] } {
set text [option get . "${name}Name" ""]
if { [string length $text] } {
return [parsetext $text]
}
}
return {}
}


proc BWidget::parsetext { text } {
set result ""
set index  -1
set start  0
while { [string length $text] } {
set idx [string first "&" $text]
if { $idx == -1 } {
append result $text
set text ""
} else {
set char [string index $text [expr {$idx+1}]]
if { $char == "&" } {
append result [string range $text 0 $idx]
set    text   [string range $text [expr {$idx+2}] end]
set    start  [expr {$start+$idx+1}]
} else {
append result [string range $text 0 [expr {$idx-1}]]
set    text   [string range $text [expr {$idx+1}] end]
incr   start  $idx
set    index  $start
}
}
}
return [list $result $index]
}


proc BWidget::get3dcolor { path bgcolor {multiplier 0} {divideBy 100} } {
set fmt "#%04x%04x%04x"

if {$multiplier} {
foreach val [winfo rgb $path $bgcolor] {
lappend list [expr {$multiplier * $val / $divideBy}]
}
return [eval format $fmt $list]
}

if {[string equal $bgcolor "SystemButtonFace"]} {
lappend list System3dDarkShadow SystemButtonHighlight
lappend list SystemButtonShadow System3dLight
return $list
}

foreach val [winfo rgb $path $bgcolor] {
lappend dark  [expr {48 * $val / 100}]
lappend dark2 [expr {72 * $val / 100}]

set tmp1 [expr {14*$val/10}]
if { $tmp1 > 65535 } { set tmp1 65535 }

set tmp2 [expr {(65535+$val)/2}]
lappend light  [expr {($tmp1 > $tmp2) ? $tmp1:$tmp2}]

set tmp [expr {92 * $val / 90}]
lappend light2 [expr {($tmp > 65535) ? 65535 : $tmp}]
}

lappend list [eval format $fmt $dark]
lappend list [eval format $fmt $light]
lappend list [eval format $fmt $dark2]
lappend list [eval format $fmt $light2]

return $list
}


proc BWidget::color2hex { path color } {
if {[catch { winfo rgb $path $color } rgb]} {
return -code error "Invalid color '$color'"
}
foreach {r g b} $rgb { break }
return [format {#%4.4x%4.4x%4.4x} $r $g $b]
}


proc BWidget::getGradientColors { col1Str col2Str size {offset 0} } {
if {[catch { winfo rgb . $col1Str } color1]} {
return -code error "Invalid color '$col1Str'"
}

if {[catch { winfo rgb . $col2Str } color2]} {
return -code error "Invalid color '$col2Str'"
}

set max [expr {$size - $offset}]

foreach {r1 g1 b1} $color1 { break }
foreach {r2 g2 b2} $color2 { break }
set rRange [expr {double($r2) - $r1}]
set gRange [expr {double($g2) - $g1}]
set bRange [expr {double($b2) - $b1}]
set rRatio [expr {$rRange / $max}]
set gRatio [expr {$gRange / $max}]
set bRatio [expr {$bRange / $max}]

set colors [list]

for {set i 0} {$i < $offset} {incr i} {
lappend colors [format {#%4.4x%4.4x%4.4x} $r1 $g1 $b1]
}

for {set i 0} {$i < $max} {incr i} {
set nR [expr {int( $r1 + ($rRatio * $i) )}]
set nG [expr {int( $g1 + ($gRatio * $i) )}]
set nB [expr {int( $b1 + ($bRatio * $i) )}]
lappend colors [format {#%4.4x%4.4x%4.4x} $nR $nG $nB]
}

return $colors
}


proc BWidget::XLFDfont { cmd args } {
switch -- $cmd {
create {
set font "-*-*-*-*-*-*-*-*-*-*-*-*-*-*"
}
configure {
set font [lindex $args 0]
set args [lrange $args 1 end]
}
default {
return -code error "XLFDfont: command incorrect: $cmd"
}
}
set lfont [split $font "-"]
if { [llength $lfont] != 15 } {
return -code error "XLFDfont: description XLFD incorrect: $font"
}

foreach {option value} $args {
switch -- $option {
-foundry { set index 1 }
-family  { set index 2 }
-weight  { set index 3 }
-slant   { set index 4 }
-size    { set index 7 }
default  { return -code error "XLFDfont: option incorrect: $option" }
}
set lfont [lreplace $lfont $index $index $value]
}
return [join $lfont "-"]
}



proc BWidget::place { path w h args } {
update idletasks
if {$w == 0} { set w [winfo reqwidth  $path] }
if {$h == 0} { set h [winfo reqheight $path] }

set arglen [llength $args]
if { $arglen > 3 } {
return -code error "BWidget::place: bad number of argument"
}

if { $arglen > 0 } {
set where [lindex $args 0]
set list  [list "at" "center" "left" "right" "above" "below"]
set idx   [lsearch -exact $list $where]
if { $idx == -1 } {
return -code error [BWidget::badOptionString position $where $list]
}
if { $idx == 0 } { ## at
set err [catch {
set x [expr int([lindex $args 1])]
set y [expr int([lindex $args 2])]
}]
if { $err } {
return -code error "BWidget::place: incorrect position"
}
if {[string equal $::tcl_platform(platform) "windows"]} {
if {[string index [lindex $args 1] 0] != "-"} {
set x "+$x"
}
if {[string index [lindex $args 2] 0] != "-"} {
set y "+$y"
}
} else {
if { $x >= 0 } {
set x "+$x"
}
if { $y >= 0 } {
set y "+$y"
}
}
} else {
if { $arglen == 2 } {
set widget [lindex $args 1]
if { ![winfo exists $widget] } {
set msg "BWidget::place: \"$widget\" does not exist"
return -code error $msg
}
} else {
set widget .
}

set sw    [winfo screenwidth  $path]
set sh    [winfo screenheight $path]
set rootx [winfo rootx $widget]
set rooty [winfo rooty $widget]

if { $idx == 1 } { ## center
if { $arglen == 2 } {
set x0 [expr {$rootx + ([winfo width  $widget] - $w)/2}]
set y0 [expr {$rooty + ([winfo height $widget] - $h)/2}]
} else {
set x0 [expr {($sw - $w)/2 - [winfo vrootx $path]}]
set y0 [expr {($sh - $h)/2 - [winfo vrooty $path]}]
}
set x "+$x0"
set y "+$y0"
if {$::tcl_platform(platform) != "windows"} {
if { $x0+$w > $sw } {set x "-0"; set x0 [expr {$sw-$w}]}
if { $x0 < 0 }      {set x "+0"}
if { $y0+$h > $sh } {set y "-0"; set y0 [expr {$sh-$h}]}
if { $y0 < 0 }      {set y "+0"}
}
} else {
set x0 $rootx
set y0 $rooty
set x1 [expr {$x0 + [winfo width  $widget]}]
set y1 [expr {$y0 + [winfo height $widget]}]
if { $idx == 2 || $idx == 3 } { ## left or right
set y "+$y0"
if {$::tcl_platform(platform) != "windows"} {
if { $y0+$h > $sh } {set y "-0"; set y0 [expr {$sh-$h}]}
if { $y0 < 0 }      {set y "+0"}
}
if { $idx == 2 } {
if { $x0 >= $w } {
set x [expr {$x0-$sw}]
} elseif { $x1+$w <= $sw } {
set x "+$x1"
} else {
set x "+0"
}
} else {
if { $x1+$w <= $sw } {
set x "+$x1"
} elseif { $x0 >= $w } {
set x [expr {$x0-$sw}]
} else {
set x "-0"
}
}
} else { ## above or below
set x "+$x0"
if {[string equal $::tcl_platform(platform) "windows"]} {
if { $x0+$w > $sw } {set x "-0"; set x0 [expr {$sw-$w}]}
if { $x0 < 0 }      {set x "+0"}
}
if { $idx == 4 } {
if { $h <= $y0 } {
set y [expr {$y0-$sh}]
} elseif { $y1+$h <= $sh } {
set y "+$y1"
} else {
set y "+0"
}
} else {
if { $y1+$h <= $sh } {
set y "+$y1"
} elseif { $h <= $y0 } {
set y [expr {$y0-$sh}]
} else {
set y "-0"
}
}
}
}
}

if {[string is integer [string index $x 0]]} { set x +$x }
if {[string is integer [string index $y 0]]} { set y +$y }

wm geometry $path "${w}x${h}${x}${y}"
} else {
wm geometry $path "${w}x${h}"
}
update idletasks
}


proc BWidget::grab { option path } {
variable _gstack

if { $option == "release" } {
catch {::grab release $path}
while { [llength $_gstack] } {
set grinfo  [lindex $_gstack end]
set _gstack [lreplace $_gstack end end]
foreach {oldg mode} $grinfo {
if { ![string equal $oldg $path] && [winfo exists $oldg] } {
if { $mode == "global" } {
catch {::grab -global $oldg}
} else {
catch {::grab $oldg}
}
return
}
}
}
} else {
set oldg [::grab current]
if { $oldg != "" } {
lappend _gstack [list $oldg [::grab status $oldg]]
}
if { $option == "global" } {
::grab -global $path
} else {
::grab $path
}
}
}


proc BWidget::focus { option path {refocus 1} } {
variable _fstack

if { $option == "release" } {
while { [llength $_fstack] } {
set oldf [lindex $_fstack end]
set _fstack [lreplace $_fstack end end]
if { ![string equal $oldf $path] && [winfo exists $oldf] } {
if {$refocus} {catch {::focus -force $oldf}}
return
}
}
} elseif { $option == "set" } {
lappend _fstack [::focus]
::focus -force $path
}
}


proc BWidget::refocus {container component} {
if { [string equal $container [::focus]] } {
::focus $component
}
return
}


proc BWidget::SetFocusGrab {grab {focus {}}} {
variable _focusGrab
set index "$grab,$focus"

lappend _focusGrab($index) [::focus]
set oldGrab [::grab current $grab]
lappend _focusGrab($index) $oldGrab
if {[winfo exists $oldGrab]} {
lappend _focusGrab($index) [::grab status $oldGrab]
}
catch {::grab $grab}
if {[winfo exists $focus]} {
::focus $focus
}
}

proc BWidget::RestoreFocusGrab {grab focus {destroy destroy}} {
variable _focusGrab
set index "$grab,$focus"
if {[info exists _focusGrab($index)]} {
foreach {oldFocus oldGrab oldStatus} $_focusGrab($index) break
unset _focusGrab($index)
} else {
set oldGrab ""
}

catch {::focus $oldFocus}
::grab release $grab
if {[string equal $destroy "withdraw"]} {
wm withdraw $grab
} else {
::destroy $grab
}
if {[winfo exists $oldGrab] && [winfo ismapped $oldGrab]} {
if {[string equal $oldStatus "global"]} {
::grab -global $oldGrab
} else {
::grab $oldGrab
}
}
}

proc BWidget::badOptionString { type value list } {
set list [lsort $list]

set x [lsearch -exact $list "--"]
if {$x > -1} {
set list [lreplace $list $x $x]
lappend list --
}

set last [lindex $list end]
set list [lreplace $list end end]
set msg  "bad $type \"$value\": must be "

if {![llength $list]} {
append msg "$last"
} elseif {[llength $list] == 1} {
append msg "$list or $last"
} else {
append msg "[join $list ", "], or $last"
}

return $msg
}


proc BWidget::wrongNumArgsString { string } {
return "wrong # args: should be \"$string\""
}


proc BWidget::read_file { file } {
set fp [open $file]
set x  [read $fp [file size $file]]
close $fp
return $x
}


proc BWidget::classes { class } {
variable use

${class}::use
set classes [list $class]
if {![info exists use($class)]} { return }
foreach class $use($class) {
eval lappend classes [classes $class]
}
return [lsort -unique $classes]
}


proc BWidget::library { args } {
variable use

set exclude [list]
if {[set x [lsearch -exact $args "-exclude"]] > -1} {
set exclude [lindex $args [expr {$x + 1}]]
set args    [lreplace $args $x [expr {$x + 1}]]
}

set libs    [list widget init utils]
set classes [list]
foreach class $args {
${class}::use
foreach c [classes $class] {
if {[lsearch -exact $exclude $c] > -1} { continue }
lappend classes $c
}
}

eval lappend libs [lsort -unique $classes]

set library ""
foreach lib $libs {
if {![info exists use($lib,file)]} {
set file [file join $::BWIDGET::LIBRARY $lib.tcl]
} else {
set file [file join $::BWIDGET::LIBRARY $use($lib,file).tcl]
}
append library [read_file $file]
}

return $library
}


proc BWidget::inuse { class } {
variable ::Widget::_inuse

if {![info exists _inuse($class)]} { return 0 }
return [expr $_inuse($class) > 0]
}


proc BWidget::write { filename {mode w} } {
variable use

if {![info exists use(classes)]} { return }

set classes [list]
foreach class $use(classes) {
if {![inuse $class]} { continue }
lappend classes $class
}

set fp [open $filename $mode]
puts $fp [eval library $classes]
close $fp

return
}


proc BWidget::bindMouseWheel { widgetOrClass } {
bind $widgetOrClass <MouseWheel>         {
if {![string equal [%W yview] "0 1"]} {
%W yview scroll [expr {-%D/24}]  units
}
}

bind $widgetOrClass <Shift-MouseWheel>   {
if {![string equal [%W yview] "0 1"]} {
%W yview scroll [expr {-%D/120}] pages
}
}

bind $widgetOrClass <Control-MouseWheel> {
if {![string equal [%W yview] "0 1"]} {
%W yview scroll [expr {-%D/120}] units
}
}

bind $widgetOrClass <Button-4> {event generate %W <MouseWheel> -delta  120}
bind $widgetOrClass <Button-5> {event generate %W <MouseWheel> -delta -120}
}


proc BWidget::Icon { name } {
if {![Widget::exists $::BWidget::iconLibrary]} {
BWidget::LoadBWidgetIconLibrary
}

return [$::BWidget::iconLibrary image $name]
}


proc BWidget::LoadBWidgetIconLibrary {} {
if {![Widget::exists $::BWidget::iconLibrary]} {
IconLibrary $::BWidget::iconLibrary -file $::BWidget::iconLibraryFile
}
}


proc BWidget::CreateImage { gifdata pngdata args } {
lappend args -format $::BWidget::imageFormat
if {[BWidget::using png]} {
lappend args -data $pngdata
} else {
lappend args -data $gifdata
}

return [eval image create photo $args]
}


proc BWidget::ParseArgs { _arrayName _arglist args } {
upvar 1 $_arrayName array

array set _args {
-strict     0
-options    {}
-switches   {}
-required   {}
-nocomplain 0
}
array set _args $args
if {[info exists _args(-errorvar)]} { upvar 1 $_args(-errorvar) error }

set switches $_args(-switches)
foreach switch $switches {
set array([string range $switch 1 end]) 0
}

set options [list]
foreach opt $_args(-options) {
set option $opt
if {[llength $opt] == 2} {
set option [lindex $opt 0]
set array([string range $option 1 end]) [lindex $opt 1]
}
lappend options $option
}

set array(OPTIONS)  [list]
set array(SWITCHES) [list]

set oplen   [llength $options]
set swlen   [llength $switches]
set index   0
set waiting 0
foreach arg $_arglist {
switch -glob -- $arg {
"--" {
incr index
break
}

"-*" {
if {$waiting} {
set waiting 0
set array($option) $arg
lappend array(OPTIONS) -$option $arg
continue
}

if {$swlen && [lsearch -exact $switches $arg] > -1} {
lappend array(SWITCHES) $arg
set array([string range $arg 1 end]) 1
} elseif {$oplen && [lsearch -exact $options $arg] < 0} {
if {$_args(-nocomplain)} { return 0 }
return -code error "unknown option \"$arg\""
} elseif {$_args(-strict)} {
set switches [concat -- $_args(-switches)]
set msg [BWidget::badOptionString option $arg $switches]
return -code error $msg
} else {
set waiting 1
set option [string range $arg 1 end]
}
}

default {
if {$waiting} {
set waiting 0
set array($option) $arg
lappend array(OPTIONS) -$option $arg
} else {
break
}
}
}

incr index
}

set array(_ARGS_) [lrange $_arglist $index end]

if {[llength $_args(-required)]} {
foreach arg [lsort -dict $_args(-required)] {
if {![info exists array([string range $arg 1 end])]} {
return -code error "missing required argument $arg"
}
}
}

return 1
}


proc BWidget::CopyBindings { from to } {
foreach event [bind $from] {
bind $to $event [bind $from $event]
}
}


proc BWidget::DrawCanvasBorder { canvas relief color coords args } {
lassign $coords x0 y0 x1 y1
lassign [BWidget::get3dcolor $canvas $color] dark light dark2 light2

switch -- $relief {
"raised" - "sunken" {
lappend lines [list $x0 $y1 $x0 $y0 $x1 $y0]
lappend lines [list $x1 $y0 $x1 $y1 $x0 $y1]
lappend lines [list  [expr {$x0 + 1}] [expr {$y1 - 2}]  [expr {$x0 + 1}] [expr {$y0 + 1}]  [expr {$x1 - 1}] [expr {$y0 + 1}]]
lappend lines [list  [expr {$x0 + 1}] [expr {$y1 - 1}]  [expr {$x1 - 1}] [expr {$y1 - 1}]  [expr {$x1 - 1}] $y0]

set colors [list $light $dark $light2 $dark2]
if {[string equal $relief "sunken"]} {
set colors [list $dark $light $dark2 $light2]
}
}

"groove" - "ridge" {
lappend lines [list  $x0 $y1  $x1 $y1  $x1 $y0  $x1 [expr {$y0 + 1}]  [expr {$x0 + 1}] [expr {$y0 + 1}]  [expr {$x0 + 1}] $y1  ]

lappend lines [list  $x0 $y0  [expr {$x1 - 1}] $y0  [expr {$x1 - 1}] [expr {$y1 - 1}]  $x0 [expr {$y1 - 1}]  $x0 $y0  ]

set colors [list $light $dark2]
if {[string equal $relief "ridge"]} {
set colors [list $dark2 $light]
}
}

"rounded" {
set coords [list  [expr {$x0 + 1}] $y0  [expr {$x1 - 1}] $y0  $x1 [expr {$y0 + 1}]  $x1 [expr {$y1 - 1}]  [expr {$x1 - 1}] $y1  [expr {$x0 + 1}] $y1  $x0 [expr {$y1 - 1}]  $x0 [expr {$y0 + 1}]  [expr {$x0 + 1}] $y0  ]

set opts [list -outline $dark2 -fill $color]
eval [list $canvas create poly $coords] $opts $args

return
}

"highlight" {
set opts [list -outline $dark -fill $light]
eval [list $canvas create rect $coords] $opts $args

set coords [list [incr x0] [incr y0] [incr x1 -1] [incr y1 -1]]
eval [list $canvas create rect $coords -outline $dark2] $args

return
}
}

foreach line $lines color $colors {
eval [list $canvas create line $line -fill $color] $args
}
}

proc ::BWidget::FadeWindowIn { top {increment 0.08} {current 0} } {
if {[tk windowingsystem] eq "x11"
|| ![package vsatisfies [info patchlevel] 8.4.8]} {
wm deiconify $top
return
}

if {$current == 0} {
wm attributes $top -alpha [set current 0.01]
wm deiconify $top
}

set current [expr {$current + $increment}]

if {$current < 1.0} {
wm attributes $top -alpha $current
update idletasks

after 10 [list BWidget::FadeWindowIn $increment $current]
} else {
wm attributes $top -alpha 0.99999
}
}

proc ::BWidget::FadeWindowOut { top {destroy 0} {increment 0.08} {current 0} } {
if {![winfo exists $top]} { return }

if {[tk windowingsystem] eq "x11"
|| ![package vsatisfies [info patchlevel] 8.4.8]} {
if {$destroy} {
destroy $top
} else {
wm withdraw $top
}
return
}

if {$current == 0} {
set current [wm attributes $top -alpha]
}

set current [expr {$current - $increment}]

if {$current >= .01} {
wm attributes $top -alpha $current
update idletasks

after 10 [list BWidget::FadeWindowOut $top $destroy $increment $current]
} else {
if {$destroy} {
destroy $top
} else {
wm withdraw   $top
wm attributes $top -alpha 0.99999
}
}
}


if {[info exists ::InstallJammer]} { return }

namespace eval ::BWIDGET {
variable LIBRARY [file join $::installkit::root lib InstallJammer]
}

proc BWidgetInit {} {
set ::BWidget::imageDir $::BWIDGET::LIBRARY
set ::BWidget::iconLibraryFile [file join $::BWIDGET::LIBRARY icons.tkico]

BWidget::use ttk
BWidget::use png
}

namespace eval DragSite    { proc use {} {} }
namespace eval DropSite    { proc use {} {} }
namespace eval DynamicHelp { proc use {} {} }

proc DragSite::include { class type event } {
set dragoptions [list  [list	-dragenabled	Boolean	0	0]  [list	-draginitcmd	String	""	0]  [list	-dragendcmd	String	""	0]  [list	-dragtype	String	$type	0]  [list	-dragevent	Enum	$event	0	[list 1 2 3]]  ]
Widget::declare $class $dragoptions
}
proc DragSite::setdrag {args} { }

proc DropSite::include { class types } {
set dropoptions [list  [list	-dropenabled	Boolean	0	0]  [list	-dropovercmd	String	""	0]  [list	-dropcmd	String	""	0]  [list	-droptypes	String	$types	0]  ]
Widget::declare $class $dropoptions
}

proc DynamicHelp::include { class type } {
set helpoptions [list  [list -helptext String "" 0]  [list -helpvar  String "" 0]  [list -helptype Enum $type 0 [list balloon variable]]  ]
Widget::declare $class $helpoptions
}

proc DropSite::setdrop    { args } { }
proc DropSite::setcursor  { args } { }
proc DynamicHelp::sethelp { args } { }

package provide BWidget 1.8

BWidgetInit
if {[string equal $::tcl_platform(platform) "windows"]} {
option add *ListBox.background      SystemWindow            widgetDefault
option add *ButtonBox.padY          0                       widgetDefault
option add *Dialog.padY             0                       widgetDefault
} elseif {[tk windowingsystem] eq "aqua"} {

} else {
option add *Scrollbar.width         12                      widgetDefault
option add *Scrollbar.borderWidth   1                       widgetDefault
option add *Dialog.separator        1                       widgetDefault
option add *MainFrame.relief        raised                  widgetDefault
option add *MainFrame.separator     none                    widgetDefault
option add *MessageDlg.usenative    0                       widgetDefault
}

option read [file join $::BWIDGET::LIBRARY lang en.rc]

bind Entry   <<TraverseIn>> { %W selection range 0 end; %W icursor end }
bind Spinbox <<TraverseIn>> { %W selection range 0 end; %W icursor end }

bind all <Key-Tab>       { Widget::traverseTo [Widget::focusNext %W] }
bind all <<PrevWindow>>  { Widget::traverseTo [Widget::focusPrev %W] }

namespace eval ::BWidget {
variable library     $::BWIDGET::LIBRARY
variable langDir     [file join $library lang]
variable imageDir    [file join $library images]
variable imageFormat GIF

variable iconLibrary
if {![info exists iconLibrary]} {
set iconLibrary BWidgetIcons
}

variable iconLibraryFile
if {![info exists iconLibraryFile]} {
set iconLibraryFile [file join $imageDir BWidget.gif.tkico]
}

variable colors
if {[string equal $::tcl_platform(platform) "windows"]} {
array set colors {
SystemButtonFace    SystemButtonFace
SystemButtonText    SystemButtonText
SystemDisabledText  SystemDisabledText
SystemHighlight     SystemHighlight
SystemHighlightText SystemHighlightText
SystemMenu          SystemMenu
SystemMenuText      SystemMenuText
SystemScrollbar     SystemScrollbar
SystemWindow        SystemWindow
SystemWindowFrame   SystemWindowFrame
SystemWindowText    SystemWindowText
}
} else {
array set colors {
SystemButtonFace    #d9d9d9
SystemButtonText    #000000
SystemDisabledText  #a3a3a3
SystemHighlight     #c3c3c3
SystemHighlightText #FFFFFF
SystemMenu          #d9d9d9
SystemMenuText      #FFFFFF
SystemScrollbar     #d9d9d9
SystemWindow        #FFFFFF
SystemWindowFrame   #d9d9d9
SystemWindowText    #000000
}
}

if {[lsearch -exact [font names] "TkTextFont"] < 0} {
catch {font create TkTextFont}
catch {font create TkDefaultFont}
catch {font create TkHeadingFont}
catch {font create TkCaptionFont}
catch {font create TkTooltipFont}

switch -- [tk windowingsystem] {
win32 {
if {$::tcl_platform(osVersion) >= 5.0} {
variable family "Tahoma"
} else {
variable family "MS Sans Serif"
}
variable size 8

font configure TkDefaultFont -family $family -size $size
font configure TkTextFont    -family $family -size $size
font configure TkHeadingFont -family $family -size $size
font configure TkCaptionFont -family $family -size $size  -weight bold
font configure TkTooltipFont -family $family -size $size
}

classic - aqua {
variable family "Lucida Grande"
variable size 13
variable viewsize 12
variable smallsize 11

font configure TkDefaultFont -family $family -size $size
font configure TkTextFont    -family $family -size $size
font configure TkHeadingFont -family $family -size $smallsize
font configure TkCaptionFont -family $family -size $size  -weight bold
font configure TkTooltipFont -family $family -size $viewsize
}

x11 {
if {![catch {tk::pkgconfig get fontsystem} fs]
&& [string equal $fs "xft"]} {
variable family "sans-serif"
} else {
variable family "Helvetica"
}
variable size -12
variable ttsize -10
variable capsize -14

font configure TkDefaultFont -family $family -size $size
font configure TkTextFont    -family $family -size $size
font configure TkHeadingFont -family $family -size $size  -weight bold
font configure TkCaptionFont -family $family -size $capsize  -weight bold
font configure TkTooltipFont -family $family -size $ttsize
}
}
}
} ; ## namespace eval ::BWidget


namespace eval Label {
Widget::define Label label DragSite DropSite DynamicHelp

Widget::tkinclude Label label .l  remove { -foreground -state -text -textvariable -underline }

Widget::declare Label {
{-name               String     ""     0}
{-text               String     ""     0}
{-textvariable       String     ""     0}
{-underline          Int        -1     0 "%d >= -1"}
{-focus              String     ""     0}
{-foreground         Color      "SystemButtonText"       0}
{-disabledforeground Color      "SystemDisabledText"     0}
{-state              Enum       normal 0  {normal disabled}}

{-autowrap           Boolean    "0"    1}
{-wrappadx           Int        "10"   0}

{-elide              Boolean    "0"    1}
{-ellipsis           String     "..."  0}
{-elidepadx          Int        "5"    0}
{-elideside          Enum       "right" 0 {center left right}}

{-fg                 Synonym    -foreground}
}

DynamicHelp::include Label balloon
DragSite::include    Label "" 1
DropSite::include    Label {
TEXT    {move {}}
IMAGE   {move {}}
BITMAP  {move {}}
FGCOLOR {move {}}
BGCOLOR {move {}}
COLOR   {move {}}
}

Widget::syncoptions Label "" .l {-text {} -underline {}}

bind BwLabel <FocusIn>   [list Label::setfocus %W]
bind BwLabel <Destroy>   [list Label::_destroy %W]
}


proc Label::create { path args } {
Widget::initArgs Label $args maps

frame $path -class Label -borderwidth 0 -highlightthickness 0 -relief flat
Widget::initFromODB Label $path $maps(Label)

Widget::getVariable $path data

set data(width) 0

eval [list label $path.l] $maps(.l)

if {[string equal [Widget::cget $path -state] "normal"]} {
set fg [Widget::cget $path -foreground]
} else {
set fg [Widget::cget $path -disabledforeground]
}

set var [Widget::cget $path -textvariable]
if {$var == ""
&& [Widget::cget $path -image] == ""
&& [Widget::cget $path -bitmap] == ""} {
set desc [BWidget::getname [Widget::cget $path -name]]
if {[string length $desc]} {
set text  [lindex $desc 0]
set under [lindex $desc 1]
} else {
set text  [Widget::cget $path -text]
set under [Widget::cget $path -underline]
}
} else {
set under -1
set text  ""
}

$path.l configure -text $text -underline $under -foreground $fg

set accel [string tolower [string index $text $under]]
if {[string length $accel]} {
bind [winfo toplevel $path] <Alt-$accel> [list Label::setfocus $path]
}

bindtags $path   [list BwLabel [winfo toplevel $path] all]
bindtags $path.l [list $path.l $path Label [winfo toplevel $path] all]
pack $path.l -expand yes -fill both

set dragendcmd [Widget::cget $path -dragendcmd]
DragSite::setdrag $path $path.l Label::_init_drag_cmd $dragendcmd 1
DropSite::setdrop $path $path.l Label::_over_cmd Label::_drop_cmd 1
DynamicHelp::sethelp $path $path.l 1

if {[string length $var]} {
upvar #0 $var textvar
_trace_variable $path
if {![info exists textvar]} {
set textvar [Widget::getoption $path -text]
} else {
_update_textvariable $path "" "" write
}
}

if {[Widget::getoption $path -elide]
|| [Widget::getoption $path -autowrap]} {
bind $path.l <Configure> [list Label::_redraw $path %w]
}

return [Widget::create Label $path]
}


proc Label::configure { path args } {
set oldunder [$path.l cget -underline]
if {$oldunder != -1} {
set oldaccel [string index [$path.l cget -text] $oldunder]
set oldaccel [string tolower $oldaccel]
} else {
set oldaccel ""
}

set oldvar [$path.l cget -textvariable]

set res [Widget::configure $path $args]

set cfg  [Widget::hasChanged $path -foreground fg]
set cdfg [Widget::hasChanged $path -disabledforeground dfg]
set cst  [Widget::hasChanged $path -state state]

if { $cst || $cfg || $cdfg } {
if { $state == "normal" } {
$path.l configure -fg $fg
} else {
$path.l configure -fg $dfg
}
}

set cv [Widget::hasChanged $path -textvariable var]
set cb [Widget::hasChanged $path -image img]
set ci [Widget::hasChanged $path -bitmap bmp]
set cn [Widget::hasChanged $path -name name]
set ct [Widget::hasChanged $path -text text]
set cu [Widget::hasChanged $path -underline under]

if { $cv || $cb || $ci || $cn || $ct || $cu } {
if {  $var == "" && $img == "" && $bmp == "" } {
set desc [BWidget::getname $name]
if { $desc != "" } {
set text  [lindex $desc 0]
set under [lindex $desc 1]
}
} else {
set under -1
set text  ""
}
set top [winfo toplevel $path]
if { $oldaccel != "" } {
bind $top <Alt-$oldaccel> {}
}
set accel [string tolower [string index $text $under]]
if { $accel != "" } {
bind $top <Alt-$accel> [list Label::setfocus $path]
}
$path.l configure -text $text -underline $under -textvariable $var
}

if {$cv} {
if {[string length $oldvar]} {
trace remove variable $oldvar [list write unset]  [list Label::_update_textvariable $path]
}

_trace_variable $path
}

if {$ct && [Widget::getoption $path -elide]} {
_redraw $path [winfo width $path]
}

set force [Widget::hasChanged $path -dragendcmd dragend]
DragSite::setdrag $path $path.l Label::_init_drag_cmd $dragend $force
DropSite::setdrop $path $path.l Label::_over_cmd Label::_drop_cmd
DynamicHelp::sethelp $path $path.l

return $res
}


proc Label::cget { path option } {
return [Widget::cget $path $option]
}


proc Label::setfocus { path } {
if {[string equal [Widget::cget $path -state] "normal"]} {
set w [Widget::cget $path -focus]
if { [winfo exists $w] && [Widget::focusOK $w] } {
focus $w
}
}
}


proc Label::_init_drag_cmd { path X Y top } {
set path [winfo parent $path]
if {[set cmd [Widget::cget $path -draginitcmd]] != ""} {
return [uplevel \#0 $cmd [list $path $X $Y $top]]
}
if { [set data [$path.l cget -image]] != "" } {
set type "IMAGE"
pack [label $top.l -image $data]
} elseif { [set data [$path.l cget -bitmap]] != "" } {
set type "BITMAP"
pack [label $top.l -bitmap $data]
} else {
set data [$path.l cget -text]
set type "TEXT"
}
set usertype [Widget::getoption $path -dragtype]
if { $usertype != "" } {
set type $usertype
}
return [list $type {copy} $data]
}


proc Label::_drop_cmd { path source X Y op type data } {
set path [winfo parent $path]
if {[set cmd [Widget::cget $path -dropcmd]] != ""} {
return [uplevel \#0 $cmd [list $path $source $X $Y $op $type $data]]
}
if { $type == "COLOR" || $type == "FGCOLOR" } {
configure $path -foreground $data
} elseif { $type == "BGCOLOR" } {
configure $path -background $data
} else {
set text   ""
set image  ""
set bitmap ""
switch -- $type {
IMAGE   {set image $data}
BITMAP  {set bitmap $data}
default {
set text $data
if { [set var [$path.l cget -textvariable]] != "" } {
configure $path -image "" -bitmap ""
BWidget::setglobal $var $data
return
}
}
}
configure $path -text $text -image $image -bitmap $bitmap
}
return 1
}


proc Label::_over_cmd { path source event X Y op type data } {
set path [winfo parent $path]
if { [set cmd [Widget::cget $path -dropovercmd]] != "" } {
set opts [list $path $source $event $X $Y $op $type $data]
return [uplevel \#0 $cmd $opts]
}
if {[Widget::getoption $path -state] == "normal" ||
$type == "COLOR" || $type == "FGCOLOR" || $type == "BGCOLOR"} {
DropSite::setcursor based_arrow_down
return 1
}
DropSite::setcursor dot
return 0
}


proc Label::_redraw { path width } {
Widget::getVariable $path data

if {$width == $data(width)} { return }

if {[Widget::getoption $path -autowrap]} {
set padx [Widget::getoption $path -wrappadx]
$path.l configure -wraplength [expr {$width - $padx}]
} elseif {[Widget::getoption $path -elide]} {
set font     [$path.l cget -font]
set text     [Widget::getoption $path -text]
set side     [Widget::getoption $path -elideside]
set ellipsis [Widget::getoption $path -ellipsis]

set bd    [$path.l cget -bd]
set padx  [$path.l cget -padx]
set epadx [Widget::getoption $path -elidepadx]
set width [expr {($width - (($bd + $padx) * 2)) - $epadx}]

if {$width > 0} {
set string $text
while {[font measure $font $string] > $width} {
switch -- $side {
"left"   {
set text   [string range $text 1 end]
set string $ellipsis$text
}

"right"  {
set text   [string range $text 0 end-1]
set string $text$ellipsis
}

"center" {
set x [expr {[string length $text] / 2}]
set l [string range $text 0 $x]
set r [string range $text [incr x 2] end]
set text   $l$r
set string $l$ellipsis$r
}
}

if {![string length $text]} { break }
}

$path.l configure -text $string
}
}

set data(width) [winfo reqwidth $path.l]
}


proc Label::_trace_variable { path } {
set varName [Widget::getoption $path -textvariable]

if {[string length $varName]} {
set ops     [list write unset]
set command [list Label::_update_textvariable $path]

uplevel #0 [list trace add variable $varName $ops $command]
}
}


proc Label::_update_textvariable { path name1 name2 op } {
set varName [Widget::getoption $path -textvariable]
upvar #0 $varName var

switch -- $op {
"write" {
Widget::setoption $path -text $var

$path.l configure -text $var

_redraw $path [winfo width $path]
}

"unset" {
set var [Widget::getoption $path -text]
_trace_variable $path
}
}
}


proc Label::_destroy { path } {
set ops     [list write unset]
set cmd     [list Label::_update_textvariable $path]
set varName [Widget::getoption $path -textvariable]

uplevel #0 [list trace remove variable $varName $ops $cmd]

Widget::destroy $path
}


namespace eval Tree {
Widget::define Tree tree DragSite DropSite DynamicHelp

namespace eval Node {
Widget::declare Tree::Node {
{-text       String     ""      0}
{-font       String     ""      0}
{-image      String     ""      0}
{-window     String     ""      0}
{-fill       Color      "SystemButtonText"   0}
{-data       String     ""      0}
{-open       Boolean    0       0}
{-selectable Boolean    1       0}
{-drawcross  Enum       auto    0 {auto allways never}}
{-padx       Int        -1      0 "%d >= -1"}
{-deltax     Int        -1      0 "%d >= -1"}
{-anchor     String     "w"     0 ""}
}
}

DynamicHelp::include Tree::Node balloon

Widget::tkinclude Tree canvas .c  remove {
-insertwidth -insertbackground -insertborderwidth -insertofftime
-insertontime -selectborderwidth -closeenough -confine -scrollregion
-xscrollincrement -yscrollincrement -width -height
} initialize {
-background #FFFFFF -relief sunken -borderwidth 2
-takefocus 1 -highlightthickness 1 -width 200
}

DragSite::include Tree "TREE_NODE" 1
DropSite::include Tree {
TREE_NODE {copy {} move {}}
}

Widget::declare Tree {
{-deltax            Int        10       0 "%d >= 0"}
{-deltay            Int        15       0 "%d >= 0"}
{-padx              Int        20       0 "%d >= 0"}
{-font              String     "TkTextFont" 0}
{-background        Color      "SystemWindow"  0}
{-selectbackground  Color      "SystemHighlight"  0}
{-selectforeground  Color      "SystemHighlightText" 0}
{-selectcommand     String     ""       0}
{-selectmode        Enum       "single" 0 {extended none single}}
{-width             TkResource ""       0 listbox}
{-height            TkResource ""       0 listbox}
{-selectfill        Boolean    0        0}
{-showlines         Boolean    1        0}
{-linesfill         Color      "SystemButtonText"  0}
{-linestipple       TkResource ""       0 {label -bitmap}}
{-crossfill         Color      "SystemButtonText"  0}
{-redraw            Boolean    1        0}
{-opencmd           String     ""       0}
{-closecmd          String     ""       0}
{-dropovermode      Flag       "wpn"    0 "wpn"}
{-dropcmd           String     "Tree::_drag_and_drop" 0}

{-crossopenimage    String     ""       0}
{-crosscloseimage   String     ""       0}
{-crossopenbitmap   String     ""       0}
{-crossclosebitmap  String     ""       0}

{-bg                Synonym    -background}
}

Widget::addmap Tree "" .c { -deltay -yscrollincrement }

bind Tree <FocusIn>   [list after idle {BWidget::refocus %W %W.c}]
bind Tree <Destroy>   [list Tree::_destroy %W]
bind Tree <Configure> [list Tree::_update_scrollregion %W]

bind TreeSentinalStart <Button-1> {
if {$::Tree::sentinal(%W)} {
set ::Tree::sentinal(%W) 0
break
}
}

bind TreeSentinalEnd <Button-1> {
set ::Tree::sentinal(%W) 0
}

bind TreeFocus <Button-1> [list focus %W]

BWidget::bindMouseWheel TreeCanvas

variable _edit
set _edit(editing) 0
}


proc Tree::create { path args } {
Widget::initArgs Tree $args maps

eval [list frame $path -class Tree] $maps(:cmd)

if {[info tclversion] > 8.3} { $path configure -padx 0 -pady 0 }

Widget::initFromODB Tree $path $maps(Tree)

set ::Tree::sentinal($path.c) 0

Widget::getVariable $path data

set data(root)         [list [list]]
set data(selnodes)     [list]
set data(upd,level)    0
set data(upd,nodes)    [list]
set data(upd,afterid)  ""
set data(dnd,scroll)   ""
set data(dnd,afterid)  ""
set data(dnd,selnodes) [list]
set data(dnd,node)     ""

Widget::getVariable $path items

eval [list canvas $path.c] $maps(.c) -xscrollincrement 8
bindtags $path.c [list TreeSentinalStart TreeFocus $path.c Canvas  TreeCanvas [winfo toplevel $path] all TreeSentinalEnd]
pack $path.c -expand yes -fill both
$path.c bind cross <ButtonPress-1> [list Tree::_cross_event $path]

bind $path.c <KeyPress-Up>    [list Tree::_keynav up $path]
bind $path.c <KeyPress-Down>  [list Tree::_keynav down $path]
bind $path.c <KeyPress-Right> [list Tree::_keynav right $path]
bind $path.c <KeyPress-Left>  [list Tree::_keynav left $path]
bind $path.c <KeyPress-space> [list +Tree::_keynav space $path]

bind $path.c <Control-KeyPress-Up>    [list $path.c yview scroll -1 units]
bind $path.c <Control-KeyPress-Down>  [list $path.c yview scroll  1 units]
bind $path.c <Control-KeyPress-Left>  [list $path.c xview scroll -1 units]
bind $path.c <Control-KeyPress-Right> [list $path.c xview scroll  1 units]

DragSite::setdrag $path $path.c Tree::_init_drag_cmd  [Widget::cget $path -dragendcmd] 1
DropSite::setdrop $path $path.c Tree::_over_cmd Tree::_drop_cmd 1

Widget::create Tree $path

set w [Widget::cget $path -width]
set h [Widget::cget $path -height]
set dy [Widget::cget $path -deltay]
$path.c configure -width [expr {$w*8}] -height [expr {$h*$dy}]

set mode [Widget::getoption $path -selectmode]
if {$mode ne "none"} {
Tree::bindText  $path <Double-1> [list $path toggle]
Tree::bindImage $path <Double-1> [list $path toggle]
Tree::bindText  $path <Button-1> [list $path selection set]
Tree::bindImage $path <Button-1> [list $path selection set]
}

if {$mode eq "extended"} {
Tree::bindText  $path <Control-Button-1> [list $path selection toggle]
Tree::bindImage $path <Control-Button-1> [list $path selection toggle]
}

$path.c bind TreeItemSentinal <Double-Button-1>  [list set ::Tree::sentinal($path.c) 1]


set image  [Widget::getoption $path -crossopenimage]
set bitmap [Widget::getoption $path -crossopenbitmap]
if {![string length $image] && ![string length $bitmap]} {
Widget::setoption $path -crossopenimage [BWidget::Icon tree-minus]
}

set image  [Widget::getoption $path -crosscloseimage]
set bitmap [Widget::getoption $path -crossclosebitmap]
if {![string length $image] && ![string length $bitmap]} {
Widget::setoption $path -crosscloseimage [BWidget::Icon tree-plus]
}

return $path
}


proc Tree::configure { path args } {
Widget::getVariable $path data

set res [Widget::configure $path $args]

set ch1 [expr {[Widget::hasChanged $path -deltax val]
|| [Widget::hasChanged $path -deltay dy]
|| [Widget::hasChanged $path -padx val]
|| [Widget::hasChanged $path -showlines val]
|| [Widget::hasChanged $path -font font]}]

set ch2 [expr {[Widget::hasChanged $path -selectbackground val] |
[Widget::hasChanged $path -selectforeground val]}]

if {[Widget::hasChanged $path -linesfill fill]
|| [Widget::hasChanged $path -linestipple stipple] } {
$path.c itemconfigure line  -fill $fill -stipple $stipple
}

if {[Widget::hasChanged $path -crossfill fill]} {
$path.c itemconfigure cross -foreground $fill
}

if {[Widget::hasChanged $path -selectfill fill]} {
if {$fill} {
foreach event [$path.c bind "node"] {
$path.c bind "box" $event [$path.c bind "node" $event]
}
} else {
foreach event [$path.c bind "node"] {
$path.c bind "box" $event {}
}
}
}

if { $ch1 } {
_redraw_idle $path 3
} elseif { $ch2 } {
_redraw_idle $path 1
}

if { [Widget::hasChanged $path -height h] } {
$path.c configure -height [expr {$h*$dy}]
}
if { [Widget::hasChanged $path -width w] } {
$path.c configure -width [expr {$w*8}]
}

if { [Widget::hasChanged $path -redraw bool] && $bool } {
set upd $data(upd,level)
set data(upd,level) 0
_redraw_idle $path $upd
}

set force [Widget::hasChanged $path -dragendcmd dragend]
DragSite::setdrag $path $path.c Tree::_init_drag_cmd $dragend $force
DropSite::setdrop $path $path.c Tree::_over_cmd Tree::_drop_cmd

return $res
}


proc Tree::cget { path option } {
return [Widget::cget $path $option]
}


proc Tree::insert { path index parent node args } {
Widget::getVariable $path data

set node [_node_name $path $node]
set node [Widget::nextIndex $path $node]

if {[info exists data($node)]} {
return -code error "node \"$node\" already exists"
}

if {![info exists data($parent)]} {
return -code error "node \"$parent\" does not exist"
}

Widget::init Tree::Node $path.$node $args

if {[string equal $index "end"]} {
lappend data($parent) $node
} else {
set data($parent) [linsert $data($parent) [incr index] $node]
}
set data($node) [list $parent]

if {[string equal $parent "root"]} {
_redraw_idle $path 3
} elseif {[Tree::visible $path $parent]} {
if {[Widget::getoption $path.$parent -open]} {
_redraw_idle $path 3
} else {
lappend data(upd,nodes) $parent 8
_redraw_idle $path 2
}
}

return $node
}


proc Tree::itemconfigure { path node args } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {[string equal $node "root"] || ![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}

set result [Widget::configure $path.$node $args]

_set_help $path $node

if { [visible $path $node] } {
set lopt   {}
set flag   0
foreach opt {-window -image -drawcross -font -text -fill} {
set flag [expr {$flag << 1}]
if {[Widget::hasChanged $path.$node $opt val]} {
set flag [expr {$flag | 1}]
}
}

if {[Widget::hasChanged $path.$node -open val]} {
if {[llength $data($node)] > 1} {
_redraw_idle $path 3
} else {
set flag [expr {$flag | 8}]
}
}

if {$data(upd,level) < 3 && [Widget::hasChanged $path.$node -padx x]} {
_redraw_idle $path 3
}

if { $data(upd,level) < 3 && $flag } {
if { [set idx [lsearch -exact $data(upd,nodes) $node]] == -1 } {
lappend data(upd,nodes) $node $flag
} else {
incr idx
set flag [expr {[lindex $data(upd,nodes) $idx] | $flag}]
set data(upd,nodes) [lreplace $data(upd,nodes) $idx $idx $flag]
}
_redraw_idle $path 2
}
}
return $result
}


proc Tree::itemcget { path node option } {
Widget::getVariable $path data
set node [_node_name $path $node]
if {[string equal $node "root"] || ![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}

return [Widget::cget $path.$node $option]
}


proc Tree::bindText { path event script } {
if {[string length $script]} {
append script " \[Tree::_get_node_name [list $path] current 2\]"
}
$path.c bind "node" $event $script
if {[Widget::getoption $path -selectfill]} {
$path.c bind "box" $event $script
} else {
$path.c bind "box" $event {}
}
}


proc Tree::bindImage { path event script } {
if {[string length $script]} {
append script " \[Tree::_get_node_name [list $path] current 2\]"
}
$path.c bind "img" $event $script
if {[Widget::getoption $path -selectfill]} {
$path.c bind "box" $event $script
} else {
$path.c bind "box" $event {}
}
}


proc Tree::bindTree { path args } {
return [eval [list bind $path.c] $args]
}


proc Tree::clear { path } {
eval [list Tree::delete $path] [Tree::nodes $path root]
}


proc Tree::delete { path args } {
Widget::getVariable $path data

foreach lnodes $args {
foreach node $lnodes {
set node [_node_name $path $node]
if { ![string equal $node "root"] && [info exists data($node)] } {
set parent [lindex $data($node) 0]
set idx	   [lsearch -exact $data($parent) $node]
set data($parent) [lreplace $data($parent) $idx $idx]
_subdelete $path [list $node]
}
}
}

_redraw_idle $path 3
}


proc Tree::move { path parent node index } {
Widget::getVariable $path data

set node [_node_name $path $node]
if { [string equal $node "root"] || ![info exists data($node)] } {
return -code error "node \"$node\" does not exist"
}
if { ![info exists data($parent)] } {
return -code error "node \"$parent\" does not exist"
}
set p $parent
while {![string equal $p "root"]} {
if {[string equal $p $node]} {
return -code error "node \"$parent\" is a descendant of \"$node\""
}
set p [Tree::parent $path $p]
}

set oldp        [lindex $data($node) 0]
set idx         [lsearch -exact $data($oldp) $node]
set data($oldp) [lreplace $data($oldp) $idx $idx]
set data($node) [concat [list $parent] [lrange $data($node) 1 end]]

if {[string equal $index "end"]} {
lappend data($parent) $node
} else {
set data($parent) [linsert $data($parent) [incr index] $node]
}

if {([string equal $oldp "root"] ||
([visible $path $oldp] && [Widget::getoption $path.$oldp -open]))
|| ([string equal $parent "root"] ||
([visible $path $parent]
&& [Widget::getoption $path.$parent -open]))} {
_redraw_idle $path 3
}
}


proc Tree::reorder { path node neworder } {
Widget::getVariable $path data

set node [_node_name $path $node]
if { ![info exists data($node)] } {
return -code error "node \"$node\" does not exist"
}
set children [lrange $data($node) 1 end]
if { [llength $children] } {
set children [BWidget::lreorder $children $neworder]
set data($node) [linsert $children 0 [lindex $data($node) 0]]
if { [visible $path $node] && [Widget::getoption $path.$node -open] } {
_redraw_idle $path 3
}
}
}


proc Tree::selection { path cmd args } {
Widget::getVariable $path data

switch -- $cmd {
toggle {
foreach node $args {
set node [_node_name $path $node]
if {![info exists data($node)]} {
return -code error "$path selection toggle:
Cannot toggle unknown node \"$node\"."
}
}

foreach node $args {
set node [_node_name $path $node]
if {[set idx [lsearch -exact $data(selnodes) $node]] != -1} {
set data(selnodes) [lreplace $data(selnodes) $idx $idx]
} else {
lappend data(selnodes) $node
}
}
}

set {
foreach node $args {
set node [_node_name $path $node]
if {![info exists data($node)]} {
return -code error "$path selection set:  Cannot select unknown node \"$node\"."
}
}
set data(selnodes) {}
foreach node $args {
set node [_node_name $path $node]
if { [Widget::getoption $path.$node -selectable] } {
if { [lsearch -exact $data(selnodes) $node] == -1 } {
lappend data(selnodes) $node
}
}
}
_call_selectcmd $path
}

add {
foreach node $args {
set node [_node_name $path $node]
if {![info exists data($node)]} {
return -code error "$path selection add:  Cannot select unknown node \"$node\"."
}
}

foreach node $args {
set node [_node_name $path $node]
if {[Widget::getoption $path.$node -selectable]} {
if {[lsearch -exact $data(selnodes) $node] == -1} {
lappend data(selnodes) $node
}
}
}
_call_selectcmd $path
}

range {

if {[llength $args] != 2} {
return -code error  [BWidget::wrongNumArgsString  "$path selection range node1 node2"]
}

foreach {node1 node2} $args break

set node1 [_node_name $path $node1]
set node2 [_node_name $path $node2]
if {![info exists data($node1)]} {
return -code error "$path selection range:  Cannot start range at unknown node \"$node1\"."
}
if {![info exists data($node2)]} {
return -code error "$path selection range:  Cannot end range at unknown node \"$node2\"."
}

set nodes {}
foreach nodeItem [$path.c find withtag node] {
set node [Tree::_get_node_name $path $nodeItem 2]
if { [Widget::getoption $path.$node -selectable] } {
lappend nodes $node
}
}

if {$node1 == "root"} {
set node1 [lindex $nodes 0]
}

if {$node2 == "root"} {
set node2 [lindex $nodes 0]
}

while {[set index1 [lsearch -exact $nodes $node1]] == -1} {
set node1 [lindex $data($node1) 0]
}

while {[set index2 [lsearch -exact $nodes $node2]] == -1} {
set node2 [lindex $data($node2) 0]
}

if {$index2 < $index1} {
incr index1 $index2
set index2 [expr {$index1 - $index2}]
set index1 [expr {$index1 - $index2}]
}

set data(selnodes) [lrange $nodes $index1 $index2]
_call_selectcmd $path
}

remove {
foreach node $args {
set node [_node_name $path $node]
if { [set idx [lsearch -exact $data(selnodes) $node]] != -1 } {
set data(selnodes) [lreplace $data(selnodes) $idx $idx]
}
}
_call_selectcmd $path
}

clear {
if {[llength $args] != 0} {
return -code error  [BWidget::wrongNumArgsString "$path selection clear"]
}
set data(selnodes) {}
_call_selectcmd $path
}

get {
if {[llength $args] != 0} {
return -code error  [BWidget::wrongNumArgsString "$path selection get"]
}
return $data(selnodes)
}

includes {
if {[llength $args] != 1} {
return -code error  [BWidget::wrongNumArgsString  "$path selection includes node"]
}
set node [lindex $args 0]
set node [_node_name $path $node]
return [expr {[lsearch -exact $data(selnodes) $node] != -1}]
}

default {
return
}
}

event generate $path <<TreeSelect>>

_redraw_idle $path 1
}


proc Tree::getcanvas { path } {
return $path.c
}


proc Tree::exists { path node } {
Widget::getVariable $path data
set node [_node_name $path $node]
return [info exists data($node)]
}


proc Tree::visible { path node } {
Widget::getVariable $path items
set node [_node_name $path $node]
return [info exists items($node)]
}


proc Tree::parent { path node } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}
return [lindex $data($node) 0]
}


proc Tree::index { path node } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {[string equal $node "root"] || ![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}
set parent [lindex $data($node) 0]
return [expr {[lsearch -exact $data($parent) $node] - 1}]
}


proc Tree::find { path findInfo {confine ""} } {
if {[regexp -- {^@([0-9]+),([0-9]+)$} $findInfo match x y]} {
set x [$path.c canvasx $x]
set y [$path.c canvasy $y]
} elseif {[regexp -- {^[0-9]+$} $findInfo lineNumber]} {
set dy [Widget::cget $path -deltay]
set y  [expr {$dy*($lineNumber+0.5)}]
set confine ""
} else {
return -code error "invalid find spec \"$findInfo\""
}

set found  0
set region [$path.c bbox all]
if {[llength $region]} {
set xi [lindex $region 0]
set xs [lindex $region 2]
foreach id [$path.c find overlapping $xi $y $xs $y] {
set ltags [$path.c gettags $id]
set item  [lindex $ltags 1]
if { [string equal $item "node"] ||
[string equal $item "img"]  ||
[string equal $item "win"] } {
set node  [Tree::_get_node_name $path $id 2]
set found 1
break
}
}
}

if {$found} {
if {[string equal $confine "confine"]} {
set padx [_get_node_padx $path $node]
set xi [expr {[lindex [$path.c coords n:$node] 0] - $padx}]
set xs [lindex [$path.c bbox n:$node] 2]
if {$x >= $xi && $x <= $xs} {
return $node
}
} else {
return $node
}
}

return
}


proc Tree::line { path node } {
Widget::getVariable $path items
set node [_node_name $path $node]
set line [lindex $items($node) 0]
if {[string length $line]} { return $line }
return -1
}


proc Tree::nodes { path node {first ""} {last ""} } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}

if {![string length $first]} {
return [lrange $data($node) 1 end]
}

if {![string length $last]} {
return [lindex [lrange $data($node) 1 end] $first]
} else {
return [lrange [lrange $data($node) 1 end] $first $last]
}
}



proc Tree::visiblenodes { path {node root} } {
Widget::getVariable $path data

set nodes [list]
foreach node [lrange $data($node) 1 end] {
lappend nodes $node
if {[Widget::getoption $path.$node -open]} {
eval lappend nodes [Tree::visiblenodes $path $node]
}
}

return $nodes
}

proc Tree::see { path node } {
Widget::getVariable $path data
Widget::getVariable $path items

set node [_node_name $path $node]
if {[Widget::getoption $path -redraw] && $data(upd,afterid) != ""} {
after cancel $data(upd,afterid)
_redraw_tree $path
}

if {[info exists items($node)]} {
Tree::_see $path [lindex $items($node) 1]
}
}


proc Tree::opentree { path node {recursive 1} } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {[string equal $node "root"] || ![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}

_recexpand $path $node 1 $recursive [Widget::getoption $path -opencmd]
_redraw_idle $path 3
}


proc Tree::closetree { path node {recursive 1} } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {[string equal $node "root"] || ![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}

_recexpand $path $node 0 $recursive [Widget::getoption $path -closecmd]
_redraw_idle $path 3
}


proc Tree::toggle { path node } {
if {[Tree::itemcget $path $node -open]} {
$path closetree $node 0
} else {
$path opentree $node 0
}
}


proc Tree::edit { path node text {verifycmd ""} {clickres 0} {select 1}} {
variable _edit
Widget::getVariable $path data
Widget::getVariable $path items

set node [_node_name $path $node]
if { [Widget::getoption $path -redraw] && $data(upd,afterid) != "" } {
after cancel $data(upd,afterid)
_redraw_tree $path
}

if {[info exists items($node)]} {
set _edit(editing) 1

set idn [lindex $items($node) 1]

Tree::_see $path $idn

set oldfg  [$path.c itemcget $idn -fill]
set sbg    [Widget::cget $path -selectbackground]
set coords [$path.c coords $idn]
set x      [lindex $coords 0]
set y      [lindex $coords 1]
set ht     [$path.c cget -highlightthickness]
set bd     [expr {[$path.c cget -borderwidth] + $ht}]
set w      [expr {[winfo width $path] - 2 * $bd}]
set wmax   [expr {[$path.c canvasx $w] - $x}]

set _edit(wait) 0
set _edit(path) $path
set _edit(node) $node
set _edit(text) $text

$path.c itemconfigure $idn    -fill [Widget::cget $path -background]
$path.c itemconfigure s:$node -fill {} -outline {}

set frame  [frame $path.edit  -relief flat -borderwidth 0 -highlightthickness 0  -background [Widget::cget $path -background]]
set ent    [entry $frame.edit  -width              0      -relief             solid  -borderwidth        1      -highlightthickness 0      -foreground         [Widget::getoption $path.$node -fill]  -background         [Widget::cget $path -background]  -selectforeground   [Widget::cget $path -selectforeground]  -selectbackground   $sbg   -font               [_get_option $path $node -font]  -textvariable       Tree::_edit(text)]
pack $ent -ipadx 8 -anchor w

set _edit(frame) $frame
set _edit(entry) $ent

set idw [$path.c create window $x $y -window $frame -anchor w]
trace variable Tree::_edit(text) w  [list Tree::_update_edit_size $path $ent $idw $wmax]
tkwait visibility $ent
grab  $frame
BWidget::focus set $ent

_update_edit_size $path $ent $idw $wmax
update

if {$select} {
$ent selection range 0 end
$ent icursor end
$ent xview end
}

bindtags $ent [list $ent Entry]
bind $ent <Escape> {set Tree::_edit(wait) 0}
bind $ent <Return> {set Tree::_edit(wait) 1}
if {$clickres == 0 || $clickres == 1} {
bind $frame <Button>  [list set Tree::_edit(wait) $clickres]
}

set ok 0
while {!$ok} {
focus -force $ent
tkwait variable Tree::_edit(wait)
if {!$_edit(wait) || ![llength $verifycmd] ||
[uplevel \#0 $verifycmd [list $_edit(text)]]} {
set ok 1
}
}

trace vdelete Tree::_edit(text) w  [list Tree::_update_edit_size $path $ent $idw $wmax]
grab release $frame
BWidget::focus release $ent

set _edit(editing) 0

destroy $frame
$path.c delete $idw
$path.c itemconfigure $idn    -fill $oldfg
$path.c itemconfigure s:$node -fill $sbg -outline $sbg

if {$_edit(wait)} {
return $_edit(text)
}
}
}


proc Tree::editing { path } {
variable _edit
if {$_edit(editing) && $_edit(path) eq $path} { return 1 }
return 0
}


proc Tree::xview { path args } {
return [eval [linsert $args 0 $path.c xview]]
}


proc Tree::yview { path args } {
return [eval [linsert $args 0 $path.c yview]]
}


proc Tree::search { path args } {
Widget::getVariable $path data

array set _args {
-pattern  *
}
array set _args $args

return [array names data $_args(-pattern)]
}


proc Tree::level { path node } {
Widget::getVariable $path data

if {[string equal $node "root"]} { return 0 }

if {![info exists data($node)]} {
return -code error "node \"$node\" does not exists"
}

set level  1
set parent [lindex $data($node) 0]
while {![string equal $parent "root"]} {
incr level
set parent [lindex $data($parent) 0]
}

return $level
}


proc Tree::_call_selectcmd { path } {
Widget::getVariable $path data

set selectcmd [Widget::getoption $path -selectcommand]
if {[llength $selectcmd]} {
lappend selectcmd $path
lappend selectcmd $data(selnodes)
uplevel \#0 $selectcmd
}
return
}


proc Tree::_update_edit_size { path entry idw wmax args } {
set entw [winfo reqwidth $entry]
if {$entw + 8 >= $wmax} {
$path.c itemconfigure $idw -width $wmax
} else {
$path.c itemconfigure $idw -width 0
}
}


proc Tree::_see { path idn } {
set bbox [$path.c bbox $idn]
set scrl [$path.c cget -scrollregion]

set ymax [lindex $scrl 3]
set dy   [$path.c cget -yscrollincrement]
set yv   [$path yview]
set yv0  [expr {round([lindex $yv 0]*$ymax/$dy)}]
set yv1  [expr {round([lindex $yv 1]*$ymax/$dy)}]
set y    [expr {int([lindex [$path.c coords $idn] 1]/$dy)}]

if {$y < $yv0} {
$path.c yview scroll [expr {$y-$yv0}] units
} elseif { $y >= $yv1 } {
$path.c yview scroll [expr {$y-$yv1+1}] units
}

set xmax [lindex $scrl 2]
set dx   [$path.c cget -xscrollincrement]
set xv   [$path xview]
set x0   [expr {int([lindex $bbox 0]/$dx)}]
set xv0  [expr {round([lindex $xv 0]*$xmax/$dx)}]
set xv1  [expr {round([lindex $xv 1]*$xmax/$dx)}]

if {$x0 >= $xv1 || $x0 < $xv0} {
$path.c xview scroll [expr {$x0-$xv0}] units
}
}


proc Tree::_recexpand { path node expand recursive cmd } {
Widget::getVariable $path data

if {[Widget::getoption $path.$node -open] != $expand} {
Widget::setoption $path.$node -open $expand
if {[llength $cmd]} {
uplevel \#0 $cmd [list $node]
}
}

if {$recursive} {
foreach subnode [lrange $data($node) 1 end] {
_recexpand $path $subnode $expand $recursive $cmd
}
}
}


proc Tree::_subdelete { path lnodes } {
Widget::getVariable $path data

set sel $data(selnodes)

while {[llength $lnodes]} {
set lsubnodes [list]
foreach node $lnodes {
foreach subnode [lrange $data($node) 1 end] {
lappend lsubnodes $subnode
}
unset data($node)
set idx [lsearch -exact $sel $node]
if {$idx >= 0} {
set sel [lreplace $sel $idx $idx]
}
if {[set win [Widget::getoption $path.$node -window]] != ""} {
destroy $win
}
Widget::destroy $path.$node 0
}
set lnodes $lsubnodes
}

set data(selnodes) $sel
}


proc Tree::_update_scrollregion { path } {
set bd   [$path.c cget -borderwidth]
set ht   [$path.c cget -highlightthickness]
set bd   [expr {2 * ($bd + $ht)}]
set w    [expr {[winfo width  $path] - $bd}]
set h    [expr {[winfo height $path] - $bd}]
set xinc [$path.c cget -xscrollincrement]
set yinc [$path.c cget -yscrollincrement]
set bbox [$path.c bbox node]
if {[llength $bbox]} {
set xs [lindex $bbox 2]
set ys [lindex $bbox 3]

if {$w < $xs} {
set w [expr {int($xs)}]
if {[set r [expr {$w % $xinc}]]} {
set w [expr {$w+$xinc-$r}]
}
}
if {$h < $ys} {
set h [expr {int($ys)}]
if {[set r [expr {$h % $yinc}]]} {
set h [expr {$h+$yinc-$r}]
}
}
}

$path.c configure -scrollregion [list 0 0 $w $h]

if {[Widget::getoption $path -selectfill]} {
_redraw_selection $path
}
}


proc Tree::_cross_event { path } {
Widget::getVariable $path data

set node [Tree::_get_node_name $path current 1]
if {[Widget::getoption $path.$node -open]} {
Tree::itemconfigure $path $node -open 0
if {[llength [set cmd [Widget::getoption $path -closecmd]]]} {
uplevel \#0 $cmd [list $node]
}
} else {
Tree::itemconfigure $path $node -open 1
if {[llength [set cmd [Widget::getoption $path -opencmd]]]} {
uplevel \#0 $cmd [list $node]
}
}
}


proc Tree::_draw_cross { path node open x y } {
Widget::getVariable $path items
set idc [lindex $items($node) 2]

if {$open} {
set img [Widget::cget $path -crossopenimage]
set bmp [Widget::cget $path -crossopenbitmap]
} else {
set img [Widget::cget $path -crosscloseimage]
set bmp [Widget::cget $path -crossclosebitmap]
}

if {[string length $idc]} {
if {![string length $img]} {
$path.c itemconfigure $idc -bitmap $bmp
} else {
$path.c itemconfigure $idc -image $img
}
return $idc
}

if {![Widget::getoption $path -showlines]} { set x [expr {$x + 6}] }

if {![string length $img]} {
set idc [$path.c create bitmap $x $y  -bitmap     $bmp  -background [$path.c cget -background]  -foreground [Widget::getoption $path -crossfill]  -tags       [list cross c:$node] -anchor c]
} else {
set idc [$path.c create image $x $y  -image      $img  -tags       [list cross c:$node] -anchor c]
}

return $idc
}


proc Tree::_draw_node { path node x0 y0 deltax deltay padx showlines } {
Widget::getVariable $path data
Widget::getVariable $path items

set x1 [expr {$x0+$deltax+5}]
set y1 $y0
if {$showlines} {
set i [$path.c create line $x0 $y0 $x1 $y0  -fill    [Widget::getoption $path -linesfill]    -stipple [Widget::getoption $path -linestipple]  -tags    line]

lappend items($node) $i
} else {
lappend items($node) ""
}

set i [$path.c create text [expr {$x1+$padx}] $y0  -anchor w  -text   [Widget::getoption $path.$node -text]  -fill   [Widget::getoption $path.$node -fill]  -font   [_get_option $path $node -font]  -tags   [Tree::_get_node_tags $path $node [list node n:$node]]]
lappend items($node) $i

set len [expr {[llength $data($node)] > 1}]
set dc  [Widget::getoption $path.$node -drawcross]
set exp [Widget::getoption $path.$node -open]

if {$len && $exp} {
set y1 [_draw_subnodes $path [lrange $data($node) 1 end]  [expr {$x0+$deltax}] $y0 $deltax $deltay $padx $showlines]
}

if {![string equal $dc "never"] && ($len || [string equal $dc "allways"])} {
lappend items($node) [_draw_cross $path $node $exp $x0 $y0]
} else {
lappend items($node) ""
}

if {[set win [Widget::getoption $path.$node -window]] != ""} {
set a [Widget::cget $path.$node -anchor]
set i [$path.c create window $x1 $y0 -window $win -anchor $a  -tags [Tree::_get_node_tags $path $node [list win i:$node]]]
lappend items($node) $i
} elseif {[set img [Widget::getoption $path.$node -image]] != ""} {
set a [Widget::cget $path.$node -anchor]
set i [$path.c create image $x1 $y0 -image $img -anchor $a  -tags   [Tree::_get_node_tags $path $node [list img i:$node]]]
lappend items($node) $i
} else {
lappend items($node) ""
}

set nid [lindex $items($node) 1]
set iid [lindex $items($node) 3]
set box [$path.c bbox $nid $iid]
set id [$path.c create rect 0 [lindex $box 1]  [winfo screenwidth $path] [lindex $box 3]  -tags [Tree::_get_node_tags $path $node [list box b:$node]]  -fill {} -outline {}]
$path.c lower $id
lappend items($node) $id

_set_help $path $node

return $y1
}


proc Tree::_draw_subnodes { path nodes x0 y0 deltax deltay padx showlines } {
set y1 $y0
foreach node $nodes {
set padx   [_get_node_padx $path $node]
set deltax [_get_node_deltax $path $node]
set yp $y1
set y1 [_draw_node $path $node $x0 [expr {$y1+$deltay}]  $deltax $deltay $padx $showlines]
}
if {$showlines && [llength $nodes]} {
if {$y0 < 0} {
incr y0 $deltay
}
set id [$path.c create line $x0 $y0 $x0 [expr {$yp+$deltay}]  -fill    [Widget::getoption $path -linesfill]    -stipple [Widget::getoption $path -linestipple]  -tags    line]

$path.c lower $id
}
return $y1
}


proc Tree::_update_nodes { path } {
Widget::getVariable $path data
Widget::getVariable $path items

foreach {node flag} $data(upd,nodes) {
if {![info exists items($node)]} { continue }
set idn [lindex $items($node) 1]

set padx   [_get_node_padx $path $node]
set deltax [_get_node_deltax $path $node]
set c  [$path.c coords $idn]
set x1 [expr {[lindex $c 0]-$padx}]
set x0 [expr {$x1-$deltax-5}]
set y0 [lindex $c 1]
if {$flag & 48} {
set win  [Widget::getoption $path.$node -window]
set img  [Widget::getoption $path.$node -image]
set anc  [Widget::cget $path.$node -anchor]
set idi  [lindex $items($node) 3]
set type [lindex [$path.c gettags $idi] 1]
if {[string length $win]} {
if {[string equal $type "win"]} {
$path.c itemconfigure $idi -window $win
} else {
$path.c delete $idi
set tags [_get_node_tags $path $node [list win i:$node]]
set idi [$path.c create window $x1 $y0 -window $win  -anchor $anc -tags $tags]
set items($node) [lreplace $items($node) 3 3 $idi]
}
} elseif {[string length $img]} {
if {[string equal $type "img"]} {
$path.c itemconfigure $idi -image $img
} else {
$path.c delete $idi
set tags [_get_node_tags $path $node [list win i:$node]]
set idi [$path.c create image $x1 $y0 -image $img  -anchor $anc -tags $tags]
set items($node) [lreplace $items($node) 3 3 $idi]
}
} else {
$path.c delete $idi
set items($node) [lreplace $items($node) 3 3 ""]
}
}

if {$flag & 8} {
set len [expr {[llength $data($node)] > 1}]
set dc  [Widget::getoption $path.$node -drawcross]
set exp [Widget::getoption $path.$node -open]

if {![string equal $dc "never"]
&& ($len || [string equal $dc "allways"])} {
set idc [_draw_cross $path $node $exp $x0 $y0]
set items($node) [lreplace $items($node) 2 2 $idc]
} else {
set idc [lindex $items($node) 2]
$path.c delete $idc
set items($node) [lreplace $items($node) 2 2 ""]
}
}

if {$flag & 7} {
$path.c itemconfigure $idn  -text [Widget::getoption $path.$node -text]  -fill [Widget::getoption $path.$node -fill]  -font [_get_option $path $node -font]
}
}
}


proc Tree::_draw_tree { path } {
Widget::getVariable $path data
Widget::getVariable $path items

if {[info exists items]} { unset items }

$path.c delete all
set cursor [$path.c cget -cursor]
$path.c configure -cursor watch

set x0 8
if {![Widget::getoption $path -showlines]} { set x0 0 }

Tree::_draw_subnodes $path [lrange $data(root) 1 end] $x0  [expr {-[Widget::cget $path -deltay]/2}]  [Widget::getoption $path -deltax]  [Widget::cget $path -deltay]  [Widget::getoption $path -padx]    [Widget::getoption $path -showlines]
$path.c configure -cursor $cursor
}


proc Tree::_redraw_tree { path } {
Widget::getVariable $path data

if {[Widget::getoption $path -redraw]} {
if {$data(upd,level) == 2} {
_update_nodes $path
} elseif {$data(upd,level) == 3} {
_draw_tree $path
}
_redraw_selection $path
_update_scrollregion $path
set data(upd,nodes)   {}
set data(upd,level)   0
set data(upd,afterid) ""
}
}


proc Tree::_redraw_selection { path } {
Widget::getVariable $path data

set selbg [Widget::cget $path -selectbackground]
set selfg [Widget::cget $path -selectforeground]
set fill  [Widget::getoption $path -selectfill]
if {$fill} {
set scroll [$path.c cget -scrollregion]
if {[llength $scroll]} {
set xmax [expr {[lindex $scroll 2]-1}]
} else {
set xmax [winfo width $path]
}
}
foreach id [$path.c find withtag sel] {
set node [Tree::_get_node_name $path $id 1]
$path.c itemconfigure "n:$node"  -fill [Widget::getoption $path.$node -fill]
}
$path.c delete sel
foreach node $data(selnodes) {
set bbox [$path.c bbox "n:$node"]
if {[llength $bbox]} {
if {$fill} {
set bbox [$path.c bbox "n:$node" "i:$node"]
set bbox [list 0 [lindex $bbox 1] $xmax [lindex $bbox 3]]
}
set id [$path.c create rectangle $bbox -tags [list sel s:$node]  -fill $selbg -outline $selbg]
$path.c itemconfigure "n:$node" -fill $selfg
$path.c lower $id
}
}
}


proc Tree::_redraw_idle { path level } {
Widget::getVariable $path data

if {[Widget::getoption $path -redraw] && $data(upd,afterid) == ""} {
set data(upd,afterid) [after idle [list Tree::_redraw_tree $path]]
}
if {$level > $data(upd,level)} {
set data(upd,level) $level
}
return ""
}


proc Tree::_init_drag_cmd { path X Y top } {
set path [winfo parent $path]
set ltags [$path.c gettags current]
set item  [lindex $ltags 1]
if {[string equal $item "node"]
|| [string equal $item "img"]
|| [string equal $item "win"]} {
set node [Tree::_get_node_name $path current 2]
if {[llength [set cmd [Widget::getoption $path -draginitcmd]]]} {
return [uplevel \#0 $cmd [list $path $node $top]]
}
if {[set type [Widget::getoption $path -dragtype]] == ""} {
set type "TREE_NODE"
}
if {[set img [Widget::getoption $path.$node -image]] != ""} {
pack [label $top.l -image $img -padx 0 -pady 0]
}
return [list $type {copy move link} $node]
}
return {}
}


proc Tree::_drop_cmd { path source X Y op type dnddata } {
set path [winfo parent $path]
Widget::getVariable $path data

$path.c delete drop
if {[string length $data(dnd,afterid)]} {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}
set data(dnd,scroll) ""
if {[llength $data(dnd,node)]
&& [llength [set cmd [Widget::getoption $path -dropcmd]]]} {
return [uplevel \#0 $cmd  [list $path $source $data(dnd,node) $op $type $dnddata]]
}
return 0
}


proc Tree::_over_cmd { path source event X Y op type dnddata } {
set path [winfo parent $path]
Widget::getVariable $path data

if {[string equal $event "leave"]} {
$path.c delete drop
if {[string length $data(dnd,afterid)]} {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}
set data(dnd,scroll) ""
return 0
}

if {[string equal $event "enter"]} {
set mode [Widget::getoption $path -dropovermode]
set data(dnd,mode) 0
foreach c {w p n} {
set data(dnd,mode) [expr {($data(dnd,mode) << 1)
| ([string first $c $mode] != -1)}]
}
set bbox [$path.c bbox all]
if {[llength $bbox]} {
set data(dnd,xs) [lindex $bbox 2]
set data(dnd,empty) 0
} else {
set data(dnd,xs) 0
set data(dnd,empty) 1
}
set data(dnd,node) {}
}

set x [expr {$X-[winfo rootx $path]}]
set y [expr {$Y-[winfo rooty $path]}]

$path.c delete drop
set data(dnd,node) {}

if {$data(dnd,mode) != 4 && [_auto_scroll $path $x $y] != ""} { return 2 }

if {$data(dnd,mode) & 4} {
set target [list widget]
set vmode  4
} else {
set target [list ""]
set vmode  0
}

if {($data(dnd,mode) & 2) && $data(dnd,empty)} {
lappend target [list root 0]
set vmode  [expr {$vmode | 2}]
}

set xs $data(dnd,xs)
set xc [$path.c canvasx $x]
if {$xc <= $xs} {
set yc   [$path.c canvasy $y]
set dy   [$path.c cget -yscrollincrement]
set line [expr {int($yc/$dy)}]
set xi   0
set yi   [expr {$line*$dy}]
set ys   [expr {$yi+$dy}]
set found 0
foreach id [$path.c find overlapping $xi $yi $xs $ys] {
set ltags [$path.c gettags $id]
set item  [lindex $ltags 1]
if {[string equal $item "node"]
|| [string equal $item "img"]
|| [string equal $item "win"]} {
set node [Tree::_get_node_name $path $id 2]
set found 1
break
}
}

if {$found} {
set padx   [_get_node_padx $path $node]
set deltax [_get_node_deltax $path $node]
set xi [expr {[lindex [$path.c coords n:$node] 0] - $padx - 1}]
if {$data(dnd,mode) & 1} {
lappend target $node
set vmode [expr {$vmode | 1}]
} else {
lappend target ""
}

if {$data(dnd,mode) & 2} {
if {$yc >= $yi+$dy/2} {
if {[Widget::getoption $path.$node -open] &&
[llength $data($node)] > 1} {
set parent $node
set index  0
set xli    [expr {$xi-5}]
} elseif {[Widget::getoption $path.$node -open]} {
set parent $node
set index  0
set xli    [expr {$xi-5}]
} else {
set parent [lindex $data($node) 0]
set index  [lsearch -exact $data($parent) $node]
set xli    [expr {$xi - $deltax - 5}]
}
set yl $ys
} else {
set parent [lindex $data($node) 0]
set index  [expr {[lsearch -exact $data($parent) $node] - 1}]
set xli    [expr {$xi - $deltax - 5}]
set yl     $yi
}
lappend target [list $parent $index]
set vmode  [expr {$vmode | 2}]
} else {
lappend target {}
}

if {($vmode & 3) == 3} {
if {$yc-$yi <= 3 || $ys-$yc <= 3} {
lappend target "position"
} else {
lappend target "node"
}
}
}
}

if {$vmode && [llength [set cmd [Widget::getoption $path -dropovercmd]]]} {
set res     [uplevel \#0 $cmd  [list $path $source $target $op $type $dnddata]]
set code    [lindex $res 0]
set newmode 0
if {$code & 1} {
set mode [lindex $res 1]
if {($vmode & 1) && [string equal $mode "node"]} {
set newmode 1
} elseif {($vmode & 2) && [string equal $mode "position"]} {
set newmode 2
} elseif {($vmode & 4) && [string equal $mode "widget"]} {
set newmode 4
}
}
set vmode $newmode
} else {
if {($vmode & 3) == 3} {
if {[string equal [lindex $target 3] "position"]} {
set vmode [expr {$vmode & ~1}]
} else {
set vmode [expr {$vmode & ~2}]
}
}

if {$data(dnd,mode) == 4 || $data(dnd,mode) == 0} {
set code 1
} else {
set code 3
}
}

if {!$data(dnd,empty)} {
if {$vmode & 1} {
set data(dnd,node) [list "node" [lindex $target 1]]
$path.c create rectangle $xi $yi $xs $ys -tags drop
} elseif {$vmode & 2} {
set data(dnd,node) [concat "position" [lindex $target 2]]
$path.c create line  [list $xli [expr {$yl-$dy/2}] $xli $yl $xs $yl] -tags drop
} elseif {$vmode & 4} {
set data(dnd,node) [list "widget"]
} else {
set code [expr {$code & 2}]
}
}

if {$code & 1} {
DropSite::setcursor based_arrow_down
} else {
DropSite::setcursor dot
}
return $code
}


proc Tree::_drag_and_drop { path from endItem operation type startItem } {
if {[winfo parent $from] != $path} { return }

set place [lindex $endItem 0]

switch -- $place {
"node" {
set node   [lindex $endItem 1]
set parent [$path parent $node]
set index  [$path index $node]
}

"position" {
set parent [lindex $endItem 1]
set index  [lindex $endItem 2]
}

default {
return
}
}

if {[string equal $operation "copy"]} {
set options [Widget::options $path.$startItem]
eval $path insert $idx [list $startItem#auto] $options
} else {
$path move $parent $startItem $index
}
}


proc Tree::_auto_scroll { path x y } {
Widget::getVariable $path data

set xmax   [winfo width  $path]
set ymax   [winfo height $path]
set scroll {}
if {$y <= 6} {
if {[lindex [$path.c yview] 0] > 0} {
set scroll [list yview -1]
DropSite::setcursor sb_up_arrow
}
} elseif {$y >= $ymax-6} {
if {[lindex [$path.c yview] 1] < 1} {
set scroll [list yview 1]
DropSite::setcursor sb_down_arrow
}
} elseif {$x <= 6} {
if {[lindex [$path.c xview] 0] > 0} {
set scroll [list xview -1]
DropSite::setcursor sb_left_arrow
}
} elseif {$x >= $xmax-6} {
if {[lindex [$path.c xview] 1] < 1} {
set scroll [list xview 1]
DropSite::setcursor sb_right_arrow
}
}

if {[string length $data(dnd,afterid)]
&& ![string equal $data(dnd,scroll) $scroll]} {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}

set data(dnd,scroll) $scroll
if {[string length $scroll] && ![string length $data(dnd,afterid)]} {
set data(dnd,afterid) [after 200 [list Tree::_scroll $path $scroll]]
}
return $data(dnd,afterid)
}


proc Tree::_scroll { path cmd dir } {
Widget::getVariable $path data

if {($dir == -1 && [lindex [$path.c $cmd] 0] > 0)
|| ($dir == 1  && [lindex [$path.c $cmd] 1] < 1)} {
$path.c $cmd scroll $dir units
set data(dnd,afterid) [after 100 [list Tree::_scroll $path $cmd $dir]]
} else {
set data(dnd,afterid) ""
DropSite::setcursor dot
}
}


proc Tree::_keynav {which path} {

set nodes {}
foreach nodeItem [$path.c find withtag node] {
set node [Tree::_get_node_name $path $nodeItem 2]
if {[Widget::cget $path.$node -selectable]} {
lappend nodes $node
}
}

set node [_get_current_node $path]

switch -exact -- $which {
"up" {
if {![string length $node]} { return }

set index [lsearch -exact $nodes $node]
incr index -1
if {$index >= 0} {
$path selection set [lindex $nodes $index]
_set_current_node $path [lindex $nodes $index]
$path see [lindex $nodes $index]
return
}
}

"down" {
if {![string length $node]} {
$path selection set [lindex $nodes 0]
_set_current_node $path [lindex $nodes 0]
$path see [lindex $nodes 0]
return
}

set index [lsearch -exact $nodes $node]
incr index
if {$index < [llength $nodes]} {
$path selection set [lindex $nodes $index]
_set_current_node $path [lindex $nodes $index]
$path see [lindex $nodes $index]
return
}
}

"right" {
if {![string length $node]} { return }

if {[Widget::getoption $path.$node -open]} {
if { [llength [$path nodes $node]] } {
set index [lsearch -exact $nodes $node]
incr index
if {$index < [llength $nodes]} {
$path selection set [lindex $nodes $index]
_set_current_node $path [lindex $nodes $index]
$path see [lindex $nodes $index]
return
}
}
} else {
$path itemconfigure $node -open 1
if {[llength [set cmd [Widget::getoption $path -opencmd]]]} {
uplevel \#0 $cmd [list $node]
}
return
}
}

"left" {
if {![string length $node]} { return }

if {[Widget::getoption $path.$node -open]} {
$path itemconfigure $node -open 0
if {[llength [set cmd [Widget::getoption $path -closecmd]]]} {
uplevel \#0 $cmd [list $node]
}
return
} else {
set parent [$path parent $node]
if {[string equal $parent "root"]} {
set parent $node
} else {
while {![$path itemcget $parent -selectable]} {
set parent [$path parent $parent]
if {[string equal $parent "root"]} {
set parent $node
break
}
}
}
$path selection set $parent
_set_current_node $path $parent
$path see $parent
return
}
}

"space" {
if {[string length $node]} {
Tree::toggle $path $node
}
}
}
}


proc Tree::_get_current_node {win} {
if {[info exists selectTree::selectCursor($win)]} {
set result $selectTree::selectCursor($win)
} elseif {[llength [set selList [$win selection get]]]} {
set result [lindex $selList 0]
} else {
set result ""
}
return $result
}


proc Tree::_set_current_node {win node} {
if {[info exists selectTree::selectCursor($win)]} {
set selectTree::selectCursor($win) $node
}
return
}


proc Tree::_get_node_name {path {item current} {tagindex end-1}} {
return [string range [lindex [$path.c gettags $item] $tagindex] 2 end]
}

proc Tree::_get_node_padx {path node} {
set padx [Widget::getoption $path.$node -padx]
if {$padx < 0} { set padx [Widget::getoption $path -padx] }
return $padx
}

proc Tree::_get_node_deltax {path node} {
set deltax [Widget::getoption $path.$node -deltax]
if {$deltax < 0} { set deltax [Widget::getoption $path -deltax] }
return $deltax
}


proc Tree::_get_node_tags {path node {tags ""}} {
eval [linsert $tags 0 lappend list TreeItemSentinal]
if {[Widget::getoption $path.$node -helptext] == ""} { return $list }

switch -- [Widget::getoption $path.$node -helptype] {
balloon {
lappend list BwHelpBalloon
}
variable {
lappend list BwHelpVariable
}
}
return $list
}

proc Tree::_set_help { path node } {
Widget::getVariable $path help

set item $path.$node
set opts [list -helptype -helptext -helpvar]
foreach {cty ctx cv} [eval [linsert $opts 0 Widget::hasChangedX $item]] break
set text [Widget::getoption $item -helptext]

if { (![info exists help($node)] && $text != "") || $cty || $ctx || $cv } {
set help($node) 1
set type [Widget::getoption $item -helptype]
switch $type {
balloon {
DynamicHelp::register $path.c balloon n:$node $text
DynamicHelp::register $path.c balloon i:$node $text
DynamicHelp::register $path.c balloon b:$node $text
}
variable {
set var [Widget::getoption $item -helpvar]
DynamicHelp::register $path.c variable n:$node $var $text
DynamicHelp::register $path.c variable i:$node $var $text
DynamicHelp::register $path.c variable b:$node $var $text
}
}
}
}

proc Tree::_mouse_select { path cmd args } {
eval [linsert $args 0 selection $path $cmd]
switch -- $cmd {
"add" - "clear" - "remove" - "set" - "toggle" {
event generate $path <<TreeSelect>>
}
}
}


proc Tree::_node_name { path node } {
set map [list & _ | _ ^ _ ! _]
return  [string map $map $node]
}


proc Tree::_get_option { path node option {default ""} } {
return [Widget::getOption $option $default $path.$node $path]
}


proc Tree::_destroy { path } {
Widget::getVariable $path data

if {[string length $data(upd,afterid)]} {
after cancel $data(upd,afterid)
}

if {[string length $data(dnd,afterid)]} {
after cancel $data(dnd,afterid)
}

_subdelete $path [lrange $data(root) 1 end]
Widget::destroy $path
}


namespace eval OptionTree {
Widget::define OptionTree optiontree Tree

namespace eval Node {
Widget::declare OptionTree::Node {
{-type              Enum      "none"  1
{checkbutton none radiobutton}}
{-command            String    ""      0}
{-variable           String    ""      0}

{-on                 Boolean   "0"     0}
{-value              String    ""      0}
{-onvalue            String    ""      0}
{-offvalue           String    ""      0}

{-state              Enum      "normal" 0 {disabled normal}}
{-disabledforeground Color     "SystemDisabledText" 0}
}
}

Widget::declare OptionTree {
{-command             String       ""   0}
{-toggleselect        Boolean      1    1}

{-radioimage          String       ""   1}
{-radioselectimage    String       ""   1}

{-checkimage          String       ""   1}
{-checkselectimage    String       ""   1}
}

bind OptionTree <Destroy> [list OptionTree::_destroy %W]
}


proc OptionTree::create { path args } {
set opath $path#opttree

array set maps [list Tree {} .c {} OptionTree {}]
array set maps [Widget::splitArgs $args Tree OptionTree]

eval [list Tree::create $path -bg #FFFFFF -showlines 0] $maps(Tree)
eval [list $path.c configure] $maps(.c)

Widget::initFromODB OptionTree $opath $maps(OptionTree)

if {![string length [Widget::getoption $opath -radioimage]]} {
Widget::setoption $opath -radioimage [BWidget::Icon radio-off]
}

if {![string length [Widget::getoption $opath -radioselectimage]]} {
Widget::setoption $opath -radioselectimage [BWidget::Icon radio-on]
}

if {![string length [Widget::getoption $opath -checkimage]]} {
Widget::setoption $opath -checkimage [BWidget::Icon check-off]
}

if {![string length [Widget::getoption $opath -checkselectimage]]} {
Widget::setoption $opath -checkselectimage [BWidget::Icon check-on]
}

set opts [list]

set image  [Widget::getoption $opath -checkimage]
set width  [image width $image]
set height [image height $image]
lappend opts -padx [expr {$width + 4}]
lappend opts -deltax $width -deltay [expr {$height + 4}]

eval [list Tree::configure $path] $opts $maps(Tree)

bindtags $path [list $path OptionTree Tree [winfo toplevel $path] all]

set toggle [Widget::getoption $opath -toggleselect]

$path bindText  <Button-1> [list OptionTree::_select $path $toggle]
$path bindText  <Double-1> [list OptionTree::_select $path 1]
$path bindImage <Button-1> [list OptionTree::_select $path 1]
$path bindImage <Double-1> [list OptionTree::_select $path 1]

set c [$path getcanvas]
bind $c <Key-space> [list OptionTree::_select $path 1]

proc ::$path { cmd args }  "return \[OptionTree::_path_command [list $path] \$cmd \$args\]"

return $path
}


proc OptionTree::cget { path option } {
if {[string match "*#opttree" $path]} {
set opath $path
} else {
set opath $path#opttree
}

if {[Widget::optionExists Tree $option]} {
return [Tree::cget $path $option]
} else {
return [Widget::cget $opath $option]
}
}


proc OptionTree::clear { path } {
eval [list OptionTree::delete $path] [Tree::nodes $path root]
}


proc OptionTree::configure { path args } {
set opath $path#opttree

if {![llength $args]} {
set res [Tree::configure $path]
eval lappend res [Widget::configure $opath $args]
return [lsort $res]
}

if {[llength $args] == 1} {
if {[Widget::optionExists Tree $args]} {
return [Tree::configure $path $args]
} else {
return [Widget::configure $opath $args]
}
}

array set maps [list Tree {} .c {} OptionTree {}]
array set maps [Widget::splitArgs $args Tree OptionTree]

if {[llength $maps(Tree)] || [llength $maps(.c)]} {
eval [list Tree::configure $path] $maps(Tree) $maps(.c)
}

if {[llength $maps(OptionTree)]} {
Widget::configure $opath $maps(OptionTree)
}
}


proc OptionTree::delete { path args } {
Widget::getVariable $path traces
Widget::getVariable $path variables

foreach node $args {
eval [list OptionTree::delete $path] [$path nodes $node]

Widget::destroy $path.$node#opttree 0

if {![info exists variables($node)]} { continue }

set varName $variables($node)
set command [list OptionTree::_redraw_node $path $node 0]
uplevel #0 [list trace remove variable $varName write $command]

if {[set idx [lsearch -exact $traces($varName) $node]] > -1} {
set traces($varName) [lreplace $traces($varName) $idx $idx]
}
}

eval [list Tree::delete $path] $args
}


proc OptionTree::insert { path index parent node args } {
array set maps [Widget::splitArgs $args OptionTree::Node Tree::Node]

set deltax [Widget::getoption $path -deltax]
if {[string equal $parent "root"]} {
set deltax 0
} else {
set dx [Widget::getoption $path.$parent -deltax]
set dc [Widget::getoption $path.$parent -drawcross]
if {$dx == 0 && $dc ne "never"} {
Tree::itemconfigure $path $parent -deltax 10
}
}

set args [concat -deltax $deltax $maps(Tree::Node)]
set node [eval [list Tree::insert $path $index $parent $node] $args]

set onode $path.$node#opttree
Widget::init OptionTree::Node $onode $maps(OptionTree::Node)

set type [Widget::getoption $onode -type]
array set tmp $maps(Tree::Node)
if {[string equal $type "none"] && ![info exists tmp(-padx)]
&& ![string length [Tree::itemcget $path $node -image]]} {
Tree::itemconfigure $path $node -padx 4
}

OptionTree::_set_variable $path $node
OptionTree::_redraw_node  $path $node 0

return $node
}


proc OptionTree::itemcget { path node option } {
set onode $path.$node#opttree

if {[Widget::optionExists OptionTree::Node $option]} {
return [Widget::getoption $onode $option]
} else {
return [Tree::itemcget $path $node $option]
}
}


proc OptionTree::itemconfigure { path node args } {
set onode $path.$node#opttree

if {![llength $args]} {
set res [Tree::itemconfigure $path $node]
eval lappend res [Widget::configure $onode $args]
return [lsort $res]
}

if {[llength $args] == 1} {
if {[Widget::optionExists Tree::Node $args]} {
return [Tree::itemconfigure $path $node $args]
} else {
return [Widget::configure $onode $args]
}
}

array set maps [Widget::splitArgs $args OptionTree::Node Tree::Node]

if {[info exists maps(Tree::Node)]} {
eval [list Tree::itemconfigure $path $node] $maps(Tree::Node)
}

set oldVarName [Widget::getoption $onode -variable]

if {[info exists maps(OptionTree::Node)]} {
Widget::configure $onode $maps(OptionTree::Node)
}

set redraw 0

if {[Widget::hasChanged $onode -variable varName]} {
Widget::getVariable $path traces
if {[string length $oldVarName]} {
set idx [lsearch -exact $traces($oldVarName) $node]
set traces($oldVarName) [lreplace $traces($oldVarName) $idx $idx]

set command [list OptionTree::_redraw_node $path $node 0]
uplevel #0 [list trace remove variable $oldVarName write $command]
}

OptionTree::_set_variable $path $node

set redraw 1
}

if {[Widget::anyChangedX $onode -on -value -onvalue -offvalue -state]} {
set redraw 1
}

if {$redraw} { _redraw_node $path $node 1 }
}


proc OptionTree::toggle { path node {force 0} } {
set onode $path.$node#opttree

if {$force || [Widget::getoption $onode -state] ne "disabled"} {
if {[Widget::getoption $onode -on]} {
OptionTree::itemconfigure $path $node -on 0
} else {
OptionTree::itemconfigure $path $node -on 1
}

event generate $path <<TreeModify>>
}
}


proc OptionTree::_path_command { path cmd larg } {
if {[string length [info commands ::OptionTree::$cmd]]} {
return [eval [linsert $larg 0 OptionTree::$cmd $path]]
} else {
return [eval [linsert $larg 0 Tree::$cmd $path]]
}
}


proc OptionTree::_select { path toggle {node ""} } {
if {$node eq ""} { set node [$path selection get] }

set opath $path#opttree
set onode $path.$node#opttree

$path selection set $node

if {[Widget::getoption $onode -state] ne "disabled" && $toggle} {
OptionTree::toggle $path $node
set cmd [Widget::cgetOption -command "" $onode $opath]
OptionTree::_eval_command $path $node $cmd
}

event generate $path <<TreeSelect>>
}


proc OptionTree::_eval_command { path node command } {
if {[string length $command]} {
set onode   $path.$node#opttree
set parent  [Tree::parent $path $node]
set varName [Widget::getoption $onode -variable]
set map     [list %W $path %p $parent %n $node %v $varName]

uplevel #0 [string map $map $command]
}
}


proc OptionTree::_set_variable { path node } {
Widget::getVariable $path traces
Widget::getVariable $path variables

set onode $path.$node#opttree

set varName [Widget::getoption $onode -variable]
if {![string length $varName]} { return }

set variables($node) $varName
lappend traces($varName) $node

set command [list OptionTree::_redraw_node $path $node 0]
uplevel #0 [list trace add variable $varName write $command]
}


proc OptionTree::_redraw_node { path node force args } {
set opath $path#opttree
set onode $path.$node#opttree

set varName [Widget::getoption $onode -variable]

set opts [list]

if {[Widget::getoption $onode -state] eq "disabled"} {
lappend opts -fill [Widget::getoption $onode -disabledforeground]
}

switch -- [Widget::getoption $onode -type] {
"checkbutton" {
set on [Widget::getoption $onode -on]

if {[string length $varName]} {
upvar #0 $varName var

set onvalue  [Widget::getoption $onode -onvalue]
set offvalue [Widget::getoption $onode -offvalue]

if {$force || ![info exists var]} {
if {$onvalue  eq ""} { set onvalue  1 }
if {$offvalue eq ""} { set offvalue 0 }
if {$on} {
set var $onvalue
} else {
set var $offvalue
}
} else {
if {$offvalue eq "" && [string is false -strict $var]} {
set on 0
} elseif {$onvalue eq "" && [string is true -strict $var]} {
set on 1
} elseif {$var == $onvalue} {
set on 1
} else {
set on 0
}
}
}

if {$on} {
set image [Widget::getoption $opath -checkselectimage]
} else {
set image [Widget::getoption $opath -checkimage]
}

Widget::setoption $onode -on $on
lappend opts -image $image
}

"radiobutton" {
set on 1
set image [Widget::getoption $opath -radioselectimage]

if {[string length $varName]} {
upvar #0 $varName var

set value [Widget::getoption $onode -value]

if {$force} { set var $value }

if {[info exists var] && $var != $value} {
set on 0
set image [Widget::getoption $opath -radioimage]
}
}

Widget::setoption $onode -on $on
lappend opts -image $image
}
}

eval [list Tree::itemconfigure $path $node] $opts
}


proc OptionTree::_destroy { path } {
Widget::getVariable $path traces

OptionTree::delete $path root

foreach varName [array names traces] {
foreach node $traces($varName) {
set command [list OptionTree::_redraw_node $path $node 0]
uplevel #0 [list trace remove variable $varName write $command]
}
}

Widget::destroy $path#opttree
}


namespace eval ListBox {
Widget::define ListBox listbox DragSite DropSite DynamicHelp

namespace eval Item {
Widget::declare ListBox::Item {
{-indent     Int        0   0 "%d >= 0"}
{-text       String     ""  0}
{-font       String     ""  0}
{-foreground Color2     ""  0}
{-image      String     ""  0}
{-window     String     ""  0}
{-data       String     ""  0}

{-fg         Synonym    -foreground}
{-fill       Synonym    -foreground}
}
}

DynamicHelp::include ListBox::Item balloon

Widget::tkinclude ListBox canvas .c  remove {
-insertwidth -insertbackground -insertborderwidth -insertofftime
-insertontime -selectborderwidth -closeenough -confine -scrollregion
-xscrollincrement -yscrollincrement -width -height -bg -background
-fg -foreground -selectbackground -selectforeground
} initialize {
-relief sunken -borderwidth 2 -takefocus 1
-highlightthickness 0 -width 200
}

DragSite::include ListBox "LISTBOX_ITEM" 1
DropSite::include ListBox {
LISTBOX_ITEM {copy {} move {}}
}

Widget::declare ListBox {
{-deltax           Int        10                        0 "%d >= 0"}
{-deltay           Int        15                        0 "%d >= 0"}
{-padx             Int        20                        0 "%d >= 0"}
{-foreground       Color      "SystemButtonText"        0 listbox}
{-background       Color      "SystemWindow"            0 listbox}
{-selectbackground Color      "SystemHighlight"         0 listbox}
{-selectforeground Color      "SystemHighlightText"     0 listbox}
{-font             String     "TkTextFont"              0 listbox}
{-width            TkResource ""                        0 listbox}
{-height           TkResource ""                        0 listbox}
{-redraw           Boolean    1                         0}
{-multicolumn      Boolean    0                         0}
{-dropovermode     Flag       "wpi"                     0 "wpi"}
{-selectmode       Enum       none                      1
{none single multiple}}
{-dropcmd          String     "ListBox::_drag_and_drop" 0}
{-autofocus        Boolean    1                         1}
{-selectfill       Boolean    0                         1}

{-sortargs         String     ""                        0}
{-sortinsert       Boolean    0                         0}

{-fg               Synonym    -foreground}
{-bg               Synonym    -background}
}

bind ListBox <FocusIn>   [list after idle {BWidget::refocus %W %W.c}]
bind ListBox <Destroy>   [list ListBox::_destroy %W]
bind ListBox <Configure> [list ListBox::_resize  %W]
bind ListBoxFocus <1>    [list focus %W]
bind ListBox <Key-Up>    [list ListBox::_keyboard_navigation %W -1]
bind ListBox <Key-Down>  [list ListBox::_keyboard_navigation %W  1]

BWidget::bindMouseWheel ListBoxCanvas

variable _edit
}


proc ListBox::create { path args } {
Widget::initArgs ListBox $args maps

frame $path -class ListBox -bd 0 -highlightthickness 0 -relief flat  -takefocus 0

if {[package vsatisfies $::tk_version 8.4]} {
$path configure -padx 0 -pady 0
}

Widget::initFromODB ListBox $path $maps(ListBox)

Widget::getVariable $path data

set data(nrows) -1

set data(items)    {}
set data(anchor)   ""
set data(selitems) {}

set data(upd,level)   0
set data(upd,afterid) ""
set data(upd,level)   0
set data(upd,delete)  {}

set data(dnd,scroll)   ""
set data(dnd,afterid)  ""
set data(dnd,item)     ""

eval [list canvas $path.c] $maps(.c) -xscrollincrement 8  -background [Widget::getoption $path -background]
pack $path.c -expand yes -fill both

DragSite::setdrag $path $path.c ListBox::_init_drag_cmd  [Widget::cget $path -dragendcmd] 1
DropSite::setdrop $path $path.c ListBox::_over_cmd ListBox::_drop_cmd 1

Widget::create ListBox $path

set w  [Widget::cget $path -width]
set h  [Widget::cget $path -height]
set dy [Widget::cget $path -deltay]
$path.c configure -width [expr {$w*8}] -height [expr {$h*$dy}]  -yscrollincrement $dy

set bindtags [bindtags $path.c]
set bindtags [linsert $bindtags 1 $path ListBoxCanvas]

if {[Widget::cget $path -autofocus]} {
lappend bindtags ListBoxFocus
}
bindtags $path.c $bindtags

bind $path.c <Key-Up>   {ListBox::_keyboard_navigation [winfo parent %W] -1}
bind $path.c <Key-Down> {ListBox::_keyboard_navigation [winfo parent %W] 1}

if {![string equal [Widget::getoption $path -selectmode] "none"]} {
set cmd ListBox::_multiple_select
$path bindText <Button-1>          [list $cmd $path none]
$path bindText <Shift-Button-1>    [list $cmd $path shift]
$path bindText <Control-Button-1>  [list $cmd $path control]

$path bindImage <Button-1>         [list $cmd $path none]
$path bindImage <Shift-Button-1>   [list $cmd $path shift]
$path bindImage <Control-Button-1> [list $cmd $path control]
}

return $path
}


proc ListBox::cget { path option } {
return [Widget::cget $path $option]
}


proc ListBox::configure { path args } {
set res [Widget::configure $path $args]

set chdy [Widget::hasChanged $path -deltay dy]

set ch1 [expr {$chdy
|| [Widget::hasChanged $path -padx val]
|| [Widget::hasChanged $path -font font]
|| [Widget::hasChanged $path -multicolumn val]
|| [Widget::hasChanged $path -foreground fg]}]

set ch2 [expr {[Widget::hasChanged $path -selectbackground val] |
[Widget::hasChanged $path -selectforeground val]}]

if {[Widget::hasChanged $path -height h]} {
$path.c configure -height [expr {$h*$dy}]
}

if {[Widget::hasChanged $path -width w]} {
$path.c configure -width [expr {$w*8}]
}

if {[Widget::hasChanged $path -background bg]} {
$path.c configure -background $bg
$path.c itemconfigure box -fill $bg
}

if {$chdy} {
$path.c configure -yscrollincrement $dy
}

if {$ch1} {
_redraw_idle $path 2
} elseif {$ch2} {
_redraw_idle $path 1
}

if {[Widget::hasChanged $path -redraw bool] && $bool} {
Widget::getVariable $path data
set lvl $data(upd,level)
set data(upd,level) 0
_redraw_idle $path $lvl
}

set force [Widget::hasChanged $path -dragendcmd dragend]
DragSite::setdrag $path $path.c ListBox::_init_drag_cmd $dragend $force
DropSite::setdrop $path $path.c ListBox::_over_cmd ListBox::_drop_cmd

return $res
}


proc ListBox::activate { path index } {

}


proc ListBox::insert { path index item args } {
Widget::getVariable $path data

set item [Widget::nextIndex $path $item]

if {[info exists data(item,$item)]} {
return -code error "item \"$item\" already exists"
}

Widget::init ListBox::Item $path.$item $args

if {[string equal $index "end"]} {
lappend data(items) $item
} else {
set data(items) [linsert $data(items) $index $item]
}

set data(item,$item) 0
set data(upd,create,$item) $item

if {[Widget::getoption $path -sortinsert]} {
ListBox::_sort_idle $path
} else {
ListBox::_redraw_idle $path 2
}

return $item
}

proc ListBox::multipleinsert { path index args } {
Widget::getVariable $path data


if {[llength $args] == 1} {
set args [lindex $args 0]
}

set count 0
foreach {item iargs} $args {
if { [lsearch -exact $data(items) $item] != -1 } {
return -code error "item \"$item\" already exists"
}

if {$count==0} {
Widget::init ListBox::Item $path.$item $iargs
set firstpath $path.$item
} else {
Widget::copyinit ListBox::Item $firstpath $path.$item $iargs
}

set data(items) [linsert $data(items) $index $item]
set data(upd,create,$item) $item

incr count
}

_redraw_idle $path 2
return $item
}


proc ListBox::itemcget { path item option } {
return [Widget::cget $path.$item $option]
}


proc ListBox::itemconfigure { path item args } {
Widget::getVariable $path data

if {![info exists data(item,$item)]} {
return -code error "item \"$item\" does not exist"
}

set oldind [Widget::getoption $path.$item -indent]

set res   [Widget::configure $path.$item $args]
set chind [Widget::hasChanged $path.$item -indent indent]
set chw   [Widget::hasChanged $path.$item -window win]
set chi   [Widget::hasChanged $path.$item -image  img]
set cht   [Widget::hasChanged $path.$item -text txt]
set chf   [Widget::hasChanged $path.$item -font fnt]
set chfg  [Widget::hasChanged $path.$item -foreground fg]
set idn   [lindex $data(item,$item) 0]

_set_help $path $item

if {![string length $idn]} {
_redraw_idle $path 2
return $res
}

set oldb   [$path.c bbox $idn]
set coords [$path.c coords $idn]
set padx   [Widget::getoption $path -padx]
set x0     [expr {[lindex $coords 0]-$padx-$oldind+$indent}]
set y0     [lindex $coords 1]

if {$chw || $chi} {
set idi  [$path.c find withtag i:$item]
set type [lindex [$path.c gettags $idi] 0]
if { [string length $win] } {
if { [string equal $type "win"] } {
$path.c itemconfigure $idi -window $win
} else {
$path.c delete $idi
$path.c create window $x0 $y0 -window $win -anchor w  -tags [list win i:$item]
}
} elseif { [string length $img] } {
if { [string equal $type "img"] } {
$path.c itemconfigure $idi -image $img
} else {
$path.c delete $idi
$path.c create image $x0 $y0 -image $img -anchor w  -tags [list img i:$item]
}
} else {
$path.c delete $idi
}
}

if {$cht || $chf || $chfg} {
set fnt [_getoption $path $item -font]
set fg  [_getoption $path $item -foreground]
$path.c itemconfigure $idn -text $txt -font $fnt -fill $fg
_redraw_idle $path 1
}

if {$chind} {
$path.c coords $idn [expr {$x0+$padx}] $y0
$path.c coords i:$item $x0 $y0
_redraw_idle $path 1
}

if {[Widget::getoption $path -multicolumn] && ($cht || $chf || $chind)} {
set bbox [$path.c bbox $idn]
if {[lindex $bbox 2] > [lindex $oldb 2]} {
_redraw_idle $path 2
}
}

return $res
}


proc ListBox::bindText { path event script } {
if {[string length $script]} {
set map    [list %W $path]
set script [string map $map $script]
append script " \[ListBox::_get_current [list $path]\]"
}
$path.c bind "click" $event $script
}


proc ListBox::bindImage { path event script } {
if {[string length $script]} {
set map    [list %W $path]
set script [string map $map $script]
append script " \[ListBox::_get_current [list $path]\]"
}
$path.c bind "img" $event $script
}


proc ListBox::delete { path args } {
Widget::getVariable $path data

foreach litems $args {
foreach item $litems {
if {[set idx [lsearch -exact $data(items) $item]] != -1} {
set data(items) [lreplace $data(items) $idx $idx]
Widget::destroy $path.$item 0
unset data(item,$item)
if {[info exists data(upd,create,$item)]} {
unset data(upd,create,$item)
} else {
lappend data(upd,delete) $item
}
}
}
}

set sel $data(selitems)
set data(selitems) {}
eval [list ListBox::selection $path set] $sel
_redraw_idle $path 2

return
}


proc ListBox::clear { path } {
eval [list ListBox::delete $path] [ListBox::items $path]
}


proc ListBox::move { path item index } {
Widget::getVariable $path data

if {![info exists data(item,$item)]} {
return -code error "item \"$item\" does not exist"
}

set idx [lsearch -exact $data(items) $item]
set data(items) [linsert [lreplace $data(items) $idx $idx] $index $item]

_redraw_idle $path 2
}


proc ListBox::reorder { path neworder } {
Widget::getVariable $path data

set data(items) [BWidget::lreorder $data(items) $neworder]
_redraw_idle $path 2
}


proc ListBox::selection { path cmd args } {
Widget::getVariable $path data

switch -- $cmd {
"add" {
foreach item $args {
if { [lsearch -exact $data(selitems) $item] == -1 } {
if { [lsearch -exact $data(items) $item] != -1 } {
lappend data(selitems) $item
}
}
}
}

"clear" {
set data(selitems) {}
}

"get" {
return $data(selitems)
}

"includes" {
return [expr {[lsearch -exact $data(selitems) $args] != -1}]
}

"range" {
foreach {item1 item2} $args {break}

if {![info exists data(item,$item1)]} {
return -code error "item \"$item1\" does not exist"
}

if {![info exists data(item,$item2)]} {
return -code error "item \"$item2\" does not exist"
}

set index1  [ListBox::index $path $item1]
set index2  [ListBox::index $path $item2]
set indexes [list $index1 $index2]
if {$index1 > $index2} {
set indexes [list $index2 $index1]
}

set data(selitems) [eval [list ListBox::items $path] $indexes]
}

"remove" {
foreach item $args {
if {[set idx [lsearch -exact $data(selitems) $item]] != -1} {
set data(selitems) [lreplace $data(selitems) $idx $idx]
}
}
}

"set" {
set data(selitems) {}
foreach item $args {
if { [lsearch -exact $data(selitems) $item] == -1 } {
if { [lsearch -exact $data(items) $item] != -1 } {
lappend data(selitems) $item
}
}
}
}

"toggle" {
foreach item $args {
if {[set idx [lsearch -exact $data(selitems) $item]] != -1} {
set data(selitems) [lreplace $data(selitems) $idx $idx]
} else {
lappend data(selitems) $item
}
}
}

default {
return
}
}

_redraw_idle $path 1
}


proc ListBox::exists { path item } {
Widget::getVariable $path data
return [info exists data(item,$item)]
}


proc ListBox::index { path item } {
Widget::getVariable $path data

switch -glob -- $item {
"active" {
return [ListBox::selection $path get]
}

"end" {
return [llength $data(items)]
}

"@*" {
return [ListBox::find $path $item]
}

default {
return [lsearch -exact $data(items) $item]
}
}
}


proc ListBox::find { path findInfo {confine ""} } {
Widget::getVariable $path data

if {[regexp -- {^@([0-9]+),([0-9]+)$} $findInfo match x y]} {
set x [$path.c canvasx $x]
set y [$path.c canvasy $y]
} elseif {[regexp -- {^[0-9]+$} $findInfo lineNumber]} {
set dy [Widget::cget $path -deltay]
set y  [expr {$dy*($lineNumber+0.5)}]
set confine ""
} else {
return -code error "invalid find spec \"$findInfo\""
}

set found 0
set xi    0
foreach xs $data(xlist) {
if {$x <= $xs} {
foreach id [$path.c find overlapping $xi $y $xs $y] {
set ltags [$path.c gettags $id]
set item  [lindex $ltags 0]
if { [string equal $item "item"] ||
[string equal $item "img"]  ||
[string equal $item "win"] } {
set item [string range [lindex $ltags 1] 2 end]
set found 1
break
}
}
break
}
set  xi  $xs
}

if {$found} {
if {[string equal $confine "confine"]} {
set xi [expr {[lindex [$path.c coords n:$item] 0]-[Widget::getoption $path -padx]}]
set xs [lindex [$path.c bbox n:$item] 2]
if {$x >= $xi && $x <= $xs} {
return $item
}
} else {
return $item
}
}
return ""
}


proc ListBox::item { path first {last ""} } {
Widget::getVariable $path data

if { ![string length $last] } {
return [lindex $data(items) $first]
} else {
return [lrange $data(items) $first $last]
}
}


proc ListBox::items { path {first ""} {last ""}} {
Widget::getVariable $path data
if {![string length $first]} { return $data(items) }
if {![string length $last]}  { return [lindex $data(items) $first] }
return [lrange $data(items) $first $last]
}


proc ListBox::see { path item } {
Widget::getVariable $path data

if {[Widget::getoption $path -redraw] && $data(upd,afterid) != ""} {
after cancel $data(upd,afterid)
_redraw_listbox $path
}
set idn [$path.c find withtag n:$item]
if {[string length $idn]} {
ListBox::_see $path $idn right
ListBox::_see $path $idn left
}
}


proc ListBox::edit { path item text {verifycmd ""} {clickres 0} {select 1}} {
variable _edit
Widget::getVariable $path data

if { [Widget::getoption $path -redraw] && $data(upd,afterid) != "" } {
after cancel $data(upd,afterid)
_redraw_listbox $path
}
set idn [$path.c find withtag n:$item]
if { $idn != "" } {
ListBox::_see $path $idn right
ListBox::_see $path $idn left

set oldfg  [$path.c itemcget $idn -fill]
set sbg    [Widget::cget $path -selectbackground]
set coords [$path.c coords $idn]
set x      [lindex $coords 0]
set y      [lindex $coords 1]
set ht     [$path.c cget -highlightthickness]
set bd     [expr {[$path.c cget -borderwidth] + $ht}]
set w      [expr {[winfo width $path] - 2 * $bd}]
set wmax   [expr {[$path.c canvasx $w] - $x}]

$path.c itemconfigure $idn    -fill [Widget::cget $path -background]
$path.c itemconfigure s:$item -fill {} -outline {}

set _edit(text) $text
set _edit(wait) 0

set frame  [frame $path.edit  -relief flat -borderwidth 0 -highlightthickness 0  -background [Widget::cget $path -background]]

set ent    [entry $frame.edit  -width              0      -relief             solid  -borderwidth        1      -highlightthickness 0      -foreground         [_getoption $path $item -foreground]  -background         [Widget::cget $path -background]  -selectforeground   [Widget::cget $path -selectforeground]  -selectbackground   $sbg   -font               [_getoption $path $item -font]  -textvariable       ListBox::_edit(text)]
pack $ent -ipadx 8 -anchor w

set idw [$path.c create window $x $y -window $frame -anchor w]
trace variable ListBox::_edit(text) w  [list ListBox::_update_edit_size $path $ent $idw $wmax]
tkwait visibility $ent
grab  $frame
BWidget::focus set $ent
_update_edit_size $path $ent $idw $wmax
update

if {$select} {
$ent selection range 0 end
$ent icursor end
$ent xview end
}

bindtags $ent [list $ent Entry]
bind $ent <Escape> {set ListBox::_edit(wait) 0}
bind $ent <Return> {set ListBox::_edit(wait) 1}

if {$clickres == 0 || $clickres == 1} {
bind $frame <Button>  [list set ListBox::_edit(wait) $clickres]
}

set ok 0
while {!$ok} {
tkwait variable ListBox::_edit(wait)
if { !$_edit(wait) || [llength $verifycmd]==0 ||
[uplevel \#0 $verifycmd [list $_edit(text)]] } {
set ok 1
}
}

trace vdelete ListBox::_edit(text) w  [list ListBox::_update_edit_size $path $ent $idw $wmax]
grab release $frame
BWidget::focus release $ent
destroy $frame
$path.c delete $idw
$path.c itemconfigure $idn    -fill $oldfg
$path.c itemconfigure s:$item -fill $sbg -outline $sbg

if {$_edit(wait)} {
return $_edit(text)
}
}
}


proc ListBox::xview { path args } {
return [eval [linsert $args 0 $path.c xview]]
}


proc ListBox::yview { path args } {
return [eval [linsert $args 0 $path.c yview]]
}


proc ListBox::getcanvas { path } {
return $path.c
}


proc ListBox::curselection { path } {
return [$path selection get]
}


proc ListBox::sort { path } {
Widget::getVariable $path data

foreach item $data(items) {
lappend list [list [Widget::getoption $path.$item -text] $item]
}

set data(items) [list]
foreach pair [eval lsort [Widget::getoption $path -sortargs] [list $list]] {
lappend data(items) [lindex $pair 1]
}

if {[info exists data(sort,afterid)]} {
unset data(sort,afterid)
}

_redraw_idle $path 2
}


proc ListBox::_sort_idle { path } {
Widget::getVariable $path data

if {![info exists data(sort,afterid)]} {
set data(sort,afterid) [after idle [list ListBox::sort $path]]
}
}


proc ListBox::_update_edit_size { path entry idw wmax args } {
set entw [winfo reqwidth $entry]
if { $entw >= $wmax } {
$path.c itemconfigure $idw -width $wmax
} else {
$path.c itemconfigure $idw -width 0
}
}


proc ListBox::_getoption { path item option } {
set value [Widget::getoption $path.$item $option]
if {![string length $value]} {
set value [Widget::getoption $path $option]
}
return $value
}


proc ListBox::_destroy { path } {
Widget::getVariable $path data

if {$data(upd,afterid) != ""} {
after cancel $data(upd,afterid)
}

if {$data(dnd,afterid) != ""} {
after cancel $data(dnd,afterid)
}

foreach item $data(items) {
Widget::destroy $path.$item 0
}

Widget::destroy $path
}


proc ListBox::_see { path idn side } {
set bbox [$path.c bbox $idn]
set scrl [$path.c cget -scrollregion]

set ymax [lindex $scrl 3]
set dy   [$path.c cget -yscrollincrement]
set yv   [$path.c yview]
set yv0  [expr {round([lindex $yv 0]*$ymax/$dy)}]
set yv1  [expr {round([lindex $yv 1]*$ymax/$dy)}]
set y    [expr {int([lindex [$path.c coords $idn] 1]/$dy)}]
if { $y < $yv0 } {
$path.c yview scroll [expr {$y-$yv0}] units
} elseif { $y >= $yv1 } {
$path.c yview scroll [expr {$y-$yv1+1}] units
}

set xmax [lindex $scrl 2]
set dx   [$path.c cget -xscrollincrement]
set xv   [$path.c xview]
if { [string equal $side "right"] } {
set xv1 [expr {round([lindex $xv 1]*$xmax/$dx)}]
set x1  [expr {int([lindex $bbox 2]/$dx)}]
if { $x1 >= $xv1 } {
$path.c xview scroll [expr {$x1-$xv1+1}] units
}
} else {
set xv0 [expr {round([lindex $xv 0]*$xmax/$dx)}]
set x0  [expr {int([lindex $bbox 0]/$dx)}]
if { $x0 < $xv0 } {
$path.c xview scroll [expr {$x0-$xv0}] units
}
}
}


proc ListBox::_update_scrollregion { path } {
set bd   [$path.c cget -borderwidth]
set ht   [$path.c cget -highlightthickness]
set bd   [expr {2*($bd + $ht)}]
set w    [expr {[winfo width  $path] - $bd}]
set h    [expr {[winfo height $path] - $bd}]
set xinc [$path.c cget -xscrollincrement]
set yinc [$path.c cget -yscrollincrement]
set bbox [$path.c bbox item win img]
if { [llength $bbox] } {
set xs [lindex $bbox 2]
set ys [lindex $bbox 3]

if { $w < $xs } {
set w [expr {int($xs)}]
if { [set r [expr {$w % $xinc}]] } {
set w [expr {$w+$xinc-$r}]
}
}
if { $h < $ys } {
set h [expr {int($ys)}]
if { [set r [expr {$h % $yinc}]] } {
set h [expr {$h+$yinc-$r}]
}
}
}

$path.c configure -scrollregion [list 0 0 $w $h]
}


proc ListBox::_update_select_fill { path } {
Widget::getVariable $path data

set width [winfo width $path]

foreach item $data(items) {
set bbox [$path.c bbox [lindex $data(item,$item) 0]]
set bbox [list 0 [lindex $bbox 1] $width [lindex $bbox 3]]
$path.c coords [lindex $data(item,$item) 2] $bbox
}

_redraw_selection $path
}


proc ListBox::_draw_item {path item x0 x1 y bg selfill multi ww} {
set indent  [Widget::getoption $path.$item -indent]
set i [$path.c create text [expr {$x1+$indent}] $y  -text   [Widget::getoption $path.$item -text]  -fill   [_getoption        $path $item -foreground]  -font   [_getoption        $path $item -font]  -anchor w  -tags   [list item n:$item click]]

lappend citems $i

if { [set win [Widget::getoption $path.$item -window]] != "" } {
set i [$path.c create window [expr {$x0+$indent}] $y  -window $win -anchor w -tags [list win i:$item]]
lappend citems $i
} elseif { [set img [Widget::getoption $path.$item -image]] != "" } {
set i [$path.c create image [expr {$x0+$indent}] $y  -image $img -anchor w -tags [list img i:$item]]
lappend citems $i
} else {
lappend citems ""
}


if {$selfill && !$multi} {
set bbox  [$path.c bbox n:$item]
set bbox  [list 0 [lindex $bbox 1] $ww [lindex $bbox 3]]
set tags  [list box b:$item click]
set i [$path.c create rect $bbox -fill $bg -width 0 -tags $tags]
$path.c lower $i
lappend citems $i
} else {
lappend citems ""
}

Widget::getVariable $path data
set data(item,$item) $citems

_set_help $path $item
}


proc ListBox::_redraw_items { path } {
Widget::getVariable $path data

set cursor [$path.c cget -cursor]
$path.c configure -cursor watch
update idletasks ; # make sure watch cursor is reflected

set dx    [Widget::getoption $path -deltax]
set dy    [Widget::cget $path -deltay]
set padx  [Widget::getoption $path -padx]
set y0    [expr {$dy/2}]
set x0    4
set x1    [expr {$x0+$padx}]
set drawn [list]
set nitems 0
set data(xlist) [list]

if {[Widget::getoption $path -multicolumn]} {
set nrows $data(nrows)
} else {
set nrows [llength $data(items)]
}

foreach item $data(upd,delete) {
$path.c delete i:$item n:$item s:$item b:$item
}

set bg      [Widget::cget $path -background]
set selfill [Widget::cget $path -selectfill]
set multi   [Widget::cget $path -multicolumn]
set ww      [winfo width $path]
foreach item $data(items) {
if {[info exists data(upd,create,$item)]} {
_draw_item $path $item $x0 $x1 $y0 $bg $selfill $multi $ww
set nitem  [lindex $data(item,$item) 0]
set iitem  [lindex $data(item,$item) 1]
set bitem  [lindex $data(item,$item) 2]
unset data(upd,create,$item)
} else {
set nitem  [lindex $data(item,$item) 0]
set iitem  [lindex $data(item,$item) 1]
set bitem  [lindex $data(item,$item) 2]
set indent [Widget::getoption $path.$item -indent]
$path.c coords $nitem [list [expr {$x1+$indent}] $y0]
if {[string length $iitem]} {
$path.c coords $iitem [list [expr {$x0+$indent}] $y0]
}

$path.c itemconfigure $nitem  -font [ListBox::_getoption $path $item -font]  -fill [ListBox::_getoption $path $item -foreground]
}

incr y0 $dy
incr nitems
if {$selfill} {
lappend drawn $bitem
} else {
lappend drawn $nitem
}

if {$nitems == $nrows} {
set y0     [expr {$dy/2}]
set bbox   [eval [linsert $drawn 0 $path.c bbox]]
set drawn  [list]
set x0     [expr {[lindex $bbox 2]+$dx}]
set x1     [expr {$x0+$padx}]
set nitems 0
lappend data(xlist) [lindex $bbox 2]
}
}

if {$nitems && $nitems < $nrows} {
set bbox  [eval [linsert $drawn 0 $path.c bbox]]
lappend data(xlist) [lindex $bbox 2]
}

set data(upd,delete) {}
$path.c configure -cursor $cursor
}


proc ListBox::_redraw_selection { path } {
Widget::getVariable $path data

set selbg   [Widget::cget $path -selectbackground]
set selfg   [Widget::cget $path -selectforeground]
set selfill [Widget::getoption $path -selectfill]
set multi   [Widget::getoption $path -multicolumn]
foreach id [$path.c find withtag sel] {
set item [string range [lindex [$path.c gettags $id] 1] 2 end]
$path.c itemconfigure [lindex $data(item,$item) 0]  -fill [_getoption $path $item -foreground]
}
$path.c delete sel
if {$selfill && !$multi} {
set width [winfo width $path]
}
foreach item $data(selitems) {
set nitem [lindex $data(item,$item) 0]
set bbox [$path.c bbox $nitem]

if {[llength $bbox]} {
if {$selfill && !$multi} {
set bbox [list 0 [lindex $bbox 1] $width [lindex $bbox 3]]
}
set tags [list sel s:$item click]
set id [$path.c create rectangle $bbox  -fill $selbg -outline $selbg -tags $tags]
$path.c itemconfigure $nitem -fill $selfg
$path.c lower $id
$path.c lower b:$item
}
}
}


proc ListBox::_redraw_listbox { path } {
Widget::getVariable $path data

if {[Widget::getoption $path -redraw]} {
if {$data(upd,level) == 2} {
_redraw_items $path
}

_redraw_selection $path
_update_scrollregion $path

if {[Widget::cget $path -selectfill]} {
_update_select_fill $path
}

set data(upd,level)   0
set data(upd,afterid) ""
}
}


proc ListBox::_redraw_idle { path level } {
Widget::getVariable $path data

if {$data(nrows) != -1} {
if {[Widget::getoption $path -redraw] && $data(upd,afterid) == ""} {
set data(upd,afterid)  [after idle [list ListBox::_redraw_listbox $path]]
}
}
if {$level > $data(upd,level)} {
set data(upd,level) $level
}
}


proc ListBox::_resize { path } {
Widget::getVariable $path data

if {[Widget::getoption $path -multicolumn]} {
set bd    [$path.c cget -borderwidth]
set ht    [$path.c cget -highlightthickness]
set bd    [expr {$bd + $ht}]
set h     [expr {[winfo height $path] - 2*$bd}]
set nrows [expr {$h/[$path.c cget -yscrollincrement]}]
if {$nrows == 0} {
set nrows 1
}

if {$nrows != $data(nrows)} {
set data(nrows) $nrows
_redraw_idle $path 2
} else {
_update_scrollregion $path
}
} elseif {$data(nrows) == -1} {
set data(nrows) 0
ListBox::_redraw_listbox $path
if {[Widget::cget $path -selectfill]} {
_update_select_fill $path
}
} else {
if {[Widget::cget $path -selectfill]} {
_update_select_fill $path
}

_update_scrollregion $path
}
}


proc ListBox::_init_drag_cmd { path X Y top } {
set path [winfo parent $path]
set ltags [$path.c gettags current]
set item  [lindex $ltags 0]
if {[string equal $item "item"]
|| [string equal $item "img"]
|| [string equal $item "win"]} {
set item [string range [lindex $ltags 1] 2 end]
if {[llength [set cmd [Widget::getoption $path -draginitcmd]]]} {
return [uplevel \#0 $cmd [list $path $item $top]]
}
if { [set type [Widget::getoption $path -dragtype]] == "" } {
set type "LISTBOX_ITEM"
}
if { [set img [Widget::getoption $path.$item -image]] != "" } {
pack [label $top.l -image $img -padx 0 -pady 0]
}
return [list $type {copy move link} $item]
}
return {}
}


proc ListBox::_drop_cmd { path source X Y op type dnddata } {
set path [winfo parent $path]
Widget::getVariable $path data

if { [string length $data(dnd,afterid)] } {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}
$path.c delete drop
set data(dnd,scroll) ""
if { [llength $data(dnd,item)] || ![llength $data(items)] } {
if {[llength [set cmd [Widget::getoption $path -dropcmd]]]} {
return [uplevel \#0 $cmd [list $path $source $data(dnd,item) $op $type $dnddata]]
}
}
return 0
}


proc ListBox::_over_cmd { path source event X Y op type dnddata } {
set path [winfo parent $path]
Widget::getVariable $path data

if { [string equal $event "leave"] } {
$path.c delete drop
if { [string length $data(dnd,afterid)] } {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}
set data(dnd,scroll) ""
return 0
}

if { [string equal $event "enter"] } {
set mode [Widget::getoption $path -dropovermode]
set data(dnd,mode) 0
foreach c {w p i} {
set data(dnd,mode) [expr {($data(dnd,mode) << 1) | ([string first $c $mode] != -1)}]
}
}

set x [expr {$X-[winfo rootx $path]}]
set y [expr {$Y-[winfo rooty $path]}]
$path.c delete drop
set data(dnd,item) ""

if { $data(dnd,mode) != 4 && [_auto_scroll $path $x $y] != "" } {
return 2
}

if { $data(dnd,mode) & 4 } {
set target [list widget]
set vmode  4
} else {
set target [list ""]
set vmode  0
}
if { ($data(dnd,mode) & 2) && ![llength $data(items)] } {
lappend target "" 0
set vmode [expr {$vmode | 2}]
}

if { ($data(dnd,mode) & 3) && [llength $data(items)]} {
set len  [llength $data(items)]
set xc   [$path.c canvasx $x]
set yc   [$path.c canvasy $y]
set dy   [$path.c cget -yscrollincrement]
set line [expr {int($yc/$dy)}]
set yi   [expr {$line*$dy}]
set ys   [expr {$yi+$dy}]
set xi   0
set pos  $line
if { [Widget::getoption $path -multicolumn] } {
set nrows $data(nrows)
} else {
set nrows $len
}
if { $line < $nrows } {
foreach xs $data(xlist) {
if { $xc <= $xs } {
break
}
set  xi  $xs
incr pos $nrows
}
if { $pos < $len } {
set item [lindex $data(items) $pos]
set xi   [expr {[lindex [$path.c coords n:$item] 0]-[Widget::getoption $path -padx]-1}]
if { $data(dnd,mode) & 1 } {
lappend target $item
set vmode [expr {$vmode | 1}]
} else {
lappend target ""
}

if { $data(dnd,mode) & 2 } {
if { $yc >= $yi+$dy/2 } {
incr pos
set yl $ys
} else {
set yl $yi
}
lappend target $pos
set vmode [expr {$vmode | 2}]
} else {
lappend target ""
}
} else {
lappend target "" ""
}
} else {
lappend target "" ""
}

if { ($vmode & 3) == 3 } {
if { $yc-$yi <= 3 || $ys-$yc <= 3 } {
lappend target "position"
} else {
lappend target "item"
}
}
}

if {$vmode && [llength [set cmd [Widget::getoption $path -dropovercmd]]]} {
set res   [uplevel \#0 $cmd [list $source $target $op $type $dnddata]]
set code  [lindex $res 0]
set vmode 0
if {$code & 1} {
switch -exact -- [lindex $res 1] {
item     {set vmode 1}
position {set vmode 2}
widget   {set vmode 4}
}
}
} else {
if { ($vmode & 3) == 3 } {
if { [string equal [lindex $target 3] "position"] } {
set vmode [expr {$vmode & ~1}]
} else {
set vmode [expr {$vmode & ~2}]
}
}

if { $data(dnd,mode) == 4 || $data(dnd,mode) == 0 } {
set code 1
} else {
set code 3
}
}

if {[llength $data(items)]} {
if { $vmode & 1 } {
set data(dnd,item) [list "item" [lindex $target 1]]
if {[Widget::getoption $path -selectfill]} { incr xs -8 }
$path.c create rectangle $xi $yi $xs $ys -tags drop
} elseif { $vmode & 2 } {
set data(dnd,item) [concat "position" [lindex $target 2]]
$path.c create line $xi $yl $xs $yl -tags drop
} elseif { $vmode & 4 } {
set data(dnd,item) [list "widget"]
} else {
set code [expr {$code & 2}]
}
}

if { $code & 1 } {
DropSite::setcursor based_arrow_down
} else {
DropSite::setcursor dot
}
return $code
}


proc ListBox::_auto_scroll { path x y } {
Widget::getVariable $path data

set xmax   [winfo width  $path]
set ymax   [winfo height $path]
set scroll {}
if { $y <= 6 } {
if { [lindex [$path.c yview] 0] > 0 } {
set scroll [list yview -1]
DropSite::setcursor sb_up_arrow
}
} elseif { $y >= $ymax-6 } {
if { [lindex [$path.c yview] 1] < 1 } {
set scroll [list yview 1]
DropSite::setcursor sb_down_arrow
}
} elseif { $x <= 6 } {
if { [lindex [$path.c xview] 0] > 0 } {
set scroll [list xview -1]
DropSite::setcursor sb_left_arrow
}
} elseif { $x >= $xmax-6 } {
if { [lindex [$path.c xview] 1] < 1 } {
set scroll [list xview 1]
DropSite::setcursor sb_right_arrow
}
}

if { [string length $data(dnd,afterid)] && ![string equal $data(dnd,scroll) $scroll] } {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}

set data(dnd,scroll) $scroll
if { [llength $scroll] && ![string length $data(dnd,afterid)] } {
set data(dnd,afterid) [after 200 [list ListBox::_scroll $path $scroll]]
}
return $data(dnd,afterid)

}

proc ListBox::_multiple_select { path mode item } {
Widget::getVariable $path data

if {![info exists data(item,$data(anchor))]} { set data(anchor) $item }

if {[string equal [Widget::getoption $path -selectmode] "single"]} {
set mode none
}

switch -exact -- $mode {
"none" {
_mouse_select $path set $item
set data(anchor) $item
}

"control" {
_mouse_select $path toggle $item
set data(anchor) $item
}

"shift" {
_mouse_select $path range $data(anchor) $item
}
}
}


proc ListBox::_scroll { path cmd dir } {
Widget::getVariable $path data

if { ($dir == -1 && [lindex [$path.c $cmd] 0] > 0) ||
($dir == 1  && [lindex [$path.c $cmd] 1] < 1) } {
$path $cmd scroll $dir units
set data(dnd,afterid)  [after 100 [list ListBox::_scroll $path $cmd $dir]]
} else {
set data(dnd,afterid) ""
DropSite::setcursor dot
}
}

proc ListBox::_set_help { path node } {
Widget::getVariable $path help

set item $path.$node
set opts [list -helptype -helptext -helpvar]
foreach {cty ctx cv} [eval [linsert $opts 0 Widget::hasChangedX $item]] break
set text [Widget::getoption $item -helptext]

if { (![info exists help($node)] && $text != "") || $cty || $ctx || $cv } {
set help($node) 1
set type [Widget::getoption $item -helptype]
switch $type {
balloon {
DynamicHelp::register $path.c balloon n:$node $text
DynamicHelp::register $path.c balloon i:$node $text
DynamicHelp::register $path.c balloon b:$node $text
}
variable {
set var [Widget::getoption $item -helpvar]
DynamicHelp::register $path.c variable n:$node $var $text
DynamicHelp::register $path.c variable i:$node $var $text
DynamicHelp::register $path.c variable b:$node $var $text
}
}
}
}

proc ListBox::_mouse_select { path cmd args } {
eval [linsert $args 0 selection $path $cmd]
switch -- $cmd {
"add" - "clear" - "remove" - "set" - "toggle" - "range" {
event generate $path <<ListboxSelect>>
}
}
}


proc ListBox::_get_current { path } {
set t [$path.c gettags current]
return [string range [lindex $t 1] 2 end]
}


proc ListBox::_drag_and_drop { path from endItem operation type startItem } {
if {[winfo parent $from] != $path} { return }

set place [lindex $endItem 0]
set i     [lindex $endItem 1]

switch -- $place {
"position" {
set idx $i
}

"item" {
set idx [$path index $i]
}

default {
return
}
}

if {$idx > [$path index $startItem]} { incr idx -1 }

if {[string equal $operation "copy"]} {
set options [Widget::options $path.$startItem]
eval [linsert $options 0 $path insert $idx $startItem\#auto]
} else {
$path move $startItem $idx
}
}


proc ListBox::_keyboard_navigation { path dir } {
Widget::getVariable $path data

set sel [$path index [lindex [$path selection get] end]]
if {$dir > 0} {
incr sel
if {$sel >= [llength $data(items)]} { return }
} else {
incr sel -1
if {$sel < 0} { return }
}
set item [lindex $data(items) $sel]
ListBox::see $path $item
_mouse_select $path set $item
}


namespace eval Separator {
Widget::define Separator separator

Widget::declare Separator {
{-background Color      "SystemButtonFace" 0}
{-cursor     String     ""         0}
{-relief     Enum       groove     0 {ridge groove}}
{-orient     Enum       horizontal 1 {horizontal vertical}}
{-bg         Synonym    -background}
}
Widget::addmap Separator "" :cmd { -background {} -cursor {} }

bind Separator <Destroy> [list Widget::destroy %W]
}


proc Separator::create { path args } {
Widget::initArgs Separator $args maps

eval [list frame $path -class Separator] $maps(:cmd)

Widget::initFromODB Separator $path $maps(Separator)

if {[string equal [Widget::cget $path -orient] "horizontal"]} {
$path configure -borderwidth 1 -height 2
} else {
$path configure -borderwidth 1 -width 2
}

if {[string equal [Widget::cget $path -relief] "groove"]} {
$path configure -relief sunken
} else {
$path configure -relief raised
}

return [Widget::create Separator $path]
}


proc Separator::configure { path args } {
set res [Widget::configure $path $args]

if { [Widget::hasChanged $path -relief relief] } {
if { $relief == "groove" } {
$path:cmd configure -relief sunken
} else {
$path:cmd configure -relief raised
}
}

return $res
}


proc Separator::cget { path option } {
return [Widget::cget $path $option]
}


namespace eval TTKButton {
Widget::define TTKButton button DynamicHelp

Widget::tkinclude TTKButton ttk::button :cmd  remove { -class }

Widget::declare TTKButton {
{-name                 String     ""      0 }
{-repeatdelay          Int        0       0 "%d >= 0" }
{-repeatinterval       Int        0       0 "%d >= 0" }
}

if 0 {
Widget::declare Button {
{-name                 String     ""      0 }
{-text                 String     ""      0 }
{-textvariable         String     ""      0 }
{-underline            Int        -1      0 "%d >= -1" }
{-armcommand           String     ""      0 }
{-disarmcommand        String     ""      0 }
{-command              String     ""      0 }
{-state                TkResource ""      0 button }
{-repeatdelay          Int        0       0 "%d >= 0" }
{-repeatinterval       Int        0       0 "%d >= 0" }
{-relief               Enum       raised  0
{raised sunken flat ridge solid groove link}}
{-image                String     ""      0 }
{-activeimage          String     ""      0 }
{-pressedimage         String     ""      0 }
{-disabledimage        String     ""      0 }
}

Widget::syncoptions Button "" :cmd { -text {} -underline {} }
}

DynamicHelp::include TTKButton balloon

variable _current ""
variable _pressed ""

}


proc TTKButton::create { path args } {
foreach {opt val} $args {
if {[Widget::optionExists TTKButton $opt]} {
lappend opts $opt $val
}
}

Widget::initArgs TTKButton $opts maps

eval [list ttk::button $path] $maps(:cmd)

Widget::initFromODB TTKButton $path $maps(TTKButton)

set var [$path cget -textvariable]
if {![string length $var]} {
set desc [BWidget::getname [Widget::getoption $path -name]]
if {[llength $desc]} {
set text  [lindex $desc 0]
set under [lindex $desc 1]
$path configure -text $text -underline $under
} else {
set text  [$path cget -text]
set under [$path cget -underline]
}
} else {
set text  ""
set under -1
$path configure -underline $under
}

set top [winfo toplevel $path]
bindtags $path [list $path TButton TTKButton $top all]

DynamicHelp::sethelp $path $path 1

return [Widget::create TTKButton $path]
}


proc TTKButton::configure { path args } {
set oldunder [$path:cmd cget -underline]
if {$oldunder != -1} {
set text      [$path:cmd cget -text]
set oldaccel1 [string tolower [string index $text $oldunder]]
set oldaccel2 [string toupper $oldaccel1]
} else {
set oldaccel1 ""
set oldaccel2 ""
}
set res [Widget::configure $path $args]

if {[Widget::anyChangedX $path -textvariable -name -text -underline]} {
set var   [Widget::cget $path -textvariable]
set text  [Widget::cget $path -text]
set under [Widget::cget $path -underline]

if {![string length $var]} {
set desc [BWidget::getname [Widget::cget $path -name]]
if {[llength $desc]} {
set text  [lindex $desc 0]
set under [lindex $desc 1]
}
} else {
set under -1
set text  ""
}
set top [winfo toplevel $path]
if {![string equal $oldaccel1 ""]} {
bind $top <Alt-$oldaccel1> {}
bind $top <Alt-$oldaccel2> {}
}
set accel1 [string tolower [string index $text $under]]
set accel2 [string toupper $accel1]
if {![string equal $accel1 ""]} {
bind $top <Alt-$accel1> [list TTKButton::invoke $path]
bind $top <Alt-$accel2> [list TTKButton::invoke $path]
}
$path:cmd configure -text $text -underline $under -textvariable $var
}

DynamicHelp::sethelp $path $path

return $res
}


proc TTKButton::cget { path option } {
Widget::cget $path $option
}


proc TTKButton::state { path args } {
return [uplevel #0 [list $path:cmd state] $args]
}


proc TTKButton::instate { path args } {
return [uplevel #0 [list $path:cmd instate] $args]
}


proc TTKButton::invoke { path } {
return [uplevel #0 [list $path:cmd invoke]]
}


proc TTKButton::_enter { path } {
variable _current
variable _pressed

set _current $path
if {![string equal [Widget::cget $path -state] "disabled"]} {
$path:cmd configure -state active
if {[string equal $_pressed $path]} {
$path:cmd configure -relief sunken
} elseif {[string equal [Widget::cget $path -relief] "link"]} {
$path:cmd configure -relief raised
}

set image [Widget::cget $path -activeimage]
if {[string equal $_pressed $path]} {
set pressedimage [Widget::cget $path -pressedimage]
if {![string equal $pressedimage ""]} { set image $pressedimage }
}
if {![string equal $image ""]} { $path:cmd configure -image $image }
}
}


proc TTKButton::_leave { path } {
variable _current
variable _pressed

set _current ""
if {[string equal [Widget::cget $path -state] "disabled"]} {
set dimg [Widget::cget $path -disabledimage]
if {![string equal $dimg ""]} { $path:cmd configure -state normal }
} else {
set relief [Widget::cget $path -relief]
if {[string equal $_pressed $path]} {
if {[string equal $relief "link"]} {
set relief raised
}
} elseif {[string equal $relief "link"]} {
set relief flat
}

$path:cmd configure  -relief $relief  -state  [Widget::cget $path -state]  -image  [Widget::cget $path -image]
}
}


proc TTKButton::_press { path } {
variable _pressed

if {![string equal [Widget::cget $path -state] "disabled"]} {
set _pressed $path
$path:cmd configure -relief sunken

set img [Widget::cget $path -pressedimage]
if {![string equal $img ""]} { $path:cmd configure -image $img }

set cmd [Widget::getoption $path -armcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
set repeatdelay [Widget::getoption $path -repeatdelay]
set repeatint [Widget::getoption $path -repeatinterval]
if {$repeatdelay > 0} {
after $repeatdelay [list TTKButton::_repeat $path]
} elseif {$repeatint > 0} {
after $repeatint [list TTKButton::_repeat $path]
}
}
}
}


proc TTKButton::_release { path } {
variable _current
variable _pressed

if {[string equal $_pressed $path]} {
set pressed $_pressed
set _pressed ""
set relief [Widget::getoption $path -relief]
after cancel [list TTKButton::_repeat $path]

if {[string equal $relief "link"]} {
set relief raised
}

set image [Widget::cget $path -image]
if {[string equal $pressed $path]} {
set activeimage [Widget::cget $path -activeimage]
if {![string equal $activeimage ""]} { set image $activeimage }
}

$path:cmd configure -relief $relief -image $image

set cmd [Widget::getoption $path -disarmcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
}

if {[string equal $_current $path] &&
![string equal [Widget::cget $path -state] "disabled"] &&  [set cmd [Widget::getoption $path -command]] != ""} {
uplevel \#0 $cmd
}
}
}


proc TTKButton::_repeat { path } {
variable _current
variable _pressed

if {$_current == $path && $_pressed == $path &&
![string equal [Widget::cget $path -state] "disabled"] &&
[set cmd [Widget::getoption $path -armcommand]] != ""} {
uplevel \#0 $cmd
}
if { $_pressed == $path &&
([set delay [Widget::getoption $path -repeatinterval]] >0 ||
[set delay [Widget::getoption $path -repeatdelay]] > 0) } {
after $delay [list TTKButton::_repeat $path]
}
}


namespace eval Button {
if {[BWidget::using ttk]} {
Widget::define Button button TTKButton DynamicHelp
} else {
Widget::define Button button DynamicHelp
}

set remove [list -command -relief -text -textvariable  -underline -image -state]
if {[info tclversion] > 8.3} {
lappend remove -repeatdelay -repeatinterval
}

Widget::tkinclude Button button :cmd remove $remove

Widget::declare Button {
{-name                 String     ""      0 }
{-text                 String     ""      0 }
{-textvariable         String     ""      0 }
{-underline            Int        -1      0 "%d >= -1" }
{-armcommand           String     ""      0 }
{-disarmcommand        String     ""      0 }
{-command              String     ""      0 }
{-state                TkResource ""      0 button }
{-repeatdelay          Int        0       0 "%d >= 0" }
{-repeatinterval       Int        0       0 "%d >= 0" }
{-relief               Enum       raised  0
{raised sunken flat ridge solid groove link}}
{-image                String     ""      0 }
{-activeimage          String     ""      0 }
{-pressedimage         String     ""      0 }
{-disabledimage        String     ""      0 }
}

Widget::addmap Button "" :cmd { -text {} -underline {} }

DynamicHelp::include Button balloon

variable _current ""
variable _pressed ""

bind BwButton <Enter>           {Button::_enter %W}
bind BwButton <Leave>           {Button::_leave %W}
bind BwButton <ButtonPress-1>   {Button::_press %W}
bind BwButton <ButtonRelease-1> {Button::_release %W}
bind BwButton <Key-space>       {Button::invoke %W; break}
bind BwButton <Return>          {Button::invoke %W; break}
bind BwButton <Destroy>         {Widget::destroy %W}
}


proc Button::create { path args } {
if {[BWidget::using ttk]} {
return [eval [list TTKButton::create $path] $args]
}

Widget::initArgs Button $args maps

eval [list button $path] $maps(:cmd)

Widget::initFromODB Button $path $maps(Button)

set var [$path cget -textvariable]
if {![string length $var]} {
set desc [BWidget::getname [Widget::getoption $path -name]]
if {[llength $desc]} {
set text  [lindex $desc 0]
set under [lindex $desc 1]
$path configure -text $text -underline $under
} else {
set text  [$path cget -text]
set under [$path cget -underline]
}
} else {
set text  ""
set under -1
$path configure -underline $under
}

set relief [Widget::getoption $path -relief]
if {[string equal $relief "link"]} { set relief flat }

set opts [list]
lappend opts -text $text -underline $under -textvariable $var
lappend opts -relief $relief -state [Widget::cget $path -state]
lappend opts -image [Widget::cget $path -image]

eval [list $path configure] $opts

set top [winfo toplevel $path]
bindtags $path [list $path BwButton $top all]

set accel1 [string tolower [string index $text $under]]
set accel2 [string toupper $accel1]
if {[string length $accel1]} {
bind $top <Alt-$accel1> [list Button::invoke $path]
bind $top <Alt-$accel2> [list Button::invoke $path]
}

DynamicHelp::sethelp $path $path 1

return [Widget::create Button $path]
}


proc Button::configure { path args } {
set oldunder [$path:cmd cget -underline]
if {$oldunder != -1} {
set text      [$path:cmd cget -text]
set oldaccel1 [string tolower [string index $text $oldunder]]
set oldaccel2 [string toupper $oldaccel1]
} else {
set oldaccel1 ""
set oldaccel2 ""
}
set res [Widget::configure $path $args]

if {[Widget::anyChangedX $path -relief -state]} {
set state  [Widget::cget $path -state]
set relief [Widget::cget $path -relief]
if {[string equal $relief "link"]} {
if {[string equal $state "active"]} {
set relief "raised"
} else {
set relief "flat"
}
}

$path:cmd configure -relief $relief

set dimg [Widget::cget $path -disabledimage]
if {[string equal $state "disabled"] && ![string equal $dimg ""]} {
$path:cmd configure -image $dimg
} else {
$path:cmd configure  -state      $state  -image      [Widget::cget $path -image]  -background [Widget::cget $path -background]  -foreground [Widget::cget $path -foreground]
}
}

if {[Widget::hasChanged $path -image image]} {
$path:cmd configure -image $image
}

if {[Widget::anyChangedX $path -textvariable -name -text -underline]} {
set var   [Widget::cget $path -textvariable]
set text  [Widget::cget $path -text]
set under [Widget::cget $path -underline]

if {![string length $var]} {
set desc [BWidget::getname [Widget::cget $path -name]]
if {[llength $desc]} {
set text  [lindex $desc 0]
set under [lindex $desc 1]
}
} else {
set under -1
set text  ""
}
set top [winfo toplevel $path]
if {![string equal $oldaccel1 ""]} {
bind $top <Alt-$oldaccel1> {}
bind $top <Alt-$oldaccel2> {}
}
set accel1 [string tolower [string index $text $under]]
set accel2 [string toupper $accel1]
if {![string equal $accel1 ""]} {
bind $top <Alt-$accel1> [list Button::invoke $path]
bind $top <Alt-$accel2> [list Button::invoke $path]
}
$path:cmd configure -text $text -underline $under -textvariable $var
}

DynamicHelp::sethelp $path $path

return $res
}


proc Button::cget { path option } {
Widget::cget $path $option
}


proc Button::invoke { path } {
if {[string equal [Widget::cget $path -state] "disabled"]} { return }

$path:cmd configure -state active -relief sunken
update idletasks

set cmd [Widget::getoption $path -armcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
}
after 100
set relief [Widget::getoption $path -relief]
if {[string equal $relief "link"]} {
set relief flat
}
$path:cmd configure  -state  [Widget::getoption $path -state]  -relief $relief
set cmd [Widget::getoption $path -disarmcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
}
set cmd [Widget::getoption $path -command]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
}
}


proc Button::_enter { path } {
variable _current
variable _pressed

set _current $path
if {![string equal [Widget::cget $path -state] "disabled"]} {
$path:cmd configure -state active
if {[string equal $_pressed $path]} {
$path:cmd configure -relief sunken
} elseif {[string equal [Widget::cget $path -relief] "link"]} {
$path:cmd configure -relief raised
}

set image [Widget::cget $path -activeimage]
if {[string equal $_pressed $path]} {
set pressedimage [Widget::cget $path -pressedimage]
if {![string equal $pressedimage ""]} { set image $pressedimage }
}
if {![string equal $image ""]} { $path:cmd configure -image $image }
}
}


proc Button::_leave { path } {
variable _current
variable _pressed

set _current ""
if {[string equal [Widget::cget $path -state] "disabled"]} {
set dimg [Widget::cget $path -disabledimage]
if {![string equal $dimg ""]} { $path:cmd configure -state normal }
} else {
set relief [Widget::cget $path -relief]
if {[string equal $_pressed $path]} {
if {[string equal $relief "link"]} {
set relief raised
}
} elseif {[string equal $relief "link"]} {
set relief flat
}

$path:cmd configure  -relief $relief  -state  [Widget::cget $path -state]  -image  [Widget::cget $path -image]
}
}


proc Button::_press { path } {
variable _pressed

if {![string equal [Widget::cget $path -state] "disabled"]} {
set _pressed $path
$path:cmd configure -relief sunken

set img [Widget::cget $path -pressedimage]
if {![string equal $img ""]} { $path:cmd configure -image $img }

set cmd [Widget::getoption $path -armcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
set repeatdelay [Widget::getoption $path -repeatdelay]
set repeatint [Widget::getoption $path -repeatinterval]
if {$repeatdelay > 0} {
after $repeatdelay "Button::_repeat $path"
} elseif {$repeatint > 0} {
after $repeatint "Button::_repeat $path"
}
}
}
}


proc Button::_release { path } {
variable _current
variable _pressed

if {[string equal $_pressed $path]} {
set pressed $_pressed
set _pressed ""
set relief [Widget::getoption $path -relief]
after cancel "Button::_repeat $path"

if {[string equal $relief "link"]} {
set relief raised
}

set image [Widget::cget $path -image]
if {[string equal $pressed $path]} {
set activeimage [Widget::cget $path -activeimage]
if {![string equal $activeimage ""]} { set image $activeimage }
}

$path:cmd configure -relief $relief -image $image

set cmd [Widget::getoption $path -disarmcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
}

if {[string equal $_current $path] &&
![string equal [Widget::cget $path -state] "disabled"] &&  [set cmd [Widget::getoption $path -command]] != ""} {
uplevel \#0 $cmd
}
}
}


proc Button::_repeat { path } {
variable _current
variable _pressed

if {$_current == $path && $_pressed == $path &&
![string equal [Widget::cget $path -state] "disabled"] &&
[set cmd [Widget::getoption $path -armcommand]] != ""} {
uplevel \#0 $cmd
}
if { $_pressed == $path &&
([set delay [Widget::getoption $path -repeatinterval]] >0 ||
[set delay [Widget::getoption $path -repeatdelay]] > 0) } {
after $delay "Button::_repeat $path"
}
}


namespace eval ButtonBox {
Widget::define ButtonBox buttonbox Button

namespace eval Button {
Widget::declare ButtonBox::Button {
{-tags              String    ""            0}
{-hide              Boolean   0             0}
{-value             String    ""            0}
{-spacing           Int       -1            0 "%d >= -1"}
}
}

if {[BWidget::using ttk]} {
Widget::tkinclude ButtonBox ttk::frame :cmd  remove { -class -colormap -container -padx -pady -visual }
} else {
Widget::tkinclude ButtonBox frame :cmd  remove { -class -colormap -container -padx -pady -visual }
}

Widget::declare ButtonBox {
{-orient      Enum       horizontal 0 {horizontal vertical}}
{-state       Enum       "normal"   0 {disabled normal}}
{-homogeneous Boolean    1          0}
{-spacing     Int        10         0 "%d >= 0"}
{-padx        Int        1          0}
{-pady        Int        1          0}
{-default     String     -1         0}
{-rows        Int        "0"        0}
{-columns     Int        "0"        0}
}

bind ButtonBox <Map>     [list ButtonBox::_realize %W]
bind ButtonBox <Destroy> [list ButtonBox::_destroy %W]
}


proc ButtonBox::create { path args } {
Widget::initArgs ButtonBox $args maps

if {[BWidget::using ttk]} {
eval [list ttk::frame $path -class ButtonBox] $maps(:cmd)
} else {
eval [list frame $path -class ButtonBox] $maps(:cmd)
}

Widget::initFromODB ButtonBox $path $maps(ButtonBox)

if {![BWidget::using ttk]
&& [info tclversion] >= 8.4} { $path configure -padx 0 -pady 0 }

Widget::getVariable $path data

set data(max)      0
set data(nbuttons) 0
set data(realized) 0
set data(buttons)  [list]
set data(widgets)  [list]
set data(default)  [Widget::getoption $path -default]

return [Widget::create ButtonBox $path]
}


proc ButtonBox::configure { path args } {
Widget::getVariable $path data

set res [Widget::configure $path $args]

if {[Widget::hasChanged $path -default val]} {
_select_default $path
}

if {[Widget::hasChanged $path -state val]} {
foreach i $data(buttons) {
$path.b$i configure -state $val
}
}

set opts [list -rows -columns -orient -homogeneous]
if {[eval [list Widget::anyChangedX $path] $opts]} { _redraw $path }

return $res
}


proc ButtonBox::cget { path option } {
return [Widget::cget $path $option]
}


proc ButtonBox::add { path args } {
return [eval insert $path end $args]
}


proc ButtonBox::insert { path idx args } {
Widget::getVariable $path data
Widget::getVariable $path tags

set but $path.b$data(nbuttons)

set class Button
if {[BWidget::using ttk]} { set class TTKButton }
array set maps [Widget::splitArgs $args $class ButtonBox::Button]

Widget::init ButtonBox::Button $but#bbox $maps(ButtonBox::Button)

set spacing [Widget::getOption -spacing -1 $but#bbox $path]

if {[string equal $idx "end"] && $data(nbuttons)} {
set data(spacing,$data(nbuttons)) [list left $spacing]
lappend data(widgets) $but
lappend data(buttons) $data(nbuttons)
} else {
set data(spacing,$data(nbuttons)) [list right $spacing]
set data(widgets) [linsert $data(widgets) $idx $but]
set data(buttons) [linsert $data(buttons) $idx $data(nbuttons)]
}

set opts [list]
if {![BWidget::using ttk]} {
lappend opts -padx [Widget::getoption $path -padx]
lappend opts -pady [Widget::getoption $path -pady]
}

eval [list Button::create $but] $opts $maps(:cmd) $maps($class)

foreach tag [Widget::getoption $but#bbox -tags] {
lappend tags($tag) $but
if {![info exists tags($tag,state)]} { set tags($tag,state) 1 }
}

_redraw_idle $path

incr data(nbuttons)

_select_default $path

return $but
}


proc ButtonBox::delete { path index } {
Widget::getVariable $path data
Widget::getVariable $path tags

set button $path.b$i
set widget $button#bbox

set i [lindex $data(buttons) $index]
set data(buttons) [lreplace $data(buttons) $index $index]
set data(widgets) [lreplace $data(widgets) $index $index]

foreach tag [Widget::getoption $widget -tags] {
set tags($tag) [BWidget::lremove $tags($tag) $button]
if {![llength $tags($tag)]} {
unset tags($tag) tags($tag,state)
}
}

Widget::destroy $widget 0

destroy $button

_redraw_idle $path
}


proc ButtonBox::buttons { path {first ""} {last ""} } {
Widget::getVariable $path data
if {![string length $first]} { return $data(widgets) }
if {![string length $last]}  { return [lindex $data(widgets) $first] }
return [lrange $data(widgets) $first $last]
}


proc ButtonBox::itemconfigure { path index args } {
Widget::getVariable $path data

set idx    [index $path $index]
set button $path.b$idx

set class Button
if {[BWidget::using ttk]} { set class TTKButton }

if {![llength $args]} {
set res [${class}::configure $button]
eval lappend res [Widget::configure $button#bbox [list]]
return [lsort $res]
}

if {[llength $args] == 1} {
if {[Widget::optionExists Button $args]} {
return [${class}::configure $button $args]
} else {
return [Widget::configure $button#bbox $args]
}
}

array set maps [Widget::splitArgs $args $class ButtonBox::Button]

if {[info exists maps(ButtonBox::Button)]} {
set oldtags [Widget::getoption $button#bbox -tags]

Widget::configure $button#bbox $maps(ButtonBox::Button)

if {[Widget::hasChanged $button#bbox -tags newtags]} {
Widget::getVariable $path tags

foreach tag $oldtags {
set tags($tag) [BWidget::lremove $tags($tag) $button]
if {![llength $tags($tag)]} {
unset tags($tag) tags($tag,state)
}
}

foreach tag $newtags {
lappend tags($tag) $button
if {![info exists tags($tag,state)]} { set tags($tag,state) 1 }
}
}

set redraw 0

if {[Widget::hasChanged $button#bbox -spacing spacing]} {
set redraw 1
set data(spacing,$idx) [lreplace $data(spacing,$idx) 1 1 $spacing]
}

if {[Widget::hasChanged $button#bbox -hide hide]} {
set redraw 1
}

if {$redraw} { _redraw_idle $path }
}

if {[llength $maps(:cmd)] || [llength $maps($class)]} {
eval [list ${class}::configure $button] $maps(:cmd) $maps($class)
}
}


proc ButtonBox::itemcget { path index option } {
set button $path.b[index $path $index]
if {[Widget::optionExists Button $option]} {
return [Button::cget $button $option]
} else {
return [Widget::cget $button#bbox $option]
}
}


proc ButtonBox::setfocus { path index } {
set but $path.b[index $path $index]
if {[winfo exists $but]} { focus $but }
}


proc ButtonBox::invoke { path index } {
set but $path.b[index $path $index]
if {[winfo exists $but]} { $but invoke }
}


proc ButtonBox::index { path index } {
Widget::getVariable $path data

set n [expr {$data(nbuttons) - 1}]

if {[string is integer -strict $index]} {
set res $index
if {$index > $n} { set res $n }
return $res
}

if {[string equal $index "default"]} {
set res [Widget::getoption $path -default]
} elseif {[string equal $index "end"] || [string equal $index "last"]} {
set res $n
} elseif {[set res [lsearch -exact $data(widgets) $index]] > -1} {
} else {
foreach i $data(buttons) {
set w $path.b$i
lappend text  [$w cget -text]
lappend names [$w cget -name]
}
set len [llength $data(buttons)]
set res [lsearch -exact [concat $names $text] $index]
if {$res >= $len} { set res [expr {$res - $len}] }
}
return $res
}



proc ButtonBox::gettags { path } {
Widget::getVariable $path tags

set tags [list]

foreach tag [array names tags] {
if {![string match "*,state" $tag]} { lappend tags $tag }
}
return $tags
}



proc ButtonBox::setbuttonstate { path tag state } {
Widget::getVariable $path tags

if {![info exists tags($tag)]} { return }

set tags($tag,state) $state
foreach button $tags($tag) {
set expression 1
foreach buttontag [Widget::getoption $button#bbox -tags] {
lappend expression && $tags($buttontag,state)
}

if {[expr $expression]} {
set state normal
} else {
set state disabled
}

$button configure -state $state
}
}


proc ButtonBox::getbuttonstate { path tag } {
Widget::getVariable $path tags

if {![info exists tags($tag)]} {
return -code error "unknown tag \"$tag\""
}

return $tags($tag,state)
}


proc ButtonBox::_select_default { path } {
Widget::getVariable $path data

set default [Widget::getoption $path -default]
set data(default) [ButtonBox::index $path $default]

foreach i $data(buttons) {
set button $path.b$i
if {$i == $data(default)} {
if {[BWidget::using ttk]} {
$button state focus
} else {
$button configure -default active
}
} else {
if {[BWidget::using ttk]} {
$button state !focus
} else {
$button configure -default normal
}
}
incr i
}
}


proc ButtonBox::_redraw_idle { path } {
Widget::getVariable $path data

if {![info exists data(redraw)]} {
set data(redraw) 1
after idle [list ButtonBox::_redraw $path]
}
}


proc ButtonBox::_redraw { path } {
Widget::getVariable $path data
Widget::getVariable $path buttons

set data(redraw) 1


set rows [Widget::getoption $path -rows]
set cols [Widget::getoption $path -columns]

set idx     0
set rowidx  0
set colidx  0
set idxs [list]
foreach i $data(buttons) {
set dir     [lindex $data(spacing,$i) 0]
set spacing [lindex $data(spacing,$i) 1]
set but $path.b$i
if {[string equal [Widget::getoption $path -orient] "horizontal"]} {
if {![Widget::getoption $but#bbox -hide]} {
grid $but -column $idx -row $rowidx -sticky nsew
} else {
grid remove $but
}

if {[Widget::getoption $path -homogeneous]} {
set req [winfo reqwidth $but]
if { $req > $data(max) } {
grid columnconfigure $path [expr {2*$i}] -minsize $req
set data(max) $req
}
grid columnconfigure $path $idx -minsize $data(max) -weight 1
} else {
grid columnconfigure $path $idx -weight 0
}

set col [expr {$idx - 1}]
if {[string equal $dir "right"]} { set col [expr {$idx + 1}] }
if {$col > 0 && [lsearch -exact $idxs $col] < 0} {
lappend idxs $col
grid columnconfigure $path $col -minsize $spacing
}

incr colidx

if {$cols > 0 && $colidx >= $cols} {
set idx -2
incr rowidx
set colidx 0
}
} else {
if {![Widget::getoption $but#bbox -hide]} {
grid $but -column $colidx -row $idx -sticky nsew
} else {
grid remove $but
}

grid rowconfigure $path $idx -weight 0

set row [expr {$idx - 1}]
if {[string equal $dir "right"]} { set row [expr {$idx + 1}] }
if {$row > 0 && [lsearch -exact $idxs $row] < 0} {
lappend idxs $row
grid rowconfigure $path $row -minsize $spacing
}

incr rowidx

if {$rows > 0 && $rowidx >= $rows} {
set idx -2
incr colidx
set rowidx 0
}
}
incr idx 2
}

unset data(redraw)
}


proc ButtonBox::_realize { path } {
Widget::getVariable $path data

if {!$data(realized)} {
set data(realized) 1
ButtonBox::_redraw $path
}
}


proc ButtonBox::_destroy { path } {
Widget::getVariable $path data

foreach i $data(buttons) {
set button $path.b$i
Widget::destroy $button#bbox 0
}

Widget::destroy $path
}


namespace eval Dialog {
Widget::define Dialog dialog ButtonBox

Widget::bwinclude Dialog ButtonBox .bbox  remove {
-orient -background
} initialize {
-spacing 10 -padx 10
}

Widget::declare Dialog {
{-background    Color    "SystemButtonFace" 0}
{-title         String   ""      0}
{-geometry      String   ""      0}
{-modal         Enum     local   0 {none local global}}
{-bitmap        String   ""      1}
{-image         String   ""      1}
{-separator     Boolean  0       1}
{-cancel        Int      -1      0 "%d >= -1"}
{-parent        String   ""      0}
{-side          Enum     bottom  1 {bottom left top right}}
{-anchor        Enum     c       1 {n e w s c}}
{-class         String   Dialog  1}
{-transient     Boolean  1       1}
{-place         Enum     center  1 {none center left right above below}}
{-placerelative Boolean  1       1}

{-bg            Synonym  -background}
}

if {![BWidget::using ttk]} {
Widget::addmap Dialog "" :cmd   {-background {}}
Widget::addmap Dialog "" .frame {-background {}}
}

bind Dialog <Destroy> [list Dialog::_destroy %W]
}


proc Dialog::create { path args } {
Widget::initArgs Dialog $args maps

array set _args $maps(Dialog)
set class "Dialog"
if {[info exists _args(-class)]} { set class $_args(-class) }

if {[string equal $::tcl_platform(platform) "unix"]} {
set re raised
set bd 1
} else {
set re flat
set bd 0
}
toplevel $path -relief $re -borderwidth $bd -class $class  -background $::BWidget::colors(SystemButtonFace)
wm protocol $path WM_DELETE_WINDOW [list Dialog::cancel $path]

Widget::initFromODB Dialog $path $maps(Dialog)

bindtags $path [list $path $class all]
wm overrideredirect $path 1
wm title $path [Widget::cget $path -title]

set parent [Widget::getoption $path -parent]
if {![winfo exists $parent]} {
set parent [winfo parent $path]
if {$parent ne "."} { Widget::setoption $path -parent $parent }
}

if {[Widget::getoption $path -transient]} {
wm transient $path [winfo toplevel $parent]
}
wm withdraw $path

set side [Widget::cget $path -side]
if {[string equal $side "left"] || [string equal $side "right"]} {
set orient vertical
} else {
set orient horizontal
}

eval [list ButtonBox::create $path.bbox] $maps(.bbox) -orient $orient
set frame [frame $path.frame -relief flat -borderwidth 0]

set opts [list]

if {![BWidget::using ttk]} {
set bg [$path cget -background]
lappend opts -background $bg
$path configure -background $bg
$frame configure -background $bg
}

if {[set bitmap [Widget::getoption $path -image]] != ""} {
eval [list label $path.label -image $bitmap] $opts
} elseif {[set bitmap [Widget::getoption $path -bitmap]] != ""} {
eval [list label $path.label -bitmap $bitmap] $opts
}
if {[Widget::getoption $path -separator]} {
eval [list Separator::create $path.sep -orient $orient] $opts
}

Widget::getVariable $path data
set data(nbut)     0
set data(realized) 0

bind $path <Return> [list Dialog::ok $path]
bind $path <Escape> [list Dialog::cancel $path]

return [Widget::create Dialog $path]
}


proc Dialog::configure { path args } {
set res [Widget::configure $path $args]

if { [Widget::hasChanged $path -title title] } {
wm title $path $title
}
if { [Widget::hasChanged $path -background bg] } {
if { [winfo exists $path.label] } {
$path.label configure -background $bg
}
if { [winfo exists $path.sep] } {
Separator::configure $path.sep -background $bg
}
}
return $res
}


proc Dialog::cget { path option } {
return [Widget::cget $path $option]
}


proc Dialog::getframe { path } {
return $path.frame
}


proc Dialog::add { path args } {
Widget::getVariable $path data

set idx $data(nbut)
set cmd [list ButtonBox::add $path.bbox  -command [list Dialog::enddialog $path $idx]]
set res [eval $cmd -value $idx $args]
incr data(nbut)
return $res
}


proc Dialog::itemconfigure { path index args } {
return [eval [list ButtonBox::itemconfigure $path.bbox $index] $args]
}


proc Dialog::itemcget { path index option } {
return [ButtonBox::itemcget $path.bbox $index $option]
}


proc Dialog::invoke { path index } {
ButtonBox::invoke $path.bbox $index
}


proc Dialog::setfocus { path index } {
ButtonBox::setfocus $path.bbox $index
}


proc Dialog::enddialog { path result {destroy 0} } {
Widget::getVariable $path data

if {$result ne -1} {
if {[ButtonBox::index $path.bbox $result] > -1} {
set result [ButtonBox::itemcget $path.bbox $result -value]
}
}

set data(result) $result

event generate $path <<DialogEnd>>

if {$destroy} {
destroy $path
}

return $result
}


proc Dialog::draw { path {focus ""} {overrideredirect 0} {geometry ""} } {
Widget::getVariable $path data

set parent [Widget::getoption $path -parent]
if {!$data(realized)} {
set data(realized) 1
if {[llength [winfo children $path.bbox]]} {
set side [Widget::getoption $path -side]
if {[string equal $side "left"] || [string equal $side "right"]} {
set pad  -padx
set fill y
} else {
set pad  -pady
set fill x
}

pack $path.bbox -side $side  -anchor [Widget::getoption $path -anchor] -padx 1m -pady {5 10}

if {[winfo exists $path.sep]} {
pack $path.sep -side $side -fill $fill $pad 2m
}
}

if {[winfo exists $path.label]} {
pack $path.label -side left -anchor n -padx {10 5} -pady 3m
}

pack $path.frame -padx 1m -pady 1m -fill both -expand yes
}

if {![string length $geometry]} {
set geometry [Widget::getoption $path -geometry]
}

set width    0
set height   0
set place    [Widget::getoption $path -place]
set usePlace [expr ![string equal $place "none"]]
if {[string length $geometry]} {
set split [split $geometry x+-]

if {[llength $split] > 2} {
set usePlace 0
} else {
BWidget::lassign $split width height
}
}

wm geometry $path $geometry

if {$usePlace} {
set relative [Widget::getoption $path -placerelative]
if {$relative && [winfo exists $parent]} {
BWidget::place $path $width $height $place $parent
} else {
BWidget::place $path $width $height $place
}
}

update idletasks
wm overrideredirect $path $overrideredirect
wm deiconify $path

if {![winfo exists $parent] ||  ([wm state [winfo toplevel $parent]] != "withdrawn")} {
tkwait visibility $path
}

BWidget::focus set $path
if {[winfo exists $focus]} {
focus -force $focus
} else {
ButtonBox::setfocus $path.bbox default
}

if {[set grab [Widget::cget $path -modal]] != "none"} {
BWidget::grab $grab $path
set res [Dialog::wait $path]
withdraw $path
return $res
}
}


proc Dialog::wait { path } {
Widget::getVariable $path data

if {[info exists data(result)]} { unset data($result) }

tkwait variable [Widget::widgetVar $path data(result)]
if {[info exists data(result)]} {
set res $data(result)
unset data(result)
} else {
set res -1
}

return $res
}


proc Dialog::withdraw { path } {
BWidget::grab release $path
BWidget::focus release $path
if {[winfo exists $path]} {
wm withdraw $path
}
}


proc Dialog::ok { path } {
ButtonBox::invoke $path.bbox default
}


proc Dialog::cancel { path } {
ButtonBox::invoke $path.bbox [Widget::getoption $path -cancel]
}


proc Dialog::_destroy { path } {
BWidget::grab  release $path
BWidget::focus release $path
Widget::destroy $path
}


namespace eval ScrolledWindow {
Widget::define ScrolledWindow scrollw

Widget::tkinclude ScrolledWindow frame :cmd  remove { -class -colormap -visual }

Widget::declare ScrolledWindow {
{-class       String     "ScrolledWindow" 1}
{-scrollbar   Enum	 both 0 {none both vertical horizontal}}
{-auto	      Enum	 both 0 {none both vertical horizontal}}
{-sides	      Enum	 se   0 {ne en nw wn se es sw ws}}
{-size	      Int	 0    1 "%d >= 0"}
{-ipad	      Int	 1    1 "%d >= 0"}
{-managed     Boolean	 1    1}
}

bind ScrolledWindow <Map>     [list ScrolledWindow::_realize %W]
bind ScrolledWindow <Destroy> [list ScrolledWindow::_destroy %W]
}


proc ScrolledWindow::create { path args } {
Widget::initArgs ScrolledWindow $args maps

array set _args $args
set class ScrolledWindow
if {[info exists _args(-class)]} { set class $_args(-class) }

eval [list frame $path -class $class] $maps(:cmd)

Widget::initFromODB ScrolledWindow $path $args

Widget::getVariable $path data

if {![string equal $class "ScrolledWindow"]} {
set top [winfo toplevel $path]
bindtags $path [list $path $class ScrolledWindow $top all]
}

set bg [$path cget -background]

set useTtk 0
if {[BWidget::using ttk] && ![BWidget::using aqua]} {
set useTtk 1
ttk::scrollbar $path.vscroll
ttk::scrollbar $path.hscroll -orient horizontal
} else {
scrollbar $path.hscroll  -highlightthickness 0 -takefocus 0  -orient	 horiz	 -relief	 sunken	 -bg	 $bg
scrollbar $path.vscroll  -highlightthickness 0 -takefocus 0  -orient	 vert	 -relief	 sunken	 -bg	 $bg
}

set data(vmin)     -1
set data(vmax)     -1
set data(hmin)     -1
set data(hmax)     -1

set data(afterId)  ""
set data(realized) 0

_setData $path  [Widget::cget $path -scrollbar]  [Widget::cget $path -auto]  [Widget::cget $path -sides]

if {[Widget::cget $path -managed]} {
set data(hsb,packed) $data(hsb,present)
set data(vsb,packed) $data(vsb,present)
} else {
set data(hsb,packed) 0
set data(vsb,packed) 0
}

if {!$useTtk} {
set sbsize [Widget::cget $path -size]

if {$sbsize} {
$path.vscroll configure -width $sbsize
$path.hscroll configure -width $sbsize
}
}

set data(ipad) [Widget::cget $path -ipad]

if {$data(hsb,packed)} {
grid $path.hscroll -column 1 -row $data(hsb,row)  -sticky ew -ipady $data(ipad)
}
if {$data(vsb,packed)} {
grid $path.vscroll -column $data(vsb,column) -row 1  -sticky ns -ipadx $data(ipad)
}

grid columnconfigure $path 1 -weight 1
grid rowconfigure	 $path 1 -weight 1

return [Widget::create ScrolledWindow $path]
}


proc ScrolledWindow::getframe { path } {
return $path
}


proc ScrolledWindow::setwidget { path widget } {
Widget::getVariable $path data

if {[info exists data(widget)] && [winfo exists $data(widget)]
&& ![string equal $data(widget) $widget]} {
grid remove $data(widget)
$data(widget) configure -xscrollcommand "" -yscrollcommand ""
}

set data(widget) $widget
grid $widget -in $path -row 1 -column 1 -sticky news

$path.hscroll configure -command [list $widget xview]
$path.vscroll configure -command [list $widget yview]
$widget configure  -xscrollcommand [list ScrolledWindow::_set_hscroll $path]  -yscrollcommand [list ScrolledWindow::_set_vscroll $path]
}


proc ScrolledWindow::getwidget { path } {
Widget::getVariable $path data
if {[info exists data(widget)]} { return $data(widget) }
}


proc ScrolledWindow::configure { path args } {
Widget::getVariable $path data

set res [Widget::configure $path $args]

if {[Widget::hasChanged $path -background bg]} {
catch { $path.hscroll configure -background $bg }
catch { $path.vscroll configure -background $bg }
}

if {[Widget::hasChanged $path -scrollbar scrollbar]
|| [Widget::hasChanged $path -auto  auto]
|| [Widget::hasChanged $path -sides sides]} {
_setData $path $scrollbar $auto $sides

BWidget::lassign [$path.hscroll get] vmin vmax
set data(hsb,packed) [expr {$data(hsb,present) &&  (!$data(hsb,auto) || ($vmin != 0 || $vmax != 1))}]

BWidget::lassign [$path.vscroll get] vmin vmax
set data(vsb,packed) [expr {$data(vsb,present) &&  (!$data(vsb,auto) || ($vmin != 0 || $vmax != 1))}]

set data(ipad) [Widget::cget $path -ipad]

if {$data(hsb,packed)} {
grid $path.hscroll -column 1 -row $data(hsb,row)  -sticky ew -ipady $data(ipad)
}
if {$data(vsb,packed)} {
grid $path.vscroll -column $data(vsb,column) -row 1  -sticky ns -ipadx $data(ipad)
}
}
return $res
}


proc ScrolledWindow::cget { path option } {
return [Widget::cget $path $option]
}


proc ScrolledWindow::_set_hscroll { path vmin vmax } {
Widget::getVariable $path data

$path.hscroll set $vmin $vmax

set data(hmin) $vmin
set data(hmax) $vmax

_redraw_after $path
}


proc ScrolledWindow::_set_vscroll { path vmin vmax } {
Widget::getVariable $path data

$path.vscroll set $vmin $vmax

set data(vmin) $vmin
set data(vmax) $vmax

_redraw_after $path
}


proc ScrolledWindow::_setData {path scrollbar auto sides} {
Widget::getVariable $path data

set sb    [lsearch -exact {none horizontal vertical both} $scrollbar]
set auto  [lsearch -exact {none horizontal vertical both} $auto]

set data(hsb,present)  [expr {($sb & 1) != 0}]
set data(hsb,auto)	   [expr {($auto & 1) != 0}]
set data(hsb,row)	   [expr {[string match *n* $sides] ? 0 : 2}]

set data(vsb,present)  [expr {($sb & 2) != 0}]
set data(vsb,auto)	   [expr {($auto & 2) != 0}]
set data(vsb,column)   [expr {[string match *w* $sides] ? 0 : 2}]
}


proc ScrolledWindow::_redraw_after { path } {
Widget::getVariable $path data
after cancel $data(afterId)
set data(afterId) [after 5 [list ScrolledWindow::_redraw $path]]
}


proc ScrolledWindow::_redraw { path } {
if {![Widget::exists $path]} { return }

Widget::getVariable $path data

if {!$data(realized)} { return }

if {$data(hsb,present) && $data(hsb,auto)} {
if {$data(hsb,packed) && $data(hmin) == 0 && $data(hmax) == 1} {
set data(hsb,packed) 0
grid remove $path.hscroll
} elseif {!$data(hsb,packed) && ($data(hmin)!=0 || $data(hmax)!=1)} {
set data(hsb,packed) 1
grid $path.hscroll -column 1 -row $data(hsb,row)  -sticky ew -ipady $data(ipad)
}
}

if {$data(vsb,present) && $data(vsb,auto)} {
if {$data(vsb,packed) && $data(vmin) == 0 && $data(vmax) == 1} {
set data(vsb,packed) 0
grid remove $path.vscroll
} elseif {!$data(vsb,packed) && ($data(vmin)!=0 || $data(vmax)!=1) } {
set data(vsb,packed) 1
grid $path.vscroll -column $data(vsb,column) -row 1  -sticky ns -ipadx $data(ipad)
}
}
}


proc ScrolledWindow::_realize { path } {
Widget::getVariable $path data
set data(realized) 1
}


proc ScrolledWindow::_destroy { path } {
Widget::getVariable $path data
after cancel $data(afterId)
Widget::destroy $path
}


if {0} {

IconLibrary icons

icons load -find 1 -directory $kdedir -extension png -findgroups  [list {actions act} {apps app} {devices dev}
{filesystems file} {mimetypes mime}]
}


package require Tcl 8.4

namespace eval IconLibrary {
Widget::define IconLibrary icons

Widget::declare IconLibrary {
{-file          String    "tkIcons"                 0}
{-icons         String    ""                        0}
{-sizes         String    ""                        0}
{-groups        String    ""                        0}
{-create        Boolean   0                         0}
{-directory     String    ""                        0}

{-find          Boolean   0                         0}
{-extension     String    "gif"                     0}
{-findsizes     String    "16 22"                   0}
{-findgroups    String    "act app dev file mime"   0}
}

namespace eval Icon {
Widget::declare IconLibrary::Icon {
{-size      String    ""                        1}
{-type      String    ""                        1}
{-file      String    ""                        1}
{-data      String    ""                        1}
{-image     String    ""                        1}
{-imageargs String    ""                        1}
{-filegroup String    ""                        1}
{-workgroup String    ""                        1}
}
}

namespace eval NamesArgs {
Widget::declare IconLibrary::NamesArgs {
{-icons         String    ""                        0}
{-sizes         String    ""                        0}
{-groups        String    ""                        0}
}
}

variable  sizeMap
array set sizeMap {
16x16   16
22x22   22
32x32   32
48x48   48
64x64   64
128x128 128
}

variable  groupMapArray
array set groupMapArray {
apps            app
actions         act
devices         dev
mimetypes       mime
filesystems     file
}

variable groupMap

foreach name [array names groupMapArray] {
lappend groupMap [list $name $groupMapArray($name)]
}
}


proc IconLibrary::create { library args } {
Widget::init IconLibrary $library $args

Widget::getVariable $library data

set data(icons) [list]

if {[llength $args]} { eval [list IconLibrary::load $library] $args }

return [Widget::create IconLibrary $library 0]
}


proc IconLibrary::load { library args } {
Widget::getVariable $library data

Widget::init IconLibrary $library $args

set file      [Widget::getoption $library -file]
set create    [Widget::getoption $library -create]
set iconlist  [Widget::getoption $library -icons]
set sizelist  [Widget::getoption $library -sizes]
set grouplist [Widget::getoption $library -groups]
set directory [Widget::getoption $library -directory]

set filename $file
if {![string length $directory]} {
set directory [file dirname $file]
} elseif {[string length $file]} {
set filename [file join $directory $file]
}

if {[Widget::getoption $library -find]} {
if {![string length $directory]} {
return -code error "cannot find images without -directory"
}

set ext        [Widget::getoption $library -extension]
set findsizes  [Widget::getoption $library -findsizes]
set findgroups [Widget::getoption $library -findgroups]

foreach size $findsizes {
set size  [IconLibrary::_get_size $size]

set sizedir [file join $directory $size]
if {![file exists $sizedir]} { continue }

foreach group $findgroups {
set filegroup [lindex $group 0]
set workgroup [lindex $group 1]
if {[llength $group] == 1} { set workgroup $filegroup }

set groupdir [file join $sizedir $filegroup]
if {![file exists $groupdir]} { continue }

foreach imagefile [glob -nocomplain -dir $groupdir *.$ext] {
set image [file root [file tail $imagefile]]
set image $workgroup$image$size
lappend data(icons) $image

set icon $library#$image
set exists [expr {[Widget::exists $icon]
&& [string length [Widget::getoption $icon -image]]}]

Widget::init IconLibrary::Icon $icon  [list -size $size -type file -file $imagefile  -filegroup $filegroup -workgroup $workgroup  -data "" -image ""]

if {$exists && !$create} {
IconLibrary::image $library $image
}
}
}
}

if {![file exists $filename]} {
if {$create} { _create_icons $library $data(icons) }
set data(icons) [lsort -unique $data(icons)]
return $data(icons)
}
}

if {![file isfile $filename] || ![file readable $filename]} {
return -code error "couldn't open \"$filename\": no such file"
}

set iLen [llength $iconlist]
set sLen [llength $sizelist]
set gLen [llength $grouplist]

set fp [open $filename]

while {[gets $fp line] != -1} {
if {[string equal [string index $line 0] "#"]} { continue }

set list [split $line :]
if {[llength $list] < 5} { continue }

BWidget::lassign $list image workgroup filegroup size type imagedata
set size [IconLibrary::_get_size_int $size]

if {($gLen && [lsearch -exact $grouplist $workgroup] < 0)
|| ($sLen && [lsearch -exact $sizelist $size] < 0)
|| ($iLen && [lsearch -exact $iconlist $image] < 0)} { continue }

set file ""
if {[string equal $type "file"]} {
if {![string length $imagedata]} { continue }

if {[string is integer $size]} { set size ${size}x${size} }
set file [file join $directory $size $filegroup $imagedata]
set images($image,file) $file
}

lappend data(icons) $image

set icon $library#$image
set exists [expr {[Widget::exists $icon]
&& [string length [Widget::getoption $icon -image]]}]

Widget::init IconLibrary::Icon $icon  [list -size $size -type $type -file $file -data $imagedata  -filegroup $filegroup -workgroup $workgroup -image ""]

if {$exists && !$create} {
IconLibrary::image $library $image
}
}

close $fp

if {$create} { _create_icons $library $icons }

set data(icons) [lsort -unique $data(icons)]
}


proc IconLibrary::cget { library option } {
return [Widget::cget $library $option]
}


proc IconLibrary::configure { library args } {
return [Widget::configure $library $args]
}


proc IconLibrary::itemcget { library image option } {
if {![IconLibrary::exists $library $image]} {
return -code error "no such icon '$image'"
}

set path    $library#$image
set image   [Widget::getoption $path -image]
set created [string length $image]
if {$created && ($option eq "-file" || $option eq "-data")} {
return [$image cget $option]
}
return [Widget::cget $path $option]
}


proc IconLibrary::itemconfigure { library image args } {
if {![IconLibrary::exists $library $image]} {
return -code error "no such icon '$image'"
}

set path    $library#$image
set image   [Widget::getoption $path -image]
set created [string length $image]

if {![llength $args]} {
set return [list]
foreach list [Widget::configure $path $args] {
set option [lindex $list 0]
if {$created && ($option eq "-file" || $option eq "-data")} {
lappend return [$image configure $option]
} else {
lappend return $list
}
}
return $return
} elseif {[llength $args] == 1} {
set option [lindex $args 0]
if {$created && ($option eq "-file" || $option eq "-data")} {
return [$image configure $option]
} else {
return [Widget::configure $path $option]
}
}

set imageOpts  [list]
set widgetOpts [list]
foreach [list option value] $args {
if {$created && ($option eq "-file" || $option eq "-data")} {
lappend imageOpts $option $value
} else {
lappend widgetOpts $option $value
}
}

if {[llength $imageOpts]} {
eval [list $image configure] $imageOpts
}

if {[llength $widgetOpts]} {
Widget::configure $path $widgetOpts
}
}


proc IconLibrary::exists { library image } {
return [Widget::exists $library#$image]
}


proc IconLibrary::icons { library {pattern ""} } {
Widget::getVariable $library data
if {![string length $pattern]} { return $data(icons) }
return [lsearch -glob -all -inline $data(icons) $pattern]
}


proc IconLibrary::add { library image args } {
Widget::getVariable $library data

if {[IconLibrary::exists $library $image]} {
return -code error "icon \"$image\" already exists"
}

array set _args $args

set create 0
if {[info exists _args(-create)]} {
if {$_args(-create)} { set create 1 }
unset _args(-create)
}

Widget::init IconLibrary::Icon $library#$image [array get _args]
lappend data(icons) $image

if {$create} { IconLibrary::image $library $image }

return $image
}


proc IconLibrary::image { library image } {
Widget::getVariable $library images

if {![IconLibrary::exists $library $image]} {
return -code error "no such icon '$image'"
}

set path $library#$image

if {[string equal [Widget::getoption $path -type] "icon"]} {
set icon  $image
set image [Widget::getoption $path -data]
set path  $library#$image
if {![IconLibrary::exists $library $image]} {
return -code error "no such icon '$image' while loading '$icon'"
}
}

if {![string length [Widget::getoption $path -image]]} {
set img ::Icons::${library}::$image

set data [Widget::getoption $path -data]
set file [Widget::getoption $path -file]
set args [Widget::getoption $path -imageargs]

if {[string length $data]} {
lappend args -data $data
} elseif {[string length $file]} {
lappend args -file $file
}

eval [list ::image create photo $img] $args

Widget::setoption $path -image $img -file "" -data ""
}

return [Widget::getoption $path -image]
}


proc IconLibrary::delete { library args } {
Widget::getVariable $library data

set images [list]
foreach icon $args {
set image [Widget::getoption $library#$icon -image]
if {[string length $image]} { lappend images $image }
Widget::destroy $library#$icon 0
}

if {[llength $images]} { eval ::image delete $images }

set data(icons) [eval [list BWidget::lremove $data(icons)] $args]

return
}


proc IconLibrary::clear { library } {
Widget::getVariable $library data
eval [list IconLibrary::delete $library] $data(icons)
}


proc IconLibrary::destroy { library } {
IconLibrary::clear $library
Widget::destroy $library
}


proc IconLibrary::_get_size { size } {
if {[string is integer -strict $size]} { return ${size}x${size} }
return $size
}


proc IconLibrary::_get_size_int { size } {
variable sizeMap
if {[info exists sizeMap($size)]} { return $sizeMap($size) }
if {[scan $size "%dx%d" w h] == 2 && $w == $h} { return $w }
return $size
}


proc IconLibrary::_create_icons { library icons } {
foreach icon $icons {
IconLibrary::image $library $icon
}
}

namespace eval ChooseDirectory {
Widget::define ChooseDirectory choosedir Dialog ScrolledWindow  Tree IconLibrary

Widget::bwinclude ChooseDirectory Dialog :cmd

Widget::declare ChooseDirectory {
{-name          String   ""        1}
{-message       String   "Please choose a directory, then select OK." 0}
{-folders       String   ""        0}
{-newfoldertext String   "Make New Folder" 0}
{-oktext        String   ""        0}
{-canceltext    String   ""        0}
{-initialdir    String   ""        0}
{-includevfs    Boolean  "0"       0}
}

bind ChooseDirectory <Destroy> [list ChooseDirectory::_destroy %W]
}


proc ChooseDirectory::create { path args } {
variable dialogs

BWidget::LoadBWidgetIconLibrary

set dialog $path#choosedir

array set maps [Widget::splitArgs $args Dialog ChooseDirectory]

Widget::initFromODB ChooseDirectory $dialog $maps(ChooseDirectory)

Widget::getVariable $dialog nodes
set nodes(count) 0

eval [list Dialog::create $path -class ChooseDirectory  -anchor e -default 1 -cancel 2 -modal local -spacing 5 -homogeneous 0  -title "Browse for Folder"] $maps(:cmd) $maps(Dialog)
wm minsize  $path 340 300
wm protocol $path WM_DELETE_WINDOW [list $path cancel]

Widget::getVariable $path folder

set frame [Dialog::getframe $path]

grid rowconfigure    $frame 3 -weight 1
grid columnconfigure $frame 0 -weight 1

Label $frame.message -anchor w -autowrap 1 -justify left  -text [Widget::getoption $dialog -message]
grid  $frame.message -row 0 -column 0 -sticky new -pady 5

if {[BWidget::using ttk]} {
ttk::entry $frame.e -textvariable [Widget::widgetVar $path folder]
} else {
entry $frame.e -textvariable [Widget::widgetVar $path folder]
}
grid $frame.e -row 2 -column 0 -sticky ew -pady 2 -padx 1
trace add variable [Widget::widgetVar $path folder] write  [list ChooseDirectory::_update_ok_button $path]

ScrolledWindow $frame.sw
grid $frame.sw -row 3 -column 0 -sticky news

set tree $frame.tree
Tree $tree -width 35  -opencmd  [list ChooseDirectory::_open_directory $path $tree]  -closecmd [list ChooseDirectory::_close_directory $path $tree]

$frame.sw setwidget $tree

bind $tree <<TreeSelect>>  [list ChooseDirectory::_selection_change $path $tree]

set text [Widget::getoption $dialog -newfoldertext]
Dialog::add $path -text " $text " -spacing 20 -state disabled  -command [list ChooseDirectory::_create_directory $path $tree]

set text [Widget::getoption $dialog -oktext]
if {$text eq ""} {
Dialog::add $path -name ok -width 12  -command [list ChooseDirectory::_validate_directory $path]
} else {
Dialog::add $path -text $text -width 12  -command [list ChooseDirectory::_validate_directory $path]
}

set text [Widget::getoption $dialog -canceltext]
if {$text eq ""} {
Dialog::add $path -name cancel -width 12
} else {
Dialog::add $path -text $text -width 12
}

set initdir [Widget::getoption $dialog -initialdir]
if {$initdir eq ""} {
set cwd [pwd]
} else {
set cwd $initdir
}
set cwd [file normalize $cwd]

set folders [Widget::getoption $dialog -folders]
if {![llength $folders]} {
set desktop   [file normalize [file join ~ Desktop]]
set documents [file normalize [file join ~ Documents]]

set desktopText   "Desktop"
set documentsText "Documents"
if {[info exists ::env(HOME)]} {
if {$::tcl_platform(platform) eq "windows"} {
foreach text {"Documents" "My Documents"} {
set dir [file join ~ $text]
if {[file exists $dir]} {
set documents     $dir
set documentsText $text
break
}
}
} else {
lappend folders [list [file normalize ~] "Home"]
}
}

if {[file exists $desktop]} {
lappend folders [list [file normalize $desktop] $desktopText]
}

if {[file exists $documents]} {
lappend folders [list [file normalize $documents] $documentsText]
}

if {$::tcl_platform(platform) eq "windows"} {
foreach volume [file volumes] {
set volume [string toupper $volume]
if {[string match "?:/" $volume]} {
lappend volumes $volume
lappend folders [list $volume [string range $volume 0 1]]
}
}

set volume [lindex [file split $cwd] 0]
if {[lsearch -exact $volumes $volume] < 0} {
lappend folders [list $volume $volume]
}
} else {
lappend folders [list / /]
}
}

foreach list $folders {
set dir   [lindex $list 0]
set text  [lindex $list 1]
set image [lindex $list 2]

if {![string length $image]} { set image [BWidget::Icon folder16] }

set nodes(root,$dir) [incr nodes(count)]
$tree insert end root $nodes(root,$dir) -text $text -image $image  -data $dir -drawcross allways
}

set name [Widget::getoption $dialog -name]
if {[info exists dialogs($name)]} { set cwd $dialogs($name) }

if {[file exists $cwd]} {
set dirpath [list]
foreach sub [file split $cwd] {
if {![llength $dirpath]} {
set node $nodes(root,$sub)
set rootNode $node

lappend dirpath $sub
$tree itemconfigure $node -open 1
} else {
set parent $node
lappend dirpath $sub
set subpath [eval file join $dirpath]

if {![info exists nodes($rootNode,$subpath)]} {
set nodes($rootNode,$subpath) [incr nodes(count)]
$tree insert end $parent $nodes($rootNode,$subpath)  -open 1 -image [BWidget::Icon folder16] -text $sub  -data $subpath
}
set node $nodes($rootNode,$subpath)
}

ChooseDirectory::_open_directory $path $tree $node
}

_select_directory $path $tree $node
} elseif {$initdir ne ""} {
set folder [file nativename [file normalize $initdir]]
}

$frame.e selection range 0 end

set result [Dialog::draw $path $frame.e]

set dir $folder

destroy $path

if {$result == 2} { return }

if {[string length $name]} { set dialogs($name) $dir }

return $dir
}


proc ChooseDirectory::_select_directory { path tree node } {
$tree see $node
$tree selection set $node
ChooseDirectory::_selection_change $path $tree
}


proc ChooseDirectory::_selection_change { path tree } {
Widget::getVariable $path folder

set node   [$tree selection get]
set folder [file nativename [$tree itemcget $node -data]]

[$path getframe].e selection clear

if {[file writable $folder]} {
ButtonBox::itemconfigure $path.bbox 0 -state normal
} else {
ButtonBox::itemconfigure $path.bbox 0 -state disabled
}
}


proc ChooseDirectory::_open_directory { path tree node } {
Widget::getVariable $path#choosedir nodes

set parent   [$tree parent $node]
set rootNode $node
while {$parent ne "root"} {
set rootNode $parent
set parent   [$tree parent $parent]
}

set sort -ascii
if {$::tcl_platform(platform) eq "windows"} { set sort -dict }

set rootdir [$tree itemcget $node -data]

set dirs [glob -nocomplain -type d -dir $rootdir *]
eval lappend dirs [glob -nocomplain -type {d hidden} -dir $rootdir *]

set found 0
set include [Widget::getoption $path#choosedir -includevfs]
foreach dir [lsort $sort $dirs] {
if {!$include && [string match "*vfs*" [file system $dir]]} { continue }
set tail [file tail $dir]
if {$tail eq "." || $tail eq ".."} { continue }

set found 1
if {![info exists nodes($rootNode,$dir)]} {
set nodes($rootNode,$dir) [incr nodes(count)]
$tree insert end $node $nodes($rootNode,$dir)  -drawcross allways -image [BWidget::Icon folder16]  -text [file tail $dir] -data $dir
}
}

set opts [list -open 1 -image [BWidget::Icon folderopen16]]

if {!$found} { lappend opts -drawcross never }
eval [list $tree itemconfigure $node] $opts
}


proc ChooseDirectory::_close_directory { path tree node } {
$tree itemconfigure $node -image [BWidget::Icon folder16]
}


proc ChooseDirectory::_next_directory { root text } {
set i 1
set dir [file join $root $text]
while {[file exists $dir]} {
set dir [file join $root "$text ([incr i])"]
}
return $dir
}


proc ChooseDirectory::_create_directory { path tree } {
Widget::getVariable $path folder
Widget::getVariable $path#choosedir nodes

set sel [lindex [$tree selection get] 0]
$tree itemconfigure $sel -open 1

set text [_next_directory $folder "New Folder"]
set i [$tree insert end $sel new#auto -text [file tail $text]  -image [BWidget::Icon folder16]]

$tree edit $i [file tail $text]  [list ChooseDirectory::_verify_new_directory $path $tree $i] 1

set dir [file join $folder [$tree itemcget $i -text]]

set parent   [$tree parent $sel]
set rootNode $sel
while {$parent ne "root"} {
set rootNode $parent
set parent   [$tree parent $parent]
}

set nodes($rootNode,$dir) [incr nodes(count)]
set node $nodes($rootNode,$dir)

$tree delete $i
$tree insert end $sel $node -text [file tail $dir] -data $dir  -image [BWidget::Icon folder16]

_select_directory $path $tree $node

file mkdir $dir
}


proc ChooseDirectory::_verify_new_directory { path tree node newtext } {
Widget::getVariable $path folder

set txt [$tree itemcget $node -text]
if {![string length $newtext]} { set newtext $txt }

set dir [file join $folder $newtext]

if {[regexp {[/\\:\*\?\"<>|]} $newtext]} {
set title  "Error Renaming File or Folder"
set msg "A directory name cannot contain any of the following characters:\n\t\\ / : * ? \" < > |"
tk_messageBox -parent $path -icon error -title $title -message $msg
return 0
}

if {[file exists $dir]} {
set title  "Error Renaming File or Folder"
set    msg "Cannot rename $txt: A file with the name you specified "
append msg "already exists. Specify a different file name."
tk_messageBox -parent $path -icon error -title $title -message $msg
return 0
}

$tree itemconfigure $node -text $newtext
return 1
}


proc ChooseDirectory::_update_ok_button { path args } {
if {[Widget::exists $path]} {
Widget::getVariable $path folder
if {[string trim $folder] eq ""} {
ButtonBox::itemconfigure $path.bbox 1 -state disabled
} else {
ButtonBox::itemconfigure $path.bbox 1 -state normal
}
}
}


proc ChooseDirectory::_validate_directory { path } {
Widget::getVariable $path folder

set dir $folder
if {[file pathtype $dir] eq "relative"} {
set dir [file join [pwd] $dir]
}
set dirs [file split $dir]
if {$::tcl_platform(platform) eq "windows"} {
set drive [lindex $dirs 0]
if {[string match {[a-zA-Z]:/} $drive]} {
set dirs [lrange $dirs 1 end]
}
}

foreach dir $dirs {
if {[regexp {[:\*\?\"<>|]} $dir]} {
set title  "Error in Folder Name"
set msg "A directory name cannot contain any of the following characters:\n\t\\ / : * ? \" < > |"
tk_messageBox -parent $path -icon error -title $title -message $msg
return
}
}

set folder [file normalize $folder]

$path enddialog 1
}


proc ChooseDirectory::_destroy { path } {
Widget::destroy $path#choosedir
Widget::destroy $path
}


namespace eval ChooseFile {
if {[BWidget::using ttk]} {
Widget::define ChooseFile choosefile Dialog ScrolledWindow  ListBox IconLibrary
} else {
Widget::define ChooseFile choosefile Dialog ScrolledWindow  ComboBox ListBox IconLibrary
}

Widget::bwinclude ChooseFile Dialog :cmd

Widget::declare ChooseFile {
{-name             String   ""         1}
{-type             Enum     "open"     0 {open save}}
{-folders          String   ""         0}
{-restrictdir      Boolean  0          0}
{-defaultextension String   ""         0}
{-filetypes        String   ""         0}
{-initialdir       String   ""         0}
{-initialfile      String   ""         0}
{-multiple         Boolean  0          0}
{-message          String   ""         0}
{-title            String   ""         0}
{-includevfs       Boolean  0          0}
}

bind ChooseFile <Map>     [list ChooseFile::_map %W]
bind ChooseFile <Destroy> [list ChooseFile::_destroy %W]
}


proc ChooseFile::create { path args } {
variable dialogs

BWidget::LoadBWidgetIconLibrary

set dialog $path#choosefile

array set maps [Widget::splitArgs $args Dialog ChooseFile]

Widget::initFromODB ChooseFile $dialog $maps(ChooseFile)

Widget::getVariable $dialog data

set data(histidx)    0
set data(history)    [list]
set data(realized)   0
set data(showHidden) 0

set n [expr {20 / [set x [font measure TkTextFont " "]]}]
if {$x * $n < 20} { incr n }
set data(comboSpaces) $n
set data(listboxPadx) [expr {$n * $x}]

set type [Widget::getoption $dialog -type]

array set _args $args
if {![info exists _args(-title)]} {
if {$type eq "open"} {
set title "Open"
} elseif {$type eq "save"} {
set title "Save As"
}
} else {
set title $_args(-title)
}

Widget::setoption $dialog -title $title

eval [list Dialog::create $path -class ChooseFile -geometry 400x250  -modal local -title $title] $maps(:cmd) $maps(Dialog)
wm minsize  $path 400 250
wm protocol $path WM_DELETE_WINDOW [list ChooseFile::enddialog $path 0]
bind $path <Escape> [list ChooseFile::enddialog $path 0]

set frame [Dialog::getframe $path]

grid rowconfigure    $frame 2 -weight 1
grid columnconfigure $frame 1 -weight 1

set pady 2
set message [Widget::getoption $dialog -message]

if {[string length $message]} {
set pady 0
Label $frame.message -anchor w -autowrap 1 -justify left -text $message
grid  $frame.message -row 0 -column 1 -sticky new -pady {0 5}
}

set f [frame $frame.top -height 26]
grid $f -row 1 -column 1 -sticky ew -padx 5 -pady $pady

label $f.l -text "Look in:"
pack  $f.l -side left

set data(FolderCombo) $f.cb

if {[BWidget::using ttk]} {
set comboBoxCmd   ttk::combobox
set comboBoxEvent <<ComboboxSelected>>
set opts [list -style Toolbutton]
set bwidth ""

$comboBoxCmd $data(FolderCombo) -state readonly  -textvariable [Widget::widgetVar $dialog data(dirtail)]

set popdown ::tile::combobox::PopdownShell
if {![string length [info commands $popdown]]} {
set popdown ::ttk::combobox::PopdownShell
}
set shell [$popdown $data(FolderCombo)]
set listbox $shell.l
destroy $listbox $shell.sb

bind $shell <Unmap> [list after idle [list focus $frame.listbox]]

ScrolledWindow $shell.sw
grid $shell.sw -row 0 -column 0 -sticky news

ListBox $listbox -borderwidth 2 -relief flat -deltay 18  -highlightthickness 0 -selectmode single -selectfill 1  -yscrollcommand [list $shell.sb set] -padx $data(listboxPadx)
$shell.sw setwidget $listbox

$listbox bindText  <1>  [list ChooseFile::_select_folder $path $data(FolderCombo)]
$listbox bindImage <1>  [list ChooseFile::_select_folder $path $data(FolderCombo)]

$listbox bindText  <Enter> [list $listbox selection set]
$listbox bindImage <Enter> [list $listbox selection set]

set data(FolderListBox) $listbox
} else {
set comboBoxCmd   ComboBox
set comboBoxEvent <<ComboBoxSelected>>
set opts [list -relief link]
set bwidth 12

$comboBoxCmd $data(FolderCombo) -editable 0 -usebwlistbox 1  -hottrack 1 -textvariable [Widget::widgetVar $dialog data(dirtail)]

set data(FolderListBox) [$data(FolderCombo) getlistbox]
$data(FolderListBox) configure -deltay 18 -padx $data(listboxPadx)

bind $data(FolderCombo) <<ComboBoxSelected>>  [list ChooseFile::_select_folder $path $data(FolderCombo)]
}
pack $data(FolderCombo) -side left -padx 5 -expand 1 -fill both

set data(FolderIconLabel) [label $path.icon -bg #FFFFFF]

ButtonBox $f.bbox -spacing 1
pack $f.bbox -side left

eval [list $f.bbox add -image [BWidget::Icon actback16]  -command [list ChooseFile::_back $path]  -helptext "Go To Last Folder Visited"] $opts

eval [list $f.bbox add -image [BWidget::Icon actup16]  -command [list ChooseFile::_up $path]  -helptext "Up One Level"] $opts

eval [list $f.bbox add -image [BWidget::Icon foldernew16]  -command [list ChooseFile::_create_directory $path]  -helptext "Create New Folder"] $opts

if 0 {
menu $path.viewPopup -tearoff 0
$path.viewPopup add radiobutton -label "List"
$path.viewPopup add radiobutton -label "Details"

if {[BWidget::using ttk]} {
ttk::menubutton $f.view -menu $path.viewPopup
} else {
menubutton $f.view -menu $path.viewPopup
}
$f.view configure -image [BWidget::Icon viewmulticolumn16]
pack $f.view -side left
} ; # if 0

ScrolledWindow $frame.sw
grid $frame.sw -row 2 -column 1 -sticky news -padx 5 -pady {2 5}

set selectmode single
if {[Widget::getoption $dialog -type] eq "open"
&& [Widget::getoption $dialog -multiple]} { set selectmode multiple }

ListBox $frame.listbox -deltay 18 -multicolumn 1 -selectmode $selectmode
$frame.sw setwidget $frame.listbox

bind $frame.listbox <<ListboxSelect>>  [list ChooseFile::_update_selection $path]

$frame.listbox bindText  <Double-1> [list ChooseFile::_double_click $path]
$frame.listbox bindImage <Double-1> [list ChooseFile::_double_click $path]

ttk::checkbutton $frame.hiddencb -text "Show hidden directories"  -variable [Widget::widgetVar $dialog data(showHidden)]  -command  [list ChooseFile::_refresh_view $path]
grid $frame.hiddencb -row 3 -column 1 -sticky nw -padx 10 -pady 2

set f [frame $frame.bottom]
grid $f -row 4 -column 1 -sticky ew -padx 5

grid columnconfigure $f 1 -weight 1

label $f.fileNameL -text "File name:"
grid  $f.fileNameL -row 0 -column 0 -pady 2

set data(FileEntry) $f.fileNameCB

if {[BWidget::using ttk]} {
ttk::entry $data(FileEntry)  -textvariable [Widget::widgetVar $dialog data(filetail)]
} else {
entry $data(FileEntry)  -textvariable [Widget::widgetVar $dialog data(filetail)]
}
grid $data(FileEntry) -row 0 -column 1 -padx 20 -pady 2 -sticky ew

bind $data(FileEntry) <Return> [list ChooseFile::enddialog $path 1]

focus $data(FileEntry)

Button $f.ok -text [string totitle $type] -width $bwidth  -command [list ChooseFile::enddialog $path 1]
grid $f.ok -row 0 -column 2 -pady 2 -sticky ew

label $f.fileTypeL -text "Files of type:"
grid  $f.fileTypeL -row 1 -column 0 -pady 2

$comboBoxCmd $f.fileTypeCB -state readonly  -textvariable [Widget::widgetVar $dialog data(filetype)]
grid $f.fileTypeCB -row 1 -column 1 -pady 2 -padx 20 -sticky ew

bind $f.fileTypeCB $comboBoxEvent [list ChooseFile::_select_filetype $path]

Button $f.cancel -text "Cancel" -width $bwidth  -command [list ChooseFile::enddialog $path 0]
grid $f.cancel -row 1 -column 2 -pady 2 -sticky ew

set name       [Widget::getoption $dialog -name]
set initialdir [Widget::getoption $dialog -initialdir]

if {![string length $initialdir]} {
if {[info exists dialogs($name)]} {
set initialdir [lindex $dialogs($name) 0]
} else {
set initialdir [pwd]
}
}

set initialfile [Widget::getoption $dialog -initialfile]
if {![string length $initialfile]} {
if {[info exists dialogs($name)]} {
set initialfile [lindex $dialogs($name) 1]
}
}

if {[string length $initialfile]} {
set initialdir [file dirname $initialfile]
}

Widget::setoption $dialog -initialdir  [file normalize $initialdir]
Widget::setoption $dialog -initialfile [file normalize $initialfile]

set filetypes [Widget::getoption $dialog -filetypes]
if {![llength $filetypes]} {
set filetypes {{"All Files" *}}
}

foreach typelist $filetypes {
set txt [lindex $typelist 0]
foreach ext [lindex $typelist 1] {
if {[string index $ext 0] ne "."} { set ext .$ext }
set ext [file extension $ext]
if {![info exists exts($txt)]} { lappend exts(list) $txt }
lappend exts($txt) *$ext
}
}

set first   1
set default [Widget::getoption $dialog -defaultextension]
foreach txt $exts(list) {
set text "$txt ([join [lsort $exts($txt)] ,])"
lappend values $text

foreach ext $exts($txt) {
set ext [file extension $ext]
lappend data(filetype,$text) [string tolower $ext]
if {$::tcl_platform(platform) ne "windows" && $ext ne ".*"} {
lappend data(filetype,$text) [string toupper $ext]
}
}

if {![info exists data(filetype)]} {
if {[string length $default]} {
foreach ext $exts($txt) {
if {$ext eq "*$default"} {
set data(filetype) $text
}
}
} else {
if {$first} {
set first 0
set data(filetype) $text
}
}
}
}
$f.fileTypeCB configure -values $values

set result [Dialog::draw $path]

set file ""
if {$result} { set file $data(file) }

destroy $path

return $file
}


proc ChooseFile::enddialog { path result } {
set dialog $path#choosefile
Widget::getVariable $dialog data

if {$result} {
if {![info exists data(filetail)]} { return }

set type [Widget::getoption $dialog -type]
if {$type eq "save"} {
set file [file join $data(directory) $data(filetail)]

set ext [Widget::getoption $dialog -defaultextension]
if {![string length [file extension $file]]} {
set filetype [lindex $data(filetype,$data(filetype)) 0]
if {$filetype ne ".*"} {
set ext [string range $filetype 1 end]
}
append file .$ext
}

if {[file exists $file]} {
set title   [Widget::getoption $dialog -title]
set message "$file already exists.\nDo you want to replace it?"
set res [MessageDlg $path.__replaceFile -type yesno  -icon warning -title $title -message $message]
if {$res eq "no"} {
focus $data(FileEntry)
return
}
}

set data(file) $file
} elseif {$type eq "open"} {
if {![string match {"*"} $data(filetail)]} {
set file [file join $data(directory) $data(filetail)]

if {![file exists $file]} {
set tail    [file tail $file]
set title   [Widget::getoption $dialog -title]
set message "$tail\nFile not found.\nPlease verify the correct file name was given."
set res [MessageDlg $path.__replaceFile -type ok  -icon warning -title $title -message $message]
focus $data(FileEntry)
return
}

if {[Widget::getoption $dialog -multiple]} {
set data(file) [list $file]
} else {
set data(file) $file
}
} else {
foreach tail $data(filetail) {
set file [file join $data(directory) $tail]

if {![file exists $file]} {
set title   [Widget::getoption $dialog -title]
set message "$tail\nFile not found.\nPlease verify the correct file name was given."
set res [MessageDlg $path.__replaceFile -type ok  -icon warning -title $title -message $message]
focus $data(FileEntry)
return
}

lappend files $file
}

set data(file) $files
}
}
}

set [Widget::widgetVar $path data(result)] $result
}


proc ChooseFile::getlistbox { path } {
return [Dialog::getframe $path].listbox
}


proc ChooseFile::_update_folders { path } {
set dialog $path#choosefile

Widget::getVariable $dialog data

$data(FolderListBox) clear

set folders  [Widget::getoption $dialog -folders]
set restrict [Widget::getoption $dialog -restrictdir]
if {!$restrict && ![llength $folders]} {
set desktop     [file normalize [file join ~ Desktop]]
set myDocuments [file normalize [file join ~ Documents]]
if {[info exists ::env(HOME)]} {
set desktopText Desktop

if {$::tcl_platform(platform) eq "windows"} {
set myDocumentsText "My Documents"
} else {
set myDocumentsText "Documents"
}

set desktop     [file join $::env(HOME) $desktopText]
set myDocuments [file join $::env(HOME) $myDocumentsText]
}

if {$::tcl_platform(platform) ne "windows" && [file exists ~]} {
lappend folders [list [file normalize ~] "Home"]
}

if {[file exists $desktop]} {
lappend folders [list $desktop "Desktop"]
}

if {[file exists $myDocuments]} {
lappend folders [list $myDocuments $myDocumentsText]
}

foreach volume [file volumes] {
if {![string match "*vfs" [lindex [file system $volume] 0]]} {
lappend folders [list $volume $volume]
}
}
}

if {!$restrict} {
set i 0
foreach list $folders {
set dir   [file normalize [lindex $list 0]]
set text  [lindex $list 1]
set image [lindex $list 2]

if {![string length $image]} { set image [BWidget::Icon folder16] }

$data(FolderListBox) insert end #auto -text $text  -data $dir -image $image
lappend values $text

set folderdirs($dir) $i
incr i
}
}

set i       0
set idx     end
set dirlist [list]
foreach x [file split $data(directory)] {
lappend dirlist $x
if {[info exists folderdirs($x)]} {
set idx $folderdirs($x)
} else {
set dir [file normalize [eval file join $dirlist]]
$data(FolderListBox) insert $idx #auto -text $x  -data $dir -indent [expr {$i * 20}]  -image [BWidget::Icon folder16]
lappend values $x
}

incr i

if {[string is integer $idx]} { incr idx }
}

if {[BWidget::using ttk]} {
$data(FolderCombo) configure -values $values
}
}


proc ChooseFile::_update_selection { path {item ""} } {
Widget::getVariable $path#choosefile data

set listbox [ChooseFile::getlistbox $path]
if {[string length $item]} {
set sel [list $item]
$listbox selection set $item
} else {
set sel [$listbox selection get]
}

set files [list]
foreach item $sel {
if {![$listbox exists $item]} { continue }

set file [$listbox itemcget $item -data]

if {[file isfile $file]} {
if {[llength $sel] == 1} {
set files [file tail $file]
} else {
lappend files \"[file tail $file]\"
}
}
}

set data(filetail) [join $files " "]
}


proc ChooseFile::_double_click { path item } {
Widget::getVariable $path#choosefile data

set listbox [ChooseFile::getlistbox $path]

set file [$listbox itemcget $item -data]

if {[file isfile $file]} {
set data(file)     [file normalize $file]
set data(filetail) [file tail $data(file)]
ChooseFile::enddialog $path 1
} else {
ChooseFile::_select_directory $path $file
}
}


proc ChooseFile::_refresh_view { path } {
Widget::getVariable $path#choosefile data
ChooseFile::_select_directory $path $data(directory)
}


proc ChooseFile::_select_directory { path directory {appendHistory 1} } {
set dialog $path#choosefile

Widget::getVariable $dialog data

set directory  [file normalize $directory]
set initialdir [Widget::getoption $dialog -initialdir]

[Dialog::getframe $path].top.bbox.b1 configure -state normal
if {[Widget::getoption $dialog -restrictdir]} {
if {$directory eq $initialdir} {
[Dialog::getframe $path].top.bbox.b1 configure -state disabled
}

if {![string match $initialdir* $directory]} {
set directory $initialdir
}
}

if {[file dirname $directory] eq $directory} {
[Dialog::getframe $path].top.bbox.b1 configure -state disabled
}

set data(directory) $directory
set data(dirtail)   [file tail $data(directory)]
if {![string length $data(dirtail)]} { set data(dirtail) $directory }

if {$appendHistory} {
lappend data(history) $data(directory)
set data(histidx) [expr {[llength $data(history)] - 1}]
}

if {$data(histidx) == 0} {
[Dialog::getframe $path].top.bbox.b0 configure -state disabled
} else {
[Dialog::getframe $path].top.bbox.b0 configure -state normal
}

set n $data(comboSpaces)
set data(dirtail) [string repeat " " $n]$data(dirtail)
if {![BWidget::using ttk]} {
$data(FolderCombo).e selection clear
}

ChooseFile::_update_folders $path

place forget $data(FolderIconLabel)
foreach item [$data(FolderListBox) items] {
if {$directory eq [$data(FolderListBox) itemcget $item -data]} {
$data(FolderIconLabel) configure  -image [$data(FolderListBox) itemcget $item -image]
set y [expr {[winfo height $data(FolderCombo)] / 2}]
place $data(FolderIconLabel) -x 4 -y $y -anchor w  -in $data(FolderCombo)
break
}
}

set listbox [ChooseFile::getlistbox $path]

$listbox clear

set sort -ascii
if {$::tcl_platform(platform) eq "windows"} { set sort -dict }

set dirs [glob -nocomplain -dir $directory -type d *]
if {$data(showHidden)} {
eval lappend dirs [glob -nocomplain -dir $directory -type {d hidden} *]
}

set include [Widget::getoption $dialog -includevfs]
foreach dir [lsort $sort $dirs] {
if {!$include && [string match "*vfs*" [file system $dir]]} { continue }
set tail [file tail $dir]
if {$tail eq "." || $tail eq ".."} { continue }
$listbox insert end #auto -text [file tail $dir] -data $dir  -image [BWidget::Icon folder16]
}

set windows [expr {$::tcl_platform(platform) eq "windows"}]
set files [list]

if {$data(filetype,$data(filetype)) eq ".*"} {
set patt *
} else {
set patt "*\{[join $data(filetype,$data(filetype)) ,]\}"
}

eval lappend files [glob -nocomplain -dir $directory -type f $patt]
eval lappend files [glob -nocomplain -dir $directory -type {f hidden} $patt]

set initialfile [Widget::getoption $dialog -initialfile]
foreach file [lsort $sort $files] {
set tail [file tail $file]
if {$windows && [file extension $tail] eq ".lnk"} {
set tail [file root $tail]
}
set i [$listbox insert end #auto -text $tail  -data $file -image [BWidget::Icon mimeunknown16]]
if {!$data(realized) && $file eq $initialfile} {
$listbox selection set $i
}
}
}


proc ChooseFile::_select_folder { path combo {item ""} } {
Widget::getVariable $path#choosefile data

set listbox $data(FolderListBox)
if {![string length $item]} { set item [$listbox selection get] }
ChooseFile::_select_directory $path [$listbox itemcget $item -data]

if {[BWidget::using ttk]} {
set unpost ::tile::combobox::Unpost
if {![string length [info commands $unpost]]} {
set unpost ::ttk::combobox::Unpost
}
$unpost $data(FolderCombo)
}

focus [ChooseFile::getlistbox $path]
}


proc ChooseFile::_select_filetype { path } {
Widget::getVariable $path#choosefile data
ChooseFile::_select_directory $path $data(directory)
}


proc ChooseFile::_back { path } {
Widget::getVariable $path#choosefile data
incr data(histidx) -1
ChooseFile::_select_directory $path [lindex $data(history) $data(histidx)] 0
}


proc ChooseFile::_up { path } {
Widget::getVariable $path#choosefile data
ChooseFile::_select_directory $path [file dirname $data(directory)]
}


proc ChooseFile::_next_directory { root text } {
set i 1
set dir [file join $root $text]
while {[file exists $dir]} {
set dir [file join $root "$text ([incr i])"]
}
return $dir
}


proc ChooseFile::_create_directory { path } {
Widget::getVariable $path#choosefile data

set listbox [ChooseFile::getlistbox $path]

set i    [$listbox insert end #auto -image [BWidget::Icon folder16]]
set text [_next_directory $data(directory) "New Folder"]

while {1} {
set result [$listbox edit $i [file tail $text]  [list ChooseFile::_verify_directory $path $listbox $i]]

if {![string length $result]} {
set dir $text
break
}

set txt [$listbox itemcget $i -text]
set dir [file join $data(directory) [$listbox itemcget $i -text]]

if {[file exists $dir]} {
set title  "Error Renaming File or Folder"
set    msg "Cannot rename [file tail $text]: A file with the name "
append msg "you specified already exists. Specify a different "
append msg "file name."
MessageDlg $path.__error -type ok -icon error  -title $title -message $msg
continue
}

break
}

ChooseFile::_update_selection $path $i

file mkdir $dir
}


proc ChooseFile::_verify_directory { path listbox node newtext } {
$listbox itemconfigure $node -text $newtext
return 1
}


proc ChooseFile::_map { path } {
Widget::getVariable $path#choosefile data

update idletasks
ChooseFile::_select_directory $path  [Widget::getoption $path#choosefile -initialdir]

set data(realized) 1
}


proc ChooseFile::_destroy { path } {
Widget::destroy $path#choosefile
Widget::destroy $path
}


namespace eval MessageDlg {
Widget::define MessageDlg messagedlg Dialog

if {[BWidget::using ttk]} {
Widget::tkinclude MessageDlg ttk::label .frame.msg  rename {
-text -message
} initialize {
-anchor w -justify left
}
} else {
Widget::tkinclude MessageDlg label .frame.msg  remove {
-cursor -highlightthickness -relief -borderwidth -bd
-takefocus -textvariable
} rename {
-text -message
} initialize {
-anchor w -justify left
}
}

Widget::bwinclude MessageDlg Dialog :cmd  remove {
-modal -image -bitmap -side -anchor -separator
-homogeneous -padx -pady -spacing
}

Widget::declare MessageDlg {
{-name       String     ""     0}
{-icon       Enum       "info" 0 {none error info question warning}}
{-type       Enum       "user" 0
{abortretryignore ok okcancel retrycancel yesno yesnocancel user}}
{-buttons     String    ""     0}
{-buttonwidth String    0      0}
{-usenative   Boolean   1      0}
}

Widget::addmap MessageDlg "" tkMBox {
-parent {} -message {} -default {} -title {}
}
}


proc MessageDlg::create { path args } {
variable dialogs

array set _args $args

if {[info exists _args(-name)] && [info exists dialogs($_args(-name))]} {
return $dialogs($_args(-name))
}

BWidget::LoadBWidgetIconLibrary

set dialog "$path#Message"

Widget::initArgs MessageDlg $args maps
Widget::initFromODB MessageDlg $dialog $maps(MessageDlg)

set type   [Widget::getoption $dialog -type]
set icon   [Widget::getoption $dialog -icon]
set width  [Widget::getoption $dialog -buttonwidth]
set native [Widget::getoption $dialog -usenative]

set user  0
set defb  -1
set canb  -1
switch -- $type {
abortretryignore {set lbut {abort retry ignore}; set defb 0}
ok               {set lbut {ok}; set defb 0 }
okcancel         {set lbut {ok cancel}; set defb 0; set canb 1}
retrycancel      {set lbut {retry cancel}; set defb 0; set canb 1}
yesno            {set lbut {yes no}; set defb 0; set canb 1}
yesnocancel      {set lbut {yes no cancel}; set defb 0; set canb 2}
user             {
set user   1
set native 0
set lbut [Widget::cget $dialog -buttons]
}
}

array set dialogArgs $maps(:cmd)

if {!$user && ![info exists dialogArgs(-default)]} {
lappend maps(:cmd)   -default [lindex $lbut $defb]
lappend maps(tkMBox) -default [lindex $lbut $defb]
}

if {![info exists dialogArgs(-cancel)]} {
lappend maps(:cmd) -cancel $canb
}

if {![info exists dialogArgs(-title)]} {
set frame [frame $path -class MessageDlg]
set title [option get $frame "${icon}Title" MessageDlg]
destroy $frame
if {![string length $title]} {
set title "Message"
}
lappend maps(:cmd) -title $title
lappend maps(tkMBox) -title $title
}

set name [Widget::getoption $dialog -name]
if {[string length $name]} { set native 0 }

if {!$native} {
if {!$user && !$width} { set width 12 }

set image ""
if {![string equal $icon "none"]} {
set image [BWidget::Icon dialog$icon]
}

eval [list Dialog::create $path] $maps(:cmd)  [list -image $image -modal local -side bottom -anchor c]
wm resizable $path 0 0

bind $path <Key-Left>  [list MessageDlg::_key_traversal $path left]
bind $path <Key-Right> [list MessageDlg::_key_traversal $path right]

foreach but $lbut {
Dialog::add $path -text $but -name $but -width $width
}

set frame [Dialog::getframe $path]

if {[BWidget::using ttk]} {
eval [list ttk::label $frame.msg] $maps(.frame.msg) -wraplength 800
} else {
eval [list label $frame.msg] $maps(.frame.msg)  -relief flat -bd 0 -highlightthickness 0 -wraplength 800
}

pack $frame.msg -fill both -expand 1 -padx {5 10} -pady {5 0}

if {[string length $name]} {
set msg "Don't ask me again"
set varName [Widget::widgetVar $dialog dontAskAgain]
if {[BWidget::using ttk]} {
ttk::checkbutton $path.check -text $msg -variable $varName
} else {
checkbutton $path.check -text $msg -variable $varName
}

pack $path.check -anchor w -side bottom -pady {0 2}

bind $path.bbox <Map> [list pack configure $path.bbox -pady 5]
}

set res [Dialog::draw $path]
if {!$user} { set res [lindex $lbut $res] }

destroy $path
} else {
array set tkMBoxArgs $maps(tkMBox)

if {![string equal $icon "none"]} {
set tkMBoxArgs(-icon) $icon
}

if {[info exists tkMBoxArgs(-parent)]
&& ![winfo exists $tkMBoxArgs(-parent)]} {
unset tkMBoxArgs(-parent)
}

set tkMBoxArgs(-type) $type
set res [eval tk_messageBox [array get tkMBoxArgs]]
}

if {[string length $name]} {
upvar #0 $varName var
if {$var} { set dialogs($name) $res }
}

Widget::destroy $dialog

return $res
}


proc MessageDlg::_key_traversal { path dir } {
set but [focus -lastfor $path]
if {$but eq $path} {
set def [ButtonBox::index $path.bbox default]
set but [ButtonBox::index $path.bbox $def]
ButtonBox::configure $path.bbox -default -1
}

set idx [ButtonBox::index $path.bbox $but]
set max [ButtonBox::index $path.bbox end]

if {$dir eq "left"} { incr idx -1 }
if {$dir eq "right"} { incr idx 1 }

if {$idx < 0} { set idx $max }
if {$idx > $max} { set idx 0 }

focus [ButtonBox::buttons $path.bbox $idx]
}


namespace eval Text {
Widget::define Text text

Widget::tkinclude Text text :cmd  remove { -state -foreground -background }

Widget::declare Text {
{-state               Enum    "normal" 0 {disabled normal readonly}}
{-textvariable        String  "" 0}
{-background          Color   "SystemWindow" 0}
{-foreground          Color   "SystemWindowText" 0}
{-disabledbackground  Color   "SystemButtonFace" 0}
{-disabledforeground  Color   "SystemDisabledText" 0}

{-bg                  Synonym -background}
}

bind ReadonlyText <1>   {focus %W}
bind ReadonlyText <Key> {Text::_handle_key_movement %W %K}
}


proc Text::create { path args } {
Widget::initArgs Text $args maps

eval [list text $path] $maps(:cmd)
Widget::initFromODB Text $path $maps(Text)

bind $path <Destroy> [list Text::_destroy $path]
bindtags $path [list $path ReadonlyText Text [winfo toplevel $path] all]

Widget::getVariable $path data

set data(varName) ""

set state [Widget::getoption $path -state]

if {$state eq "disabled" || $state eq "readonly"} {
$path configure -insertwidth 0
}

if {$state eq "disabled"} {
$path configure  -foreground [Widget::getoption $path -disabledforeground]  -background [Widget::getoption $path -disabledbackground]
}

Widget::create Text $path

Text::_trace_variable $path

proc ::$path { cmd args }  "return \[Text::_path_command [list $path] \$cmd \$args\]"

return $path
}


proc Text::configure { path args } {
set oldstate [Widget::getoption $path -state]

set res [Widget::configure $path $args]

if {[Widget::anyChangedX $path -state -background -foreground]} {
set state [Widget::getoption $path -state]

if {$state ne "normal"} {
$path:cmd configure -insertwidth 0
} else {
$path:cmd configure -insertwidth 2
}

if {$state eq "disabled"} {
$path:cmd configure  -foreground [Widget::getoption $path -disabledforeground]  -background [Widget::getoption $path -disabledbackground]
} else {
$path:cmd configure  -foreground [Widget::cget $path -foreground]  -background [Widget::cget $path -background]
}
}

if {[Widget::hasChanged $path -textvariable textvar]} {
Text::_trace_variable $path
}

return $res
}


proc Text::cget { path option } {
if { [string equal "-text" $option] } {
return [$path:cmd get]
}
Widget::cget $path $option
}


proc Text::clear { path } {
$path:cmd delete 1.0 end
}


proc Text::insert { path args } {
if {[Widget::getoption $path -state] eq "normal"} {
eval [list $path:cmd insert] $args
Text::_trace_variable $path 1
}
}


proc Text::delete { path args } {
if {[Widget::getoption $path -state] eq "normal"} {
eval [list $path:cmd delete] $args
Text::_trace_variable $path 1
}
}


proc Text::Insert { path args } {
eval [list $path:cmd insert] $args
}


proc Text::Delete { path args } {
eval [list $path:cmd delete] $args
}


proc Text::_path_command { path cmd larg } {
if {[info commands ::Text::$cmd] ne ""} {
return [eval [linsert $larg 0 Text::$cmd $path]]
} else {
return [eval [linsert $larg 0 $path:cmd $cmd]]
}
}


proc Text::_trace_variable { path {doSet 0} } {
Widget::getVariable $path data

set varName [Widget::getoption $path -textvariable]

if {$data(varName) eq "" && $varName eq ""} { return }

set ops [list unset write]
set cmd [list Text::_handle_variable_trace $path]

uplevel #0 [list trace remove variable $data(varName) $ops $cmd]

set data(varName) $varName

if {$varName ne ""} {
upvar #0 $varName var

if {$doSet} {
set var [$path:cmd get 1.0 end-1c]
} else {
if {![info exists var]} { set var "" }

$path:cmd delete 1.0 end
$path:cmd insert end $var
}

uplevel #0 [list trace add variable $varName $ops $cmd]
}
}


proc Text::_handle_variable_trace { path name1 name2 op } {
if {$name2 ne ""} {
upvar #0 ${name1}($name2) var
} else {
upvar #0 $name1 var
}

if {$op eq "write"} {
$path:cmd delete 1.0 end
$path:cmd insert end $var
} else {
set var [$path:cmd get 1.0 end-1c]
}
}


proc Text::_handle_key_movement { path key } {
if {[Widget::getoption $path -state] eq "readonly"} {
switch -- $key {
"Up"    { set cmd [list yview scroll -1 unit] }
"Down"  { set cmd [list yview scroll  1 unit] }
"Left"  { set cmd [list xview scroll -1 unit] }
"Right" { set cmd [list xview scroll  1 unit] }
"Prior" { set cmd [list yview scroll -1 page] }
"Next"  { set cmd [list yview scroll  1 page] }
"Home"  { set cmd [list yview moveto 0.0] }
"End"   { set cmd [list yview moveto 1.0] }
}
if {[info exists cmd]} {
eval [list $path:cmd] $cmd
return -code break
}
}
}


proc Text::_destroy { path } {
Widget::getVariable $path data

set ops [list unset write]
set cmd [list Text::_handle_variable_trace $path]

uplevel #0 [list trace remove variable $data(varName) $ops $cmd]

Widget::destroy $path
}


namespace eval Wizard {
Widget::define Wizard wizard ButtonBox Separator

namespace eval Step {
Widget::declare Wizard::Step {
{-background      Color2     ""       0  }
{-backgroundimage String     ""       0  }
{-type            String     "step"   1  }
{-data            String     ""       0  }
{-title           String     ""       0  }
{-default         String     "next"   0  }

{-text1           String     ""       0  }
{-text2           String     ""       0  }
{-text3           String     ""       0  }
{-text4           String     ""       0  }
{-text5           String     ""       0  }

{-icon            String     ""       0  }
{-image           String     ""       0  }

{-bitmap          String     ""       0  }
{-iconbitmap      String     ""       0  }

{-createstep      Boolean2    ""      1  }
{-appendorder     Boolean    "1"      0  }

{-nexttext        String     ""       0  }
{-backtext        String     ""       0  }
{-helptext        String     ""       0  }
{-canceltext      String     ""       0  }
{-finishtext      String     ""       0  }
{-separatortext   String     ""       0  }

{-separator       Boolean2   ""       0  }

{-command         String     ""       0  }

{-createcommand   String     ""       0  }
{-raisecommand    String     ""       0  }
{-nextcommand     String     ""       0  }
{-backcommand     String     ""       0  }
{-helpcommand     String     ""       0  }
{-cancelcommand   String     ""       0  }
{-finishcommand   String     ""       0  }

{-compoundraise   Boolean    "1"      0  }
{-compoundcreate  Boolean    "1"      0  }

{-bg              Synonym    -background }
}
}

namespace eval Branch {
Widget::declare Wizard::Branch {
{-type            String     "branch" 1  }
{-command         String     ""       0  }
{-action          Enum       "merge"  0  {merge terminate} }
}
}

namespace eval Widget {
Widget::declare Wizard::Widget {
{-type            String     "widget" 1  }
{-step            String     ""       1  }
{-widget          String     ""       1  }
}
}

namespace eval layout {}

Widget::tkinclude Wizard frame :cmd  include    { -background -foreground -cursor }

Widget::declare Wizard {
{-type            Enum       "dialog" 1 {dialog frame} }
{-width           TkResource "0"      0 frame}
{-height          TkResource "0"      0 frame}
{-minwidth        Int        "475"    0 "%d >= 0"}
{-minheight       Int        "350"    0 "%d >= 0"}
{-relief          TkResource "flat"   0 frame}
{-borderwidth     TkResource "0"      0 frame}
{-background      Color      "SystemButtonFace" 0}
{-foreground      String     "#000000" 0      }
{-backgroundimage String     ""       0      }
{-title           String     "Wizard" 0      }
{-createstep      Boolean    "0"      0      }

{-showbuttons     Boolean    "1"      1      }
{-autobuttons     Boolean    "1"      0      }
{-helpbutton      Boolean    "0"      1      }
{-finishbutton    Boolean    "0"      1      }
{-resizable       String     "0 0"    0      }
{-separator       Boolean    "1"      1      }
{-parent          String     "."      1      }
{-transient       Boolean    "1"      1      }
{-place           Enum       "center" 1
{none center left right above below} }

{-icon            String     ""       0      }
{-image           String     ""       0      }

{-bitmap          String     ""       0      }
{-iconbitmap      String     ""       0      }

{-raisecommand    String     ""       0      }
{-createcommand   String     ""       0      }

{-buttonwidth     Int        "12"     0      }
{-nexttext        String     "Next >" 0      }
{-backtext        String     "< Back" 0      }
{-helptext        String     "Help"   0      }
{-canceltext      String     "Cancel" 0      }
{-finishtext      String     "Finish" 0      }
{-separatortext   String     ""       0      }

{-fg              Synonym    -foreground     }
{-bg              Synonym    -background     }
{-bd              Synonym    -borderwidth    }
}

image create photo Wizard::none

style layout ImageFrame {Label.label -sticky nesw}

Widget::addmap Wizard "" :cmd { -background {} -relief {} -borderwidth {} }

bind Wizard <Destroy> [list Wizard::_destroy %W]
}


proc Wizard::create { path args } {
Widget::initArgs Wizard $args maps

Widget::initFromODB Wizard $path $maps(Wizard)

Widget::getVariable $path data
Widget::getVariable $path branches

array set data {
steps   ""
buttons ""
order   ""
current ""
}

array set branches {
root    ""
}

set frame $path

set type [Widget::getoption $path -type]

if {[string equal $type "dialog"]} {
set top $path
eval [list toplevel $path -bg $::BWidget::colors(SystemButtonFace)]  $maps(:cmd) -class Wizard
wm withdraw   $path
update idletasks
wm protocol   $path WM_DELETE_WINDOW [list $path cancel 1]
if {[Widget::getoption $path -transient]} {
wm transient  $path [Widget::getoption $path -parent]
}
eval wm resizable $path [Widget::getoption $path -resizable]

set minwidth  [Widget::getoption $path -minwidth]
set minheight [Widget::getoption $path -minheight]
wm minsize $path $minwidth $minheight

set width  [Widget::cget $path -width]
set height [Widget::cget $path -height]
if {$width > 0 && $height > 0} {
wm geometry $top ${width}x${height}
}

bind $path <Escape>         [list $path cancel]
bind $path <<WizardFinish>> [list destroy $path]
bind $path <<WizardCancel>> [list destroy $path]
} else {
set top [winfo toplevel $path]
eval [list frame $path] $maps(:cmd) -class Wizard
}

wm title $top [Widget::getoption $path -title]

grid rowconfigure    $top 0 -weight 1
grid columnconfigure $top 0 -weight 1

frame $path.steps
grid  $path.steps -row 0 -column 0 -sticky news

grid rowconfigure    $path.steps 0 -weight 1
grid columnconfigure $path.steps 0 -weight 1

widget $path set steps -widget $path.steps

if {[Widget::getoption $path -separator]} {
frame $path.separator
grid  $path.separator -row 1 -column 0 -sticky ew -pady [list 5 0]

grid columnconfigure $path.separator 1 -weight 1

set text [Widget::getoption $path -separatortext]

if {[BWidget::using ttk]} {
ttk::label $path.separator.l -state disabled -text $text
} else {
label $path.separator.l -bd 0 -pady 0 -state disabled -text $text
}

grid  $path.separator.l -row 0 -column 0 -sticky w -padx 2

Separator $path.separator.s -orient horizontal
grid $path.separator.s -row 0 -column 1 -sticky ew  -padx [list 0 5] -pady 4

widget $path set separator      -widget $path.separator.s
widget $path set separatortext  -widget $path.separator.l
widget $path set separatorframe -widget $path.separator
}

if {[Widget::getoption $path -showbuttons]} {
ButtonBox $path.buttons -spacing 2 -homogeneous 1
grid $path.buttons -row 2 -column 0 -sticky e -padx 5 -pady {10 5}

widget $path set buttons -widget $path.buttons

Wizard::insert $path button end back -text "< Back"  -command [list $path back 1]  -width [Widget::getoption $path -buttonwidth]
Wizard::insert $path button end next -text "Next >"  -command [list $path next 1]
if {[Widget::getoption $path -finishbutton]} {
Wizard::insert $path button end finish -text "Finish"  -command [list $path finish 1]
}
Wizard::insert $path button end cancel -text "Cancel"  -command [list $path cancel 1] -spacing 10

if {[Widget::getoption $path -helpbutton]} {
Wizard::insert $path button 0 help -text "Help"  -command [list $path help 1] -spacing 10
}
}

return [Widget::create Wizard $path]
}


proc Wizard::configure { path args } {
set res [Widget::configure $path $args]

if {[Widget::hasChanged $path -title title]} {
wm title [winfo toplevel $path] $title
}

if {[Widget::hasChanged $path -resizable resize]} {
eval wm resizable [winfo toplevel $path] $resize
}

if {[Widget::getoption $path -separator]
&& [Widget::hasChanged $path -separatortext text]} {
set text [Wizard::getoption $path [Wizard::raise $path] -separatortext]
Wizard::itemconfigure $path separatortext -text $text
}

if {[Widget::anyChangedX $path -width -height -minwidth -minheight]} {
set type    [Widget::getoption $path -type]
set width   [Widget::cget $path -width]
set height  [Widget::cget $path -height]
set mwidth  [Widget::getoption $path -minwidth]
set mheight [Widget::getoption $path -minheight]

if {[string equal $type "dialog"]} {
wm minsize $path $mwidth $mheight

if {$width > 0 && $height > 0} {
wm geometry $top ${width}x${height}
}

} else {
$path:cmd configure -width $width -height $height
}
}

return $res
}


proc Wizard::cget { path option } {
return [Widget::cget $path $option]
}


proc Wizard::itemcget { path item option } {
Widget::getVariable $path items
Widget::getVariable $path steps
Widget::getVariable $path buttons
Widget::getVariable $path widgets

if {[Wizard::_is_step $path $item]} {
return [Widget::cget $items($item) $option]
}

if {[Wizard::_is_branch $path $item]} {
return [Widget::cget $items($item) $option]
}

if {[Wizard::_is_button $path $item]} {
return [$path.buttons itemcget $items($item) $option]
}

if {[Wizard::_is_widget $path $item]} {
return [eval [$path widget get $item] cget $option]
}

return -code error "item \"$item\" does not exist"
}


proc Wizard::itemconfigure { path item args } {
Widget::getVariable $path items
Widget::getVariable $path steps
Widget::getVariable $path buttons

if {[Wizard::_is_step $path $item]} {
set i $items($item)
set res [Widget::configure $i $args]

if {$item eq [Wizard::step $path current]} {
if {[Widget::hasChanged $i -title title]} {
set title [Wizard::getoption $path $item -title]
wm title [winfo toplevel $path] $title
}

if {[winfo exists $path.separator]} {
if {[Widget::getoption $path -separator]
&& [Widget::hasChanged $i -separator separator]} {
if {[Wizard::getoption $path $item -separator]} {
grid $path.separator.s
} else {
grid remove $path.separator.s
}
}

if {[Widget::getoption $path -separator]
&& [Widget::hasChanged $i -separatortext text]} {
set text [Wizard::getoption $path $item -separatortext]
Wizard::itemconfigure $path separatortext -text $text
}
}

set x [list -nexttext -backtext -canceltext -helptext -finishtext]
if {[eval [list Widget::anyChangedX $path] $x]} {
Wizard::adjustbuttons $path
}
}

return $res
}

if {[Wizard::_is_branch $path $item]} {
return [Widget::configure $items($item) $args]
}

if {[Wizard::_is_button $path $item]} {
return [eval $path.buttons itemconfigure [list $items($item)] $args]
}

if {[Wizard::_is_widget $path $item]} {
return [eval [Wizard::widget $path get $item] configure $args]
}

return -code error "item \"$item\" does not exist"
}


proc Wizard::show { path } {
wm deiconify [winfo toplevel $path]
}


proc Wizard::hide { path } {
wm withdraw [winfo toplevel $path]
}


proc Wizard::invoke { path button } {
Widget::getVariable $path buttons
if {![info exists buttons($button)]} {
return -code error "button \"$button\" does not exist"
}
[Wizard::widget $path get $button] invoke
}


proc Wizard::insert { path type idx args } {
switch -- $type {
"button" {
set node [lindex $args 0]
set node [Widget::nextIndex $path $node]
set args [lreplace $args 0 0 $node]
}

"step" - "branch" {
set node   [lindex $args 1]
set branch [lindex $args 0]
set node   [Widget::nextIndex $path $node]
set args   [lreplace $args 1 1 $node]

if {![Wizard::_is_branch $path $branch]} {
return -code error "branch \"$branch\" does not exist"
}
}

default {
set types [list button branch step]
set err [BWidget::badOptionString option $type $types]
return -code error $err
}
}

if {[Wizard::exists $path $node]} {
return -code error "item \"$node\" already exists"
}

eval _insert_$type $path $idx $args

return $node
}


proc Wizard::delete { path args } {
Widget::getVariable $path data
Widget::getVariable $path items
Widget::getVariable $path steps
Widget::getVariable $path buttons
Widget::getVariable $path widgets
Widget::getVariable $path branches

set step [Wizard::step $path current]
foreach item $args {
set item [Wizard::step $path $item]
if {![string length $item]} { continue }

if {[Wizard::_is_step $path $item]} {

set branch [Wizard::branch $path $item]
set x [lsearch -exact $branches($branch) $item]
set branches($branch) [lreplace $branches($branch) $x $x]

destroy $widgets($item)

Widget::destroy $items($item) 0

unset steps($item)
unset data($item,branch)
unset items($item)
unset widgets($item)

if {[info exists data($item,realized)]} {
unset data($item,realized)
}

if {$item eq $step} { set data(current) "" }
}

if {[Wizard::_is_branch $path $item]} {

set branch [Wizard::branch $path $item]
set x [lsearch -exact $branches($branch) $item]
set branches($branch) [lreplace $branches($branch) $x $x]

Widget::destroy $items($item) 0

unset branches($item)
unset data($item,branch)
unset items($item)
}

if {[info exists buttons($item)]} {

set x [$path.buttons index $widgets($item)]
$path.buttons delete $x

unset items($item)
unset buttons($item)
unset widgets($item)
}
}
}


proc Wizard::back { path {generateEvent 0} {executeCommand 1} } {
Widget::getVariable $path data
Widget::getVariable $path items

set step [Wizard::raise $path]

if {$executeCommand && [string length $step]} {
set cmd [Widget::getoption $items($step) -backcommand]
if {![_eval_command $path $cmd]} { return }
}

if {$step ne [Wizard::raise $path]} { return }

set idx [lsearch -exact $data(order) $step]
if {$idx < 0} {
set item [lindex $data(order) end]
} else {
set item [lindex $data(order) [expr {$idx - 1}]]
set data(order) [lreplace $data(order) $idx end]
}

Wizard::raise $path $item $generateEvent

if {$generateEvent} { event generate $path <<WizardBack>> }

return $item
}


proc Wizard::next { path {generateEvent 0} {executeCommand 1} } {
Widget::getVariable $path data
Widget::getVariable $path items

set step [Wizard::raise $path]

if {$executeCommand && [string length $step]} {
set cmd [Widget::getoption $items($step) -nextcommand]
if {![_eval_command $path $cmd]} { return }
}

if {$step ne [Wizard::raise $path]} { return }

set item [Wizard::step $path next]
if {![string length $item]} { return }

if {[Widget::getoption $items($item) -appendorder]} {
lappend data(order) $item
}

Wizard::raise $path $item $generateEvent

if {$generateEvent} { event generate $path <<WizardNext>> }

return $item
}


proc Wizard::cancel { path {generateEvent 0} {executeCommand 1} } {
Widget::getVariable $path items

set step [Wizard::raise $path]

if {$executeCommand && [string length $step]} {
set cmd [Widget::getoption $items($step) -cancelcommand]
if {![_eval_command $path $cmd]} { return }
}

if {$generateEvent} { event generate $path <<WizardCancel>> }
}


proc Wizard::finish { path {generateEvent 0} {executeCommand 1} } {
Widget::getVariable $path items

set step [Wizard::raise $path]

if {$executeCommand && [string length $step]} {
set cmd [Widget::getoption $items($step) -finishcommand]
if {![_eval_command $path $cmd]} { return }
}

if {$generateEvent} { event generate $path <<WizardFinish>> }
}


proc Wizard::help { path {generateEvent 0} {executeCommand 1} } {
Widget::getVariable $path items

set step [Wizard::raise $path]

if {$executeCommand && [string length $step]} {
set cmd [Widget::getoption $items($step) -helpcommand]
if {![_eval_command $path $cmd]} { return }
}

if {$generateEvent} { event generate $path <<WizardHelp>> }
}


proc Wizard::order { path args } {
Widget::getVariable $path data
if {[llength $args] > 1} {
set err [BWidget::wrongNumArgsString "$path order ?neworder?"]
return -code error $err
}
if {[llength $args]} { set data(order) [lindex $args 0] }
return $data(order)
}


proc Wizard::step { path node {start ""} {traverse 1} } {
Widget::getVariable $path data
Widget::getVariable $path items
Widget::getVariable $path branches

if {[string length $start] && ![info exists items($start)]} {
return -code error "item \"$start\" does not exist"
}

switch -- $node {
"current" {
set item [Wizard::raise $path]
}

"end" - "last" {
set item [Wizard::step $path next]
while {[string length $item]} {
set last $item
set item [Wizard::step $path next $item]
}
set item $last
}

"back" - "previous" {
if {![string length $start]} { set start [Wizard::raise $path] }

set idx [lsearch -exact $data(order) $start]
if {$idx < 0} {
set item [lindex $data(order) end]
} else {
incr idx -1
if {$idx < 0} { return }
set item [lindex $data(order) $idx]
}
}

"next" {
if {[string length $start]} {
set step $start
} else {
set step [Wizard::raise $path]
}

set branch [Wizard::branch $path $step]
if {$traverse && [Wizard::_is_branch $path $step]} {
if {[Wizard::traverse $path $step]} {
set branch $step
}
}

set idx [expr {[lsearch -exact $branches($branch) $step] + 1}]

if {$idx >= [llength $branches($branch)]} {
if {$branch eq "root"
|| [Widget::getoption $items($branch) -action]
eq "terminate"} {
return
}

set item [Wizard::step $path next $branch 0]
} else {
set item [lindex $branches($branch) $idx]

if {[Wizard::_is_branch $path $item]} {
if {$traverse} {
set item [Wizard::step $path next $item]
}
} else {
if {![Wizard::traverse $path $item]} {
set item [Wizard::step $path next $item]
}
}
}
}

default {
set item ""

if {[Wizard::_is_branch $path $node]} {
return [Wizard::step $path next $node]
}

if {[Wizard::_is_step $path $node]} { set item $node }
}
}

return $item
}


proc Wizard::nodes { path branch {first ""} {last ""} } {
Widget::getVariable $path data
Widget::getVariable $path branches
if {![string length $first]} { return $branches($branch) }
if {![string length $last]}  { return [lindex $branches($branch) $first] }
return [lrange $branches($branch) $first $last]
}


proc Wizard::index { path item } {
Widget::getVariable $path branches
set item   [$path step $item]
set branch [$path branch $item]
return [lsearch -exact $branches($branch) $item]
}


proc Wizard::raise { path {item ""} {generateEvent 0} } {
Widget::getVariable $path data
Widget::getVariable $path items

set steps   $path.steps
set buttons $path.buttons

if {[string equal $item ""]} { return $data(current) }

set x $item
set curr $data(current)
set item [Wizard::step $path $item]

if {![string length $item]} {
return -code error "step \"$x\" does not exist"
}

if {[string equal $item $data(current)]} { return }

Wizard::createstep $path $item

if {[Widget::getoption $items($item) -compoundraise]} {
set cmd [Widget::getoption $path -raisecommand]
Wizard::_eval_command $path $cmd $item
}

if {$data(current) ne $curr} { return $data(current) }

set cmd [Widget::getoption $items($item) -raisecommand]
Wizard::_eval_command $path $cmd $item

if {$data(current) ne $curr} { return $data(current) }

wm title [winfo toplevel $path] [Wizard::getoption $path $item -title]

if {[winfo exists $path.separator]} {
if {[Wizard::getoption $path $item -separator]} {
grid $path.separator.s
set text [Wizard::getoption $path $item -separatortext]
$path itemconfigure separatortext -text $text
} else {
grid remove $path.separator.s
$path itemconfigure separatortext -text ""
}
}

if {[winfo exists $path.buttons]} {
set default [Widget::getoption $items($item) -default]
set button  [lsearch -exact $data(buttons) $default]
$buttons setfocus $button
}

if {[string length $data(current)]} {
grid remove $steps.f$data(current)
}

set data(current) $item

grid $steps.f$data(current) -row 0 -column 0 -sticky news

set back [Wizard::step $path back]
set next [Wizard::step $path next]

if {[Widget::getoption $path -autobuttons]} { Wizard::adjustbuttons $path }

set bgimage [Wizard::getoption $path $item -backgroundimage]
if {$bgimage ne ""} {
$steps.f$item configure -image $bgimage
}

if {$generateEvent} {
if {$back eq ""} { event generate $path <<WizardFirstStep>> }
if {$next eq ""} { event generate $path <<WizardLastStep>> }
event generate $path <<WizardStep>>
}

return $item
}


proc Wizard::adjustbuttons { path } {
Widget::getVariable $path items

if {![Widget::getoption $path -showbuttons]} { return }

set item [Wizard::step $path current]
if {[string equal $item ""]} { return }

set back [Wizard::step $path back]
set next [Wizard::step $path next]

foreach x [list back next cancel] {
set text [Wizard::getoption $path $item -${x}text]
$path itemconfigure $x -text $text -state normal
}

if {[Widget::getoption $path -helpbutton]} {
set text [Wizard::getoption $path $item -helptext]
$path itemconfigure help -text $text
}

if {[Widget::getoption $path -finishbutton]} {
set text [Wizard::getoption $path $item -finishtext]
$path itemconfigure finish -text $text -state disabled
}

if {[string equal $back ""]} {
$path itemconfigure back -state disabled
}

if {[string equal $next ""]} {
if {[Widget::getoption $path -finishbutton]} {
$path itemconfigure next   -state disabled
$path itemconfigure finish -state normal
} else {
set text [Wizard::getoption $path $item -finishtext]
$path itemconfigure next -text $text -command [list $path finish 1]
}
$path itemconfigure back   -state disabled
$path itemconfigure cancel -state disabled
} else {
set text [Wizard::getoption $path $item -nexttext]
$path itemconfigure next -text $text -command [list $path next 1]
}
}


proc Wizard::widget { path command args } {
return [eval [list Wizard::widgets $path $command] $args]
}


proc Wizard::widgets { path command args } {
Widget::getVariable $path items
Widget::getVariable $path widgets
Widget::getVariable $path stepWidgets

switch -- $command {
"set" {
set node [lindex $args 0]
if {[string equal $node ""]} {
set str "$path widget set <name> ?option ..?"
set err [BWidget::wrongNumArgsString $str]
return -code error $err
}
set args [lreplace $args 0 0]
set item $path.#widget#$node

Widget::init Wizard::Widget $item $args
set step   [Widget::getoption $item -step]
set widget [Widget::getoption $item -widget]
set items($node) $item
if {[string equal $step ""]} {
set widgets($node) $widget
} else {
set stepWidgets($step,$node) $widget
}
return $widget
}

"get" {
set widget [lindex $args 0]
if {[string equal [string index $widget 0] "-"]} {
set widget ""
} else {
set args [lreplace $args 0 0]
}

array set map  [list Wizard::Widget {}]
array set map  [Widget::parseArgs Wizard::Widget $args]
array set data $map(Wizard::Widget)

if {[info exists data(-step)]} {
set step $data(-step)

if {[string equal $widget ""]} {
set list [list]
foreach name [array names stepWidgets $step,*] {
set x [lrange [split $name ,] 1 end]
lappend list [eval join $x ,]
}
return $list
}
} else {
if {[string equal $widget ""]} {
return [array names widgets]
}

set step [$path step current]
}

if {[info exists stepWidgets($step,$widget)]} {
return $stepWidgets($step,$widget)
}

if {![info exists widgets($widget)]} {
return -code error "item \"$widget\" does not exist"
}

return $widgets($widget)
}

default {
set err [BWidget::badOptionString option $command [list get set]]
return -code error $err
}
}
}


proc Wizard::variable { path step option } {
set item [step $path $step]
if {[string equal $item ""]} {
return -code error "item \"$step\" does not exist"
}
set item $path.$item
return [Widget::varForOption $item $option]
}


proc Wizard::branch { path {node "current"} } {
Widget::getVariable $path data

if {[_is_branch $path $node]} { return $data($node,branch) }

set node [$path step $node]
if {[string equal $node ""]} { return "root" }
if {[info exists data($node,branch)]} { return $data($node,branch) }
return -code error "item \"$node\" does not exist"
}


proc Wizard::traverse { path node } {
Widget::getVariable $path items

if {$node eq "root"} { return 1 }

if {![info exists items($node)]} {
return -code error "node \"$node\" does not exist"
}

set cmd [Widget::getoption $items($node) -command]
return [_eval_command $path $cmd]
}


proc Wizard::exists { path item } {
Widget::getVariable $path items
return [info exists items($item)]
}


proc Wizard::createstep { path item {delete 0} } {
Widget::getVariable $path data
Widget::getVariable $path items

set item [Wizard::step $path $item]

if {![Wizard::_is_step $path $item]} { return }

if {$delete} {
if {[winfo exists $path.f$item]} {
destroy $path.f$item
}
if {[info exists data($item,realized)]} {
unset data($item,realized)
}
}

if {![info exists data($item,realized)]} {
set data($item,realized) 1

if {[Widget::getoption $items($item) -compoundcreate]} {
set cmd [Widget::getoption $path -createcommand]
_eval_command $path $cmd $item
}

set cmd [Widget::getoption $items($item) -createcommand]
_eval_command $path $cmd $item
}

return $item
}


proc Wizard::getoption { path item option } {
Widget::getVariable $path items
set step [Wizard::step $path $item]
if {![string length $step]} {
return -code error "item \"$item\" does not exist"
}
return [Widget::cgetOption $option "" $items($step) $path]
}


proc Wizard::reorder { path parent nodes } {
Widget::getVariable $path branches
set branches($parent) $nodes
if {[Widget::getoption $path -autobuttons]} { Wizard::adjustbuttons $path }
}


proc Wizard::_insert_button { path idx node args } {
Widget::getVariable $path data
Widget::getVariable $path items
Widget::getVariable $path buttons
Widget::getVariable $path widgets

set buttons($node) 1
set widgets($node) [eval $path.buttons insert $idx $args]
set item   [string map [list $path.buttons.b {}] $widgets($node)]
set items($node) $item
return $widgets($node)
}


proc Wizard::_insert_step { path idx branch node args } {
Widget::getVariable $path data
Widget::getVariable $path steps
Widget::getVariable $path items
Widget::getVariable $path widgets
Widget::getVariable $path branches

set steps($node) 1
set data($node,branch) $branch
if {$idx eq "end"} {
lappend branches($branch) $node
} else {
set branches($branch) [linsert $branches($branch) $idx $node]
}

Widget::init Wizard::Step $path.$node $args

set items($node) $path.$node
set bgcolor [Wizard::getoption $path $node -background]

set widgets($node) $path.steps.f$node
ttk::label $widgets($node) -background $bgcolor -style ImageFrame

if {[getoption $path $node -createstep]} { Wizard::createstep $path $node }

if {[Widget::getoption $path -autobuttons]} { Wizard::adjustbuttons $path }

return $widgets($node)
}


proc Wizard::_insert_branch { path idx branch node args } {
Widget::getVariable $path data
Widget::getVariable $path items
Widget::getVariable $path branches

set branches($node)    [list]
set data($node,branch) $branch
if {$idx eq "end"} {
lappend branches($branch) $node
} else {
set branches($branch) [linsert $branches($branch) $idx $node]
}

Widget::init Wizard::Branch $path.$node $args

if {[Widget::getoption $path -autobuttons]} { Wizard::adjustbuttons $path }

set items($node) $path.$node

return $items($node)
}


proc Wizard::_is_step { path node } {
Widget::getVariable $path steps
return [info exists steps($node)]
}


proc Wizard::_is_branch { path node } {
Widget::getVariable $path branches
return [info exists branches($node)]
}


proc Wizard::_is_button { path node } {
Widget::getVariable $path buttons
return [info exists buttons($node)]
}


proc Wizard::_is_widget { path node } {
Widget::getVariable $path widgets
return [info exists widgets($node)]
}


proc Wizard::_eval_command { path command {step ""} } {
if {![string length $command]} { return 1 }

if {![string length $step]} { set step [Wizard::raise $path] }

set map [list %W $path %S $step]

if {![Wizard::_is_branch $path $step]} {
if {[string match "*%B*" $command]} {
lappend map %B [Wizard::branch $path $step]
}

if {[string match "*%n*" $command]} {
lappend map %n [Wizard::step $path next $step]
}

if {[string match "*%b*" $command]} {
lappend map %b [Wizard::step $path back $step]
}
}

return [uplevel #0 [string map $map $command]]
}


proc Wizard::_destroy { path } {
Widget::getVariable $path items

foreach item [array names items] {
Widget::destroy $items($item) 0
}

Widget::destroy $path
}


proc SimpleWizard { path args } {
option add *WizLayoutSimple*Label.padX                5    interactive
option add *WizLayoutSimple*Label.anchor              nw   interactive
option add *WizLayoutSimple*Label.justify             left interactive
option add *WizLayoutSimple*Label.borderWidth         0    interactive
option add *WizLayoutSimple*Label.highlightThickness  0    interactive

set args [linsert $args 0 -createstep 1]
lappend args -createcommand [list Wizard::layout::simple %W %S]

return [eval [list Wizard $path] $args]
}


proc ClassicWizard { path args } {
option add *WizLayoutClassic*Label.padX                5    interactive
option add *WizLayoutClassic*Label.anchor              nw   interactive
option add *WizLayoutClassic*Label.justify             left interactive
option add *WizLayoutClassic*Label.borderWidth         0    interactive
option add *WizLayoutClassic*Label.highlightThickness  0    interactive

set args [linsert $args 0 -createstep 1]
lappend args -createcommand [list Wizard::layout::classic %W %S]

return [eval [list Wizard $path] $args]
}


proc Wizard::layout::simple { wizard step } {
set frame [$wizard widget get $step]

set layout [$wizard widget set layout -widget $frame.layout -step $step]

foreach w [list titleframe pretext posttext clientArea] {
set $w [$wizard widget set $w -widget $layout.$w -step $step]
}

foreach w [list title subtitle icon] {
set $w [$wizard widget set $w -widget $titleframe.$w -step $step]
}

frame $layout -class WizLayoutSimple

pack $layout -expand 1 -fill both

frame $clientArea -bd 8 -relief flat

Separator $layout.sep1 -relief groove -orient horizontal

frame $titleframe -bd 4 -relief flat -background #FFFFFF

label $title -background #FFFFFF  -textvariable [$wizard variable $step -text1]

label $subtitle -height 2 -background #FFFFFF -padx 15 -width 40  -textvariable [$wizard variable $step -text2]

label $icon -borderwidth 0 -background #FFFFFF -anchor c
set iconImage [$wizard getoption $step -icon]
if {$iconImage ne ""} { $icon configure -image $iconImage }

set labelfont [font actual [$title cget -font]]
$title configure -font [concat $labelfont -weight bold]

grid $title    -in $titleframe -row 0 -column 0 -sticky nsew
grid $subtitle -in $titleframe -row 1 -column 0 -sticky nsew
grid $icon     -in $titleframe -row 0 -column 1 -rowspan 2 -padx 8
grid columnconfigure $titleframe 0 -weight 1
grid columnconfigure $titleframe 1 -weight 0

set label label
if {[BWidget::using ttk]} { set label ttk::label }

$label $pretext  -anchor w -justify left  -textvariable [$wizard variable $step -text3]
$label $posttext -anchor w -justify left  -textvariable [$wizard variable $step -text4]

foreach widget [list title subtitle pretext posttext] {
bind [set $widget] <Configure> {
after idle {after idle {%W configure -wraplength [expr {%w -10}]}}
}
}

grid $titleframe  -row 0 -column 0 -sticky nsew -padx 0
grid $layout.sep1 -row 1 -sticky ew
grid $pretext     -row 2 -sticky nsew -padx 8 -pady 8
grid $clientArea  -row 3 -sticky nsew -padx 8 -pady 8
grid $posttext    -row 4 -sticky nsew -padx 8 -pady 8

grid columnconfigure $layout 0 -weight 1
grid rowconfigure    $layout 0 -weight 0
grid rowconfigure    $layout 1 -weight 0
grid rowconfigure    $layout 2 -weight 0
grid rowconfigure    $layout 3 -weight 1
grid rowconfigure    $layout 4 -weight 0
}

proc Wizard::layout::classic { wizard step } {
set frame [$wizard widget get $step]

set layout [$wizard widget set layout -widget $frame.layout -step $step]
foreach w [list title subtitle icon pretext posttext clientArea] {
set $w [$wizard widget set $w -widget $layout.$w -step $step]
}

frame $layout -class WizLayoutClassic

pack $layout -expand 1 -fill both

frame $clientArea -bd 8 -relief flat

Separator $layout.sep1 -relief groove -orient vertical

label $title    -textvariable [$wizard variable $step -text1]
label $subtitle -textvariable [$wizard variable $step -text2] -height 2

array set labelfont [font actual [$title cget -font]]
incr labelfont(-size) 6
set  labelfont(-weight) bold
$title configure -font [array get labelfont]

set label label
if {[BWidget::using ttk]} { set label ttk::label }

$label $pretext  -anchor w -justify left  -textvariable [$wizard variable $step -text3]
$label $posttext -anchor w -justify left  -textvariable [$wizard variable $step -text4]

foreach widget [list title subtitle pretext posttext] {
bind [set $widget] <Configure> {
after idle {after idle {%W configure -wraplength [expr {%w -10}]}}
}
}

label $icon -borderwidth 1 -relief sunken -background #FFFFFF  -anchor c -width 96 -image Wizard::none
set iconImage [$wizard getoption $step -icon]
if {[string length $iconImage]} { $icon configure -image $iconImage }

grid $icon       -row 0 -column 0 -sticky nsew -padx 8 -pady 8 -rowspan 5
grid $title      -row 0 -column 1 -sticky ew   -padx 8 -pady 8
grid $subtitle   -row 1 -column 1 -sticky ew   -padx 8 -pady 8
grid $pretext    -row 2 -column 1 -sticky ew   -padx 8
grid $clientArea -row 3 -column 1 -sticky nsew -padx 8
grid $posttext   -row 4 -column 1 -sticky ew   -padx 8 -pady 24

grid columnconfigure $layout 0 -weight 0
grid columnconfigure $layout 1 -weight 1

grid rowconfigure    $layout 0 -weight 0
grid rowconfigure    $layout 1 -weight 0
grid rowconfigure    $layout 2 -weight 0
grid rowconfigure    $layout 3 -weight 1
grid rowconfigure    $layout 4 -weight 0
}

BWidget::LoadBWidgetIconLibrary

ThemeInit
::InstallJammer::HideMainWindow
BWidget::use ttk 1 -force 1
}
} setup.tcl {proc ::InstallJammer::InitSetup {} {
FileGroup ::FileGroups
Component ::Components
SetupType ::SetupTypes
FileGroup ::B43B2C47-ABB6-4073-B2F0-345EF8183AC3 -setup Install -active Yes -platforms {Windows TarArchive ZipArchive} -name {Arcade Blaster} -parent FileGroups
FileGroup ::D14F20BD-593E-4286-B63B-B60266A64F57 -setup Install -active Yes -platforms Windows -name {Papilio Loader} -parent FileGroups
FileGroup ::0E03E517-47F4-49AB-AE47-14679C43176F -setup Install -active Yes -platforms Windows -name {Papilio Drivers} -parent FileGroups
FileGroup ::F670D37D-90C2-40BE-B774-966979C96B66 -setup Install -active Yes -platforms Windows -name Java -parent FileGroups
Component ::926EBA3E-3B65-49A2-AA64-02BF94B7DE00 -setup Install -active Yes -platforms Windows -name {Arcade Blaster} -parent Components
Component ::BA48E7FA-2519-4357-8EE0-6FCA48B55432 -setup Install -active Yes -platforms Windows -name {Papilio Drivers} -parent Components
Component ::46633430-9F57-4A6F-AD0C-09BAAA28CD76 -setup Install -active Yes -platforms Windows -name Java -parent Components
Component ::02A99806-1AF0-43AD-8D67-175545735DB7 -setup Install -alias papilio-loader -active Yes -platforms Windows -name {Papilio Loader} -parent Components
SetupType ::EE470AE8-2B2F-4EF9-9224-AD84781C783F -setup Install -active Yes -platforms Windows -name {Gadget Factory Apps} -parent SetupTypes

}
} common.tcl {
namespace eval ::InstallAPI {}
namespace eval ::InstallJammer {}
namespace eval ::InstallJammer::subst {}

rename ::source ::tcl_source
proc source {args} {
if {[llength $args] == 1} {
uplevel 1 [list ::tcl_source [lindex $args 0]]
} elseif {[llength $args] == 3 && [lindex $args 0] eq "-encoding"} {
set enc [encoding system]
encoding system [lindex $args 1]
uplevel 1 [list ::tcl_source [lindex $args 2]]
encoding system $enc
} else {
return -code error  {wrong # args: should be "source ?-encoding encodingName? fileName"}
}
}

proc lempty { list } {
if {[catch {expr [llength $list] == 0} ret]} { return 0 }
return $ret
}

proc lassign { list args } {
foreach elem $list varName $args {
upvar 1 $varName var
set var $elem
}
}

proc lremove { list args } {
foreach arg $args {
set x [lsearch -exact $list $arg]
if {$x > -1} { set list [lreplace $list $x $x] }
}
return $list
}

proc lreverse { list } {
set new [list]
set len [llength $list]
for {set i [expr $len - 1]} {$i >= 0} {incr i -1} {
lappend new [lindex $list $i]
}
return $new
}

proc lassign_array {list arrayName args} {
upvar 1 $arrayName array
foreach elem $list var $args {
set array($var) $elem
}
}

proc incr0 { varName {n 1} } {
upvar 1 $varName var
if {![info exists var]} { set var 0 }
set var [expr {wide($var) + $n}]
}

proc iincr { varName {n 1} } {
upvar 1 $varName var
if {![info exists var]} { set var 0 }
set var [expr {$var + $n}]
}

proc patheq {path1 path2} {
global conf

set path1 [::InstallJammer::Normalize $path1]
set path2 [::InstallJammer::Normalize $path2]
if {$conf(windows)} { return [string equal -nocase $path1 $path2] }
return [string equal $path1 $path2]
}

proc recursive_glob {dir pattern} {
set files [glob -nocomplain -type f -dir $dir $pattern]
foreach dir [glob -nocomplain -type d -dir $dir *] {
eval lappend files [recursive_glob $dir $pattern]
}
return $files
}

proc noop {args} {}

proc open_text {file {mode "r"} args} {
set fp [open $file $mode]
eval fconfigure $fp $args

if {![catch {fileevent $fp readable}]} {
gets $fp line
if {[string match "# options: -*" $line] && [gets $fp] eq ""} {
eval fconfigure $fp [lrange $line 2 end]
} else {
seek $fp 0 start
}
}

if {[llength $args] && ![catch {fileevent $fp writable}]} {
puts $fp "# options: $args"
puts $fp ""
}

return $fp
}

proc read_file { file args } {
set fp [open $file]
eval [list fconfigure $fp] $args
set x [read $fp]
close $fp
return $x
}

proc read_textfile {file args} {
set fp [eval open_text [list $file] $args]
set x [read $fp]
close $fp
return $x
}

proc verbose {} {
if {[info exists ::verbose]} { return $::verbose }
return 0
}

proc debugging { {value ""} {level ""} {file ""} } {
if {$value eq "state"} {
if {$::debug || $::info(Debugging)} { return 1 }
return 0
} elseif {[string is true -strict $value]} {
if {$level eq "" || $level eq "console"} {
set ::debug 1
} elseif {$level eq "file"} {
set ::info(Debugging) 1
if {$file eq ""} {
set file [::InstallJammer::TmpDir debug.log]
}
if {[info exists ::debugfp]} {
catch { close $::debugfp }
set ::debugfp ""
}
set ::info(DebugLog) $file
set ::debugfp [open $file w]
} else {
return -code error "bad debugging option \"$level\": should be console or file"
}
} elseif {[string is false -strict $value]} {
if {$level eq ""} {
set ::debug 0
set ::info(Debugging) 0
if {[info exists ::debugfp]} {
catch { close $::debugfp }
set ::debugfp ""
}
} elseif {$level eq "console"} {
set ::debug 0
} elseif {$level eq "file"} {
set ::info(Debugging) 0
if {[info exists ::debugfp]} {
catch { close $::debugfp }
set ::debugfp ""
}
}
} elseif {$value eq "level"} {
if {$level eq ""} {
if {!$::debug} { return 0 }
return [expr {$::verbose + 1}]
} else {
if {$level < 0 || $level > 3} {
return -code error "invalid debug level \"$level\": should be 0, 1, 2 or 3"
}

if {$level == 0} {
set ::debug "off"
set ::info(Debugging) 0
} else {
set ::debug "on"
set ::info(Debugging) 1
set ::verbose [incr level -1]
}
}
} elseif {$value ne ""} {
return -code error "usage: debugging ?on|off? ?file|console? ?logfile?"
}

if {$::debug || $::info(Debugging)} {
echo "Debugging is turned on"
} else {
echo "Debugging is turned off"
}
if {$::debug} {
echo "Debug output is being written to the console"
}
if {$::info(Debugging)} {
echo "Debug output is being saved to a debug log file"
echo "Debug log file is <%DebugLog%>" 1
}
}

proc debug { message {id ""} } {
global info

if {[info exists ::InstallJammer]} { return }

if {![string is true -strict $::debug]
&& ![string is true -strict $info(Debugging)]} { return }

set time [clock format [clock seconds] -format "%m/%d/%Y %H:%M:%S%p"]
set string "$time - $message"

if {[set x [::InstallJammer::SubstText $message]] ne $message} {
append string "\n$time - ** $x"
}

if {$id ne "" && [$id get Comment comment] && $comment ne ""} {
append string "\n$time - # $comment"
if {[set x [::InstallJammer::SubstText $comment]] ne $comment} {
append string "\n$time - ** $x"
}
}

if {![info exists ::InstallJammer]} {
if {[string is true -strict $::debug]} {
puts  stderr $string
flush stderr
}

if {[string is true -strict $info(Debugging)]} {
if {![info exists ::debugfp]} {
set ::debugfp [open [::InstallJammer::TmpDir debug.log] w]
} elseif {$::debugfp eq ""} {
set ::debugfp [open [::InstallJammer::TmpDir debug.log] a]
}

puts  $::debugfp $string
flush $::debugfp
}
}
}

proc threaded {} {
global conf

if {![info exists conf(threaded)]} {
set conf(threaded) [info exists ::tcl_platform(threaded)]
if {$conf(threaded)} {
package require Thread
if {[catch {thread::send [thread::id] #}]} { set conf(threaded) 0 }
}
}
return $conf(threaded)
}

proc ::echo { string {subst 0} } {
if {$subst} { set string [::InstallJammer::SubstText $string] }
puts  stdout $string
flush stdout
}

proc ::more { args } {
global conf

if {[expr {[llength $args] % 2}]} {
set text [lindex $args end]
set args [lrange $args 0 end-1]
}

array set _args {
-file      ""
-width     0
-height    0
-allowquit 1
}
array set _args $args

if {$_args(-file) ne ""} {
set text [read_file $_args(-file)]
}

set height $_args(-height)
if {$height == 0} {
set height 24
if {[info exists conf(ConsoleHeight)]} {
set height $conf(ConsoleHeight)
} else {
if {![catch { exec stty size } result]} {
set height [lindex $result 0]
}
}
}

incr height -1

if {$_args(-width) > 0} {
set text [::InstallJammer::WrapText $text $_args(-width)]
}

catch { exec stty raw -echo <@stdin }

if {!$_args(-allowquit)} {
set prompt [::InstallJammer::SubstText "<%ConsolePauseText%>"]
} else {
set prompt [::InstallJammer::SubstText "<%ConsolePauseQuitText%>"]
}

catch {
set i 0
foreach line [split $text \n] {
puts stdout $line

if {[incr i] >= $height} {
puts -nonewline stdout $prompt
flush stdout

while {1} {
set x [read stdin 1]
if {$_args(-allowquit) && $x eq "q" || $x eq "Q"} {
return
} elseif {$x eq " "} {
break
}
}

puts  stdout ""
flush stdout

set i 0
}
}
}

catch { exec stty -raw echo <@stdin }

return
}

proc ::tk_safeDialog {command opts safeOpts} {
set args {}
array set _args $opts
foreach opt $safeOpts {
if {[info exists _args($opt)]} {
if {$opt eq "-parent" && ![winfo exists $_args($opt)]} { continue }
if {$opt eq "-initialdir" && ![file exists $_args($opt)]} {continue}
lappend args $opt $_args($opt)
}
}
return [eval $command $args]
}

proc ::ij_chooseDirectory {args} {
::tk_safeDialog ::tk_chooseDirectory $args  {-initialdir -mustexist -parent -title}
}

proc ::ij_getOpenFile {args} {
::tk_safeDialog ::tk_getOpenFile $args  {-defaultextension -filetypes -initialdir -initialfile  -message -multiple -parent -title -typevariable}
}

proc ::ij_getSaveFile {args} {
::tk_safeDialog ::tk_getSaveFile $args  {-defaultextension -filetypes -initialdir -initialfile  -message -multiple -parent -title -typevariable}
}

if {[info exists ::conf(unix)] && $::conf(unix)} {
proc ::tk_getOpenFile { args } {
return [eval ChooseFile .__tk_getOpenFile $args -type open]
}

proc ::tk_getSaveFile { args } {
return [eval ChooseFile .__tk_getSaveFile $args -type save]
}

proc ::tk_messageBox { args } {
return [eval ::InstallJammer::MessageBox $args]
}
}

proc SafeSet { varName value } {
upvar 1 $varName var
if {![info exists var]} { set var $value }
return $value
}

proc SafeArraySet { arrayName list } {
upvar 1 $arrayName array
foreach {varName elem} $list {
if {![info exists array($varName)]} { set array($varName) $elem }
}
}

package require msgcat

proc ::msgcat::mc { src args } {
foreach loc [::msgcat::mcpreferences] {
if {[info exists ::msgcat::Msgs_${loc}($src)]} { break }
}
return [eval [list ::msgcat::mcget $loc $src] $args]
}

proc ::msgcat::mcexists { src {locales {}} } {
if {![llength $locales]} {
set locales [::msgcat::mcpreferences]
}
foreach locale $locales {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

if {[info exists msgs($src)]} { return 1 }
}
return 0
}

proc msgcat::mclocale { args } {
variable Locale
variable Loclist

if {[llength $args] == 1 && [lindex $args 0] eq ""} {
set Loclist {}
return
}

if {[llength $args]} {
foreach locale $args {
set loc  {}
set word ""
foreach part [split [string tolower $locale] _] {
set word [string trimleft "${word}_${part}" _]
if {[set x [lsearch -exact $Loclist $word]] > -1} {
set Loclist [lreplace $Loclist $x $x]
}
set Loclist [linsert $Loclist 0 $word]
}
}
set Locale $locale
}
return $Locale
}

proc ::msgcat::mcset { locale src {dest ""} } {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

if {[llength [info level 0]] == 3} { set dest $src }
set msgs($src) $dest
}

proc ::msgcat::mcunset { locale src } {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

array unset msgs $src
}

proc ::msgcat::mcmset { locale pairs } {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

array set msgs $pairs
}

proc ::msgcat::mcgetall { locale } {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

return [array get msgs]
}

proc ::msgcat::mcget { locale src args } {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

if {![info exists ::msgcat::renderer($locale)]} {
set ::msgcat::renderer($locale)  [expr {[info commands ::${locale}::render] ne ""}]
}

if {[info exists msgs($src)]} {
set src $msgs($src)

if {$::msgcat::renderer($locale)} {
set src [::${locale}::render $src]
}
}

if {[llength $args]} {
return [uplevel 1 [linsert $args 0 ::format $src]]
} else {
return $src
}
}

proc ::msgcat::mcclear { locale } {
unset -nocomplain ::msgcat::Msgs_${locale}
}


proc inject {cmd args} {
variable ::InstallJammer::tests

switch -- $cmd {
"before" - "after" {
lassign $args id script
set id [::InstallJammer::ID $id]
lappend tests($cmd,$id) $script
}

"enter" - "leave" {
lassign $args proc script
trace add exec $proc $cmd [list inject run $script] }

"run" {
set test [lindex $args 0]
if {[info exists tests($test)]} {
foreach script $tests($test) {
uplevel #0 $script
}
} else {
uplevel #0 $test
}
}
}
}

proc test_pressButton {button} {
set found 0
foreach top [::InstallJammer::Grab stack] {
foreach w [::InstallJammer::GetAllWidgets $top] {
set c [winfo class $w]
if {$c eq "Button" || $c eq "TButton"} {
if {[$w cget -text] eq $button} {
set found 1
$w invoke
break
}
}
}
if {$found} { break }
}
}

namespace eval ::InstallJammer {}
namespace eval ::InstallJammer::actions {}
namespace eval ::InstallJammer::conditions {}

proc ::InstallJammer::CommonInit {} {
global info
global conf

if {[info exists conf(commonInit)]} { return }

set conf(osx)       [string equal $::tcl_platform(os) "Darwin"]
set conf(unix)      [string equal $::tcl_platform(platform) "unix"]
set conf(windows)   [string equal $::tcl_platform(platform) "windows"]
set conf(windows98) [expr {$conf(windows)
&& $::tcl_platform(osVersion) < 5.0}]
set conf(vista)     [expr {$conf(windows)
&& $::tcl_platform(osVersion) >= 6.0}]
set conf(wine)      [expr {$conf(windows) && [info exists ::env(_)]
&& [file tail $::env(_)] eq "wine"}]

array set conf {
commonInit   1

logInit      0

ExitCode     ""

ObjectStack   {}
ParentWindow  {}
UpdateWidgets {}
ButtonWidgets {BackButton NextButton CancelButton}

UserRCFiles {~/.bashrc ~/.cshrc ~/.tcshrc ~/.zshrc ~/.kshrc ~/.profile}
SystemRCFiles {/etc/bashrc /etc/csh.cshrc /etc/zshrc /etc/profile}

ShowConsoleProgress 1

UpdateWindowsRegistry 0

ModifySelectedComponents 1

ComponentTrees  {}
SetupTypeTrees  {}

SaveResponseVars {
"CreateDesktopShortcut boolean"
"CreateQuickLaunchShortcut boolean"
"InstallDir string"
"InstallMode string"
"InstallType string"
"LaunchApplication boolean"
"ProgramFolderName string"
"SelectedComponents list"
"ViewReadme boolean"
}

VirtualTextMap            {}
VirtualTextRecursionLimit 10
}

lappend conf(VirtualTextMap) "\\" "\\\\" "\[" "\\\["
lappend conf(VirtualTextMap) "<%" {[::InstallJammer::SubstVar [list }
lappend conf(VirtualTextMap) "%>" {]]}

if {[info exists ::installkit::root]} {
set conf(vfs) $::installkit::root
}
set conf(exe)      [info nameofexecutable]
set conf(script)   [info script]

if {$conf(windows)} {
set info(Ext)       ".exe"
set info(ScriptExt) ".bat"
} else {
set info(Ext)       ""
set info(ScriptExt) ".sh"
}

array set ::InstallJammer::PropertyMap {
Include {
"Always include"
"Include only when testing"
"Include only when not testing"
}

ExecuteAction {
"After Pane is Cancelled"
"After Pane is Displayed"
"After Pane is Finished"
"Before Next Pane is Displayed"
"Before Pane is Cancelled"
"Before Pane is Displayed"
"Before Pane is Finished"
"Before Previous Pane is Displayed"
}

FileUpdateMethod {
"Update files with more recent dates"
"Update files with a newer version"
"Always overwrite files"
"Never overwrite files"
}

CheckCondition {
"After Pane is Cancelled"
"Before Next Pane is Displayed"
"Before Pane is Cancelled"
"Before Pane is Displayed"
"Before Pane is Finished"
"Before Previous Pane is Displayed"
"Before Action is Executed"
"Before Next Action is Executed"
}
}

if {!$conf(windows)} {
append ::env(PATH) ":/bin:/sbin:/usr/bin:/usr/sbin"
append ::env(PATH) ":/usr/local/bin:/usr/local/sbin"

append ::env(PATH) ":/usr/lib/kde4/libexec"
append ::env(PATH) ":/usr/lib64/kde4/libexec"
}

::InstallJammer::InitializeMessageCatalogs

set conf(NativeChooseFile)       [expr {!$conf(unix)}]
set conf(NativeMessageBox)       [expr {!$conf(unix)}]
set conf(NativeChooseDirectory)  [expr {!$conf(unix)}]

msgcat::Init
if {[info exists ::InstallJammer]} {
msgcat::mclocale en
} else {

set ::debug "off"

array set conf {
ConsoleWidth      80
ConsoleHeight     24
NativeMessageBox  0
panesToSkip       {}
}
set conf(NativeChooseDirectory) $conf(osx)

SafeArraySet conf {
twapi               0
Wow64Disabled       0
}

array set info {
Wizard             .wizard
WizardFirstStep    0
WizardLastStep     0
WizardStarted      0
WizardFinished     0
WizardCancelled    0

Errors             ""

SilentMode         0
DefaultMode        0

UserMovedBack      0
UserMovedNext      0

ShowConsole        0

Debugging          0
Testing            0
}

SafeArraySet info {
AllowLanguageSelection 1
PromptForRoot          1

Language                "en"
DefaultToSystemLanguage "Yes"

InstallMode            "Standard"
UninstallMode          "Standard"

FallBackToConsole      0

InstallVersionInfo     1
InstallRegistryInfo    1

RunningInstaller       0
RunningUninstaller     0

SpaceRequiredText      "<%DiskSpace <%SpaceRequired%>%>"
SpaceAvailableText     "<%DiskSpace <%SpaceAvailable%>%>"
}

set info(Home) [::InstallJammer::HomeDir]

if {$info(RunningInstaller)} {
if {[info exists info(DefaultLanguage)]} {
set info(Language) [GetLanguageCode $info(DefaultLanguage)]
}

set info(SystemLanguage) [::msgcat::mclocale]
set codes [::InstallJammer::GetLanguageCodes]
foreach lang [::msgcat::mcpreferences] {
if {[lsearch -exact $codes $lang] > -1} {
set info(SystemLanguage) $lang
if {$info(DefaultToSystemLanguage)} {
set info(Language) $lang
}
break
}
}

set info(InstallStartupDir) [pwd]
} elseif {$info(RunningUninstaller)} {
set info(UninstallStartupDir) [pwd]
}

if {$conf(windows)} {
set info(Username)      $::tcl_platform(user)
set info(PathSeparator) \;

set info(Desktop) <%DESKTOP%>

::InstallJammer::SetWindowsPlatform
::InstallJammer::SetupRegVirtualText
} else {
set info(Username)        [id user]
set info(PathSeparator)   :
set info(HasKDEDesktop)   [::InstallJammer::HasKDEDesktop]
set info(HasGnomeDesktop) [::InstallJammer::HasGnomeDesktop]

switch -- [::InstallJammer::GetDesktopEnvironment] {
"KDE" {
set info(Desktop) <%KDEDesktop%>
}

"Gnome" {
set info(Desktop) <%GnomeDesktop%>
}
}

set info(HaveTerminal) [expr {[catch { exec tty }] == 0}]
}

if {[info exists info(Language)]} {
::InstallAPI::LanguageAPI -do setlanguage -language $info(Language)
}

set info(UserIsRoot)   [string equal $info(Username) "root"]
set info(RealUsername) $::tcl_platform(user)

::InstallAPI::SetVirtualText -virtualtext Status -value "" -autoupdate 1

::InstallAPI::SetVirtualText -virtualtext InstallDir  -command ::InstallJammer::ModifyInstallDir

::InstallAPI::SetVirtualText -virtualtext Language  -command ::InstallJammer::ModifyInstallTitle
::InstallAPI::SetVirtualText -virtualtext InstallTitleText  -command ::InstallJammer::ModifyInstallTitle
::InstallAPI::SetVirtualText -virtualtext InstallTitleText  -language all -command ::InstallJammer::ModifyInstallTitle

::InstallAPI::VirtualTextAPI -do settype -type directory -virtualtext {
CommonStartMenu
Desktop
FileBeingInstalled
GnomeCommonStartMenu
GnomeDesktop
GnomeStartMenu
Home
InstallDir
Installer
InstallLogDirectory
InstallSource
KDECommonStartMenu
KDEDesktop
KDEStartMenu
ProgramReadme
ProgramLicense
ProgramExecutable
ProgramFolder
Uninstaller
UninstallDirectory
}
}

SafeArraySet info {
Date            "<%Date <%DateFormat%>%>"
DateFormat      "%Y%m%d"
}
}

proc ::InstallJammer::CommonPostInit {} {
global conf
global info

set conf(stop)  [::InstallJammer::TmpDir .stop]
set conf(pause) [::InstallJammer::TmpDir .pause]

if {[info exists conf(vfs)]} {
set bin    [file join $conf(vfs) lib bin]
set tmpbin [::InstallJammer::TmpDir bin]
if {[file exists $bin] && ![file exists $tmpbin]} {
set ::env(PATH) "$tmpbin$info(PathSeparator)$::env(PATH)"
file copy -force $bin $tmpbin
if {!$conf(windows)} {
foreach file [glob -dir $tmpbin *] {
file attributes $file -permissions 0755
}
}
}
}
}

proc ::InstallJammer::InitializeGui {} {
global conf
global info

if {[info exists ::InstallJammer]} { return }
if {[info exists conf(InitializeGui)]} { return }
set conf(InitializeGui) 1

SourceCachedFile gui.tcl
InitGui

if {!$info(GuiMode)} { return }

set key Control
if {$conf(osx)} { set key Command }

bind Text <$key-a>   "%W tag add sel 1.0 end"
bind Text <$key-Tab> [bind Text <Tab>]
bind Text <Tab> "# nothing"
bind Text <Shift-Tab> ""

wm protocol $info(Wizard) WM_DELETE_WINDOW ::InstallJammer::CloseButton
}

proc ::InstallJammer::CloseButton {} {
global info

if {[grab current] eq "" || [grab current] eq $info(Wizard)} {
$info(Wizard) cancel 1
}
}

proc ::InstallJammer::InitializeMessageCatalogs {} {
global conf
global info

variable languages
variable languagecodes

if {[info exists ::InstallJammer]} {
set langfile [file join $conf(lib) msgs languages.txt]
if {[file exists $langfile]} {
array set ::InstallJammer::languagecodes [read_file $langfile]
}
}

if {![array exists languagecodes]} {
array set languagecodes {
de      "German"
en      "English"
es      "Spanish"
fr      "French"
pl      "Polish"
pt_br   "Brazilian Portuguese"
}
}

if {[info exists info(Languages)]} {
array set languagecodes $info(Languages)
}

foreach var [array names languagecodes] {
set languages($languagecodes($var)) $var
}
set languages(None) None

return [lsort [array names languagecodes]]
}

proc ::InstallJammer::GetLanguageCode { lang } {
set lang [string tolower $lang]

set codes [::InstallJammer::GetLanguageCodes]
if {[set x [lsearch -exact [string tolower $codes] $lang]] > -1} {
return [lindex $codes $x]
}

set langs [::InstallJammer::GetLanguages]
if {[set x [lsearch -exact [string tolower $langs] $lang]] > -1} {
return $::InstallJammer::languages([lindex $langs $x])
}
}

proc ::InstallJammer::GetLanguageCodes {} {
return [lsort [array names ::InstallJammer::languagecodes]]
}

proc ::InstallJammer::GetLanguage { code } {
set code [string tolower $code]

set langs [::InstallJammer::GetLanguages]
if {[set x [lsearch -exact [string tolower $langs] $code]] > -1} {
return [lindex $langs $x]
}

set codes [::InstallJammer::GetLanguageCodes]
if {[set x [lsearch -exact [string tolower $codes] $code]] > -1} {
return $::InstallJammer::languagecodes([lindex $codes $x])
}
}

proc ::InstallJammer::GetLanguages { {includeNone 0} } {
variable languages
set list [lremove [lsort [array names languages]] None]
if {$includeNone} { set list [linsert $list 0 None] }
return $list
}

proc ::InstallJammer::ConfigureBidiFonts {} {
if {$::info(Language) eq "ar"} {
foreach font [font names] {
font configure $font -family Arial -size 10
}
}
}

proc ::InstallJammer::LoadTwapi {} {
global conf

set conf(twapi) 0
if {$conf(windows)
&& $::tcl_platform(osVersion) >= 5.0
&& [info exists ::installkit::root]
&& [llength [package versions twapi]]} {
namespace eval ::twapi {
set temp_dll_dir [::InstallJammer::TmpDir]
}

package require twapi
set conf(twapi) 1
}
}

proc ::InstallJammer::InitializeCommandLineOptions {} {
global conf
global info

if {[info exists conf(initializeCommandLine)]} { return }
set conf(initializeCommandLine) 1

variable ::InstallJammer::CommandLineOptions


set CommandLineOptions(help) {
{} Switch 0 0 {}
"display this information"
}

set CommandLineOptions(temp) {
TempRoot String 0 0 {}
"set the temporary directory used by this program"
}

set CommandLineOptions(version) {
{} Switch 0 0 {}
"display installer version information"
}

if {$info(EnableResponseFiles)} {
set CommandLineOptions(response-file) {
ResponseFile String 0 0 {}
"a file to read installer responses from"
}

set CommandLineOptions(save-response-file) {
SaveResponseFile String 0 0 {}
"a file to write installer responses to when the installer exits"
}
}


foreach opt [array names CommandLineOptions] {
set name [string tolower $opt]
set CommandLineOptions($name) [concat $opt $CommandLineOptions($opt)]
if {$opt ne $name} { unset CommandLineOptions($opt) }

lassign $CommandLineOptions($name) x var type debug hide values desc
if {$type eq "Prefix"} {
lappend CommandLineOptions(PREFIX) $name
}
}
}

proc ::InstallJammer::HideMainWindow {} {
global conf
global info

if {[info exists ::tk_patchLevel]} {
wm geometry . 0x0+-10000+-10000
::InstallJammer::ModifyInstallTitle
if {!$conf(windows) || !$info(GuiMode)} { wm overrideredirect . 1 }

if {$info(GuiMode)} { wm deiconify . }
}
}

proc ::InstallJammer::NewStyle { newStyle oldStyle args } {
style layout $newStyle [style layout $oldStyle]
eval [list style configure $newStyle] [style configure $oldStyle] $args
return $newStyle
}

proc ::InstallJammer::CreateDir { dir {log 1} } {
variable CreateDir

if {![info exists CreateDir($dir)]} {
set list [file split $dir]

for {set i 0} {$i < [llength $list]} {incr i} {
lappend dirlist [lindex $list $i]
set dir [eval file join $dirlist]
if {![info exists CreateDir($dir)]} {
set CreateDir($dir) 1
if {![file exists $dir]} {
file mkdir $dir
if {$log} { ::InstallJammer::LogDir $dir }
}
}
}
}

return $dir
}

proc ::InstallJammer::DirIsEmpty { dir } {
set list1 [glob -nocomplain -directory $dir *]
set list2 [glob -nocomplain -directory $dir -types hidden *]
set list  [lremove [concat $list1 $list2] $dir/. $dir/..]
return    [lempty $list]
}

proc ::InstallJammer::PlaceWindow { id args } {
set id [::InstallJammer::ID $id]
set anchor center

if {[winfo exists $id]} {
set target $id
} else {
set target [$id window]
if {![$id get Anchor anchor]} { set anchor center }
}

array set data "
-anchor $anchor
-width  [winfo reqwidth  $target]
-height [winfo reqheight $target]
"

array set data $args

set w  $data(-width)
set h  $data(-height)
set sw [winfo screenwidth $target]
set sh [winfo screenheight $target]
lassign [wm maxsize .] maxw maxh
set anchor $data(-anchor)
switch -- $anchor {
"center" {
set x0 [expr ($sw - $w) / 2 - [winfo vrootx $target]]
set y0 [expr ($sh - $h) / 2 - [winfo vrooty $target]]
}

"n" {
set x0 [expr ($sw - $w)  / 2 - [winfo vrootx $target]]
set y0 20
}

"ne" {
set x0 [expr $maxw - $w - 40]
set y0 20
}

"e" {
set x0 [expr $maxw - $w - 40]
set y0 [expr ($sh - $h) / 2 - [winfo vrooty $target]]
}

"se" {
set x0 [expr $maxw - $w - 40]
set y0 [expr $maxh - $h - 80]
}

"s" {
set x0 [expr ($sw - $w)  / 2 - [winfo vrootx $target]]
set y0 [expr $maxh - $h - 80]
}

"sw" {
set x0 20
set y0 [expr $maxh - $h - 80]
}

"w" {
set x0 20
set y0 [expr ($sh - $h) / 2 - [winfo vrooty $target]]
}

"nw" {
set x0 20
set y0 20
}

default {
append msg "bad anchor \"$anchor\": must be"
append msg "n, ne, e, se, s, sw, w, nw or center"
return -code error $msg
}
}

set x "+$x0"
set y "+$y0"
if { $x0+$w > $sw } {set x "-0"; set x0 [expr {$sw-$w}]}
if { $x0 < 0 }      {set x "+0"}
if { $y0+$h > $sh } {set y "-0"; set y0 [expr {$sh-$h}]}
if { $y0 < 0 }      {set y "+0"}

wm geometry $target $x$y
update
}

proc ::InstallJammer::CenterWindow { target {w 473} {h 335} {lower 0} } {
set args [list -width $w -height $h]
if {$lower} { lappend args -anchor s }
eval [list PlaceWindow $target] $args
}

proc ::InstallJammer::ID { args } {
set alias [string trim [join $args]]
if {[info exists ::InstallJammer::aliases($alias)]} {
return $::InstallJammer::aliases($alias)
}
return $alias
}

proc ::InstallJammer::FindCommonPane { pane } {
foreach id [Common children] {
if {[string equal [$id component] $pane]} { return $id }
}
}

proc ::InstallJammer::FindObjByName { name objects } {
foreach object $objects {
if {[string equal [$object name] $name]} { return $object }
}
}

proc ::InstallJammer::GetPaneProc { id prefix } {
set proc $prefix.$id
if {![::InstallJammer::CommandExists $proc]} {
set proc $prefix.[$id component]
}
if {[::InstallJammer::CommandExists $proc]}  { return $proc }
}

proc ::InstallJammer::CurrentObject { {command "get"} {id ""} } {
global conf
global info

if {$command eq "get"} {
set id [lindex $conf(ObjectStack) end]
} elseif {$command eq "pop"} {
set id [lindex $conf(ObjectStack) end]
set conf(ObjectStack) [lrange $conf(ObjectStack) 0 end-1]
} elseif {$command eq "push" && $id ne ""} {
lappend conf(ObjectStack) $id
}

set info(CurrentObject) [lindex $conf(ObjectStack) end]

return $id
}

proc ::InstallJammer::ExecuteActions { id args } {
global conf
global info

array set _args {
-when       ""
-type       ""
-parent     ""
-conditions 1
}
array set _args $args

set id [::InstallJammer::ID $id]

if {![::InstallJammer::ObjExists $id]} { return 1 }

if {[$id is action]} {
set idlist [list $id]
} else {
set idlist [$id children]
}

if {![llength $idlist]} { return 1 }

set msg "Executing actions $id"
if {![catch { $id title } title]} { append msg " - $title" }
if {$_args(-when) ne ""} { append msg " - $_args(-when)" }
debug $msg

set res 1
set conf(moveToPane) ""
foreach id $idlist {
if {![$id active]} { continue }

set obj  $id
set type [$obj component]

if {$_args(-type) ne "" && $type ne $_args(-type)} { continue }

if {[$id type] eq "actiongroup"} {
eval ::InstallJammer::ExecuteActions [list $id] $args
continue
}


if {$_args(-parent) ne ""} {
set obj [::InstallJammer::CreateTempAction $_args(-parent) $id]
lappend tempObjects $obj
}

if {$_args(-when) ne ""
&& [$obj get ExecuteAction when]
&& ![string equal -nocase $_args(-when) $when]} { continue }

set info(CurrentAction) $id
::InstallJammer::CurrentObject push $id

$obj executed 0

set when "Before Action is Executed"
if {$_args(-conditions) && ![$obj checkConditions $when]} {
debug "Skipping action $id - [$id title] - conditions failed"
::InstallJammer::CurrentObject pop
continue
}

set when "Before Next Action is Executed"
while {1} {
$obj execute

if {!$_args(-conditions) || [$obj checkConditions $when]} { break }
}

::InstallJammer::CurrentObject pop
if {$conf(moveToPane) ne ""} {
set res  0
set pane $conf(moveToPane)
if {$pane eq "stop"} {
} elseif {$pane eq "next"} {
::InstallJammer::Wizard next 1
} else {
if {$pane eq $info(CurrentPane)} {
::InstallJammer::Wizard reload
} else {
::InstallJammer::Wizard raise $pane
}
}
break
}
}

if {[info exists tempObjects]} {
eval itcl::delete object $tempObjects
}

return $res
}

proc ::InstallJammer::CreateTempAction { id child } {
set obj [InstallComponent ::#auto -temp 1 -parent [$id parent]  -setup [$id setup] -type action -id $child -name [$child name]  -component [$child component] -conditions [$child conditions]  -operator [$child operator]]

return $obj
}

proc ::InstallJammer::BackCommand { wizard id } {
global info

set when "Before Previous Pane is Displayed"

if {![$id checkConditions $when]} { return 0 }

set res [::InstallJammer::ExecuteActions $id -when $when]

set info(UserMovedBack) 1
set info(UserMovedNext) 0

return $res
}

proc ::InstallJammer::NextCommand { wizard id } {
global info

set when "Before Next Pane is Displayed"

if {![$id checkConditions $when]} { return 0 }

set res [::InstallJammer::ExecuteActions $id -when $when]

set info(UserMovedBack) 0
set info(UserMovedNext) 1

return $res
}

proc ::InstallJammer::CancelCommand { wizard id } {
set when "Before Pane is Cancelled"

if {![$id checkConditions $when]} { return 0 }

return [::InstallJammer::ExecuteActions $id -when $when]
}

proc ::InstallJammer::CancelEventHandler { wizard } {


if {[$wizard itemcget cancel -state] eq "normal"} {
::InstallJammer::exit 1
}
}

proc ::InstallJammer::FinishCommand { wizard id } {
set when "Before Pane is Finished"

if {![$id checkConditions $when]} { return 0 }

return [::InstallJammer::ExecuteActions $id -when $when]
}

proc ::InstallJammer::FinishEventHandler { wizard } {
set id [$wizard raise]

set when "After Pane is Finished"
::InstallJammer::ExecuteActions $id -when $when

::InstallJammer::exit
}

proc ::InstallJammer::RaiseEventHandler { wizard } {
global conf
global info

set id [$wizard raise]

set info(CurrentPane) $id

set conf(skipPane) 0
set when "Before Pane is Displayed"
if {![$id active]} {
set conf(skipPane) 1
set msg "pane is inactive"
} elseif {![$id checkConditions $when]} {
set conf(skipPane) 1
set msg "conditions failed"
} elseif {[lsearch -exact $conf(panesToSkip) $id] > -1} {
set conf(skipPane) 1
set msg "skipped by action or API"
} else {
set component [$id component]
if {[info exists ::InstallJammer::tests(before,$id)]} {
inject run before,$id
} elseif {[info exists ::InstallJammer::tests(before,$component)]} {
inject run before,$component
}

::InstallJammer::ExecuteActions $id -when $when
set msg "skipped by actions"
}

if {$conf(skipPane) || [lsearch -exact $conf(panesToSkip) $id] > -1} {
debug "Skipping pane $id - [$id title] - $msg" $id
$wizard order [lrange [$wizard order] 0 end-1]
::InstallAPI::WizardAPI -do next
return
}

if {$id ne [$wizard raise]} { return }

debug "Displaying pane $id - [$id title]" $id

if {[info exists conf(LastStepId)] && [$conf(LastStepId) is window]} {
set window [$conf(LastStepId) window]
::InstallJammer::TransientParent $window 1
wm withdraw $window
} else {
::InstallJammer::TransientParent $wizard 1
}

if {[$id is window]} {
set base [$id window]
::InstallJammer::TransientParent $base

wm withdraw $wizard

::InstallJammer::UpdateWidgets

if {![$id get Modal  modal]}  { set modal  0 }
if {![$id get Dialog dialog]} { set dialog 0 }

if {[winfo exists $base]} {
wm deiconify $base
raise $base
if {$modal} { ::InstallJammer::Grab set $base }
}

update

set when "After Pane is Displayed"
::InstallJammer::ExecuteActions $id -when $when

if {[winfo exists $base]} {
if {$dialog} {
if {[$id get DialogVairiable varName]} {
tkwait variable $varName
} else {
tkwait window $base
}
}

if {$modal} { ::InstallJammer::Grab release $base }
}
} else {
::InstallJammer::TransientParent $wizard
::InstallJammer::UpdateWidgets -wizard $wizard -step $id -buttons 1

$wizard show
focus [$wizard widget get next]
update

set when "After Pane is Displayed"
::InstallJammer::ExecuteActions $id -when $when
}

if {[info exists ::InstallJammer::tests(after,$id)]} {
inject run after,$id
} elseif {[info exists ::InstallJammer::tests(after,$component)]} {
inject run after,$component
}

set info(WizardLastStep)  0
set info(WizardFirstStep) 0

set conf(LastStepId) $id
}

proc ::InstallJammer::UpdateWizardButtons { args } {
global info

if {[llength $args]} {
lassign $args wizard id
} else {
set wizard $info(Wizard)
set id [$wizard raise]
}

if {![$id get Buttons buttons]} { return }

foreach button [list back next cancel finish help] {
if {![$wizard exists $button]} { continue }

set text [string totitle $button]
if {[string match "*$text*" $buttons]} {
$wizard itemconfigure $button -hide 0

set w [$wizard widget get $button -step $id]
::InstallJammer::SetText $w $id [string toupper $button 0]Button
} else {
$wizard itemconfigure $button -hide 1
}
}
}

proc ::InstallJammer::Wizard { args } {
global info

set wizard $info(Wizard)

if {![llength $args]} { return $wizard }

set command [lindex $args 0]
set args    [lrange $args 1 end]

set id [::InstallJammer::ID [lindex $args 0]]

switch -- $command {
"back" {
if {![llength $args]} { set args 1 }
eval [list $info(Wizard) back] $args
}

"next" {
if {![llength $args]} { set args 1 }
eval [list $info(Wizard) next] $args
}

"create" {
::InstallJammer::CreateWindow $wizard $id
}

"raise" {
set args [lreplace $args 0 0 $id]
if {[llength $args] == 1} { lappend args 1 }
$info(Wizard) order [concat [$info(Wizard) order] $id]
eval [list $info(Wizard) raise] $args
}

"reload" {
event generate $info(Wizard) "<<WizardStep>>"
}

"show" {
$wizard show
}

"hide" {
if {$id eq ""} {
$wizard hide
} else {
wm withdraw [$id window]
}
}
}
}

proc ::InstallJammer::CreateWindow { wizard id {preview 0} } {
set id    [::InstallJammer::ID $id]
set pane  [$id component]
set istop [$id is window]

set base  .[$id name]

if {$istop} {
if {[winfo exists $base]} { return $base }
} else {
if {[$wizard exists $id] && ($preview || [$id created])} {
return [$wizard widget get $id]
}
}

set parent [$id parent]

if {$preview && ![$wizard exists $id]} {
set parent root
$id get WizardOptions opts
eval [list $wizard insert step end $parent $id] $opts
}

if {!$preview && [$wizard exists $id]} {
$wizard itemconfigure $id  -backcommand   [list ::InstallJammer::BackCommand  $wizard $id]   -nextcommand   [list ::InstallJammer::NextCommand  $wizard $id]   -cancelcommand [list ::InstallJammer::CancelCommand $wizard $id]  -finishcommand [list ::InstallJammer::FinishCommand $wizard $id]

bind $wizard <<WizardStep>>   "::InstallJammer::RaiseEventHandler  %W"
bind $wizard <<WizardCancel>> "::InstallJammer::CancelEventHandler %W"
bind $wizard <<WizardFinish>> "::InstallJammer::FinishEventHandler %W"

bind $wizard <<WizardLastStep>>  "set ::info(WizardLastStep)  1"
bind $wizard <<WizardFirstStep>> "set ::info(WizardFirstStep) 1"

$id created 1
}

set proc [GetPaneProc $id CreateWindow]

if {[string length $proc]} {
if {!$istop} {
$wizard createstep $id

$proc $wizard $id
set base [$wizard widget get $id]
$id window $base
} else {
$id window $base
$proc $wizard $id
}
}

return $base
}

proc ::InstallJammer::TransientParent { {parent ""} {remove 0} } {
global conf

if {$parent ne ""} {
if {$remove} {
set conf(ParentWindow) [lremove $conf(ParentWindow) $parent]
} else {
lappend conf(ParentWindow) $parent
}
}

set parent "."
if {[info exists conf(ParentWindow)]} {
set windows $conf(ParentWindow)
set conf(ParentWindow) [list]

foreach window $windows {
if {[winfo exists $window]} {
lappend conf(ParentWindow) $window
}
}

foreach window [lreverse $conf(ParentWindow)] {
if {[wm state $parent] eq "normal"} {
set parent $window
break
}
}
}

if {[wm state $parent] ne "normal"} { set parent "" }

return $parent
}

proc ::InstallJammer::ParseArgs { arrayName arglist args } {
upvar 1 $arrayName a

array set _args $args

if {[info exists _args(-switches)]} {
foreach switch $_args(-switches) {
set a($switch) 0
set s($switch) 1
}
}

if {[info exists _args(-options)]} {
array set o $_args(-options)
foreach {option default} $_args(-options) {
set a($option) $default
}
}

set a(_ARGS_) [list]

set len [llength $arglist]
for {set i 0} {$i < $len} {incr i} {
set arg [lindex $arglist $i]

if {[info exists s($arg)]} {
set a($arg) 1
} elseif {[info exists o($arg)]} {
set a($arg) [lindex $arglist [incr i]]
} else {
set a(_ARGS_) [lrange $arglist $i end]
break
}
}
}

proc ::InstallJammer::SetObjectProperties { id args } {
variable ::InstallJammer::Properties

::InstallJammer::ParseArgs _args $args -switches {-safe -nocomplain}

set args $_args(_ARGS_)

if {[llength $args] == 1} { set args [lindex $args 0] }
if {[llength $args] == 1} {
set property [lindex $args 0]
if {[info exists Properties($id,$property)]} {
return $Properties($id,$property)
}

if {!$_args(-nocomplain)} {
return -code error "invalid property '$property'"
}

return
}

foreach {property value} $args {
if {!$_args(-safe) || ![info exists Properties($id,$property)]} {
if {$property eq "Alias"} {
catch { $id alias $value }

if {[info exists ::InstallJammer::aliasmap($id)]} {
$id CleanupAlias
}

if {$value ne ""} {
set ::InstallJammer::aliases($value) $id
set ::InstallJammer::aliasmap($id) $value
}
}

if {$property eq "Active"} { $id active $value }

if {![info exists ::InstallJammer]} {
variable ::InstallJammer::PropertyMap
if {[info exists PropertyMap($property)]} {
set n $value
if {![string is integer -strict $n]} {
set n [lsearch -exact $PropertyMap($property) $value]
if {$n < 0} {
return -code error [BWidget::badOptionString value  $value $PropertyMap($property)]
}
}
set value $n
}
}
set Properties($id,$property) $value
}
}

return $Properties($id,$property)
}

proc ::InstallJammer::GetObjectProperty { id property {varName ""} } {
set value  ""
set exists [info exists ::InstallJammer::Properties($id,$property)]
if {$exists} {
set value $::InstallJammer::Properties($id,$property)
if {[info exists ::InstallJammer::PropertyMap($property)]
&& [string is integer -strict $value]} {
set value [lindex $::InstallJammer::PropertyMap($property) $value]
}
}

if {$varName ne ""} {
upvar 1 $varName var
set var $value
return $exists
} else {
return $value
}
}

proc ::InstallJammer::ObjectProperties { id arrayName args } {
upvar 1 $arrayName array
variable ::InstallJammer::Properties

::InstallJammer::ParseArgs _args $args -options {-prefix "" -subst 0}

set slen 0
if {[info exists _args(-subst)]} {
set subst $_args(-subst)
set slen  [llength $subst]
}

set props $_args(_ARGS_)
if {![llength $props]} {
foreach varName [array names Properties $id,*] {
lappend props [string map [list $id, ""] $varName]
}
}

set vars {}
foreach prop $props {
if {![info exists Properties($id,$prop)]} { continue }

set val $Properties($id,$prop)
if {$slen && ($subst eq "1" || [lsearch -exact $subst $prop] > -1)} {
set val [::InstallJammer::SubstText $val]
}
if {[info exists ::InstallJammer::PropertyMap($prop)]
&& [string is integer -strict $val]} {
set val [lindex $::InstallJammer::PropertyMap($prop) $val]
}
set prop $_args(-prefix)$prop
lappend vars $prop
set array($prop) $val
}

return $vars
}

proc ::InstallJammer::ObjectChildrenRecursive { object } {
set children [list]

foreach child [$object children] {
lappend children $child
eval lappend children [::InstallJammer::ObjectChildrenRecursive $child]
}

return $children
}

proc ::InstallJammer::SetTitle { w id } {
set id [::InstallJammer::ID $id]
set title [::InstallJammer::GetText $id Title]
wm title $w $title
}

proc ::InstallJammer::SetVirtualText { languages window args } {
if {[llength $args] == 1} { set args [lindex $args 0] }

if {[string equal -nocase $languages "all"]} {
set languages [::InstallJammer::GetLanguageCodes]
}

foreach lang $languages {
if {$lang eq "None"} {
global info
foreach {name value} $args {
set info($name) $value
debug "Virtual Text $name is now set to $value"
}
} else {
set lang [::InstallJammer::GetLanguageCode $lang]
foreach {name value} $args {
::msgcat::mcset $lang $window,$name $value
}
}
}
}

proc ::InstallJammer::GetText { id field args } {
global info

array set _args {
-subst      1
-language   ""
-forcelang  0
-forcesubst 0
}
array set _args $args

set languages {}
if {$_args(-language) ne ""} {
foreach lang $_args(-language) {
lappend languages [::InstallJammer::GetLanguageCode $lang]
}
}
if {!$_args(-forcelang)} {
eval lappend languages [::msgcat::mcpreferences]
}

if {[string equal -nocase $_args(-language) "all"]} {
foreach lang [::InstallJammer::GetLanguageCodes] {
set text [::InstallJammer::GetTextForField $id $field $lang]
if {[info exists last] && $last ne $text} { return }
set last $text
}
if {$_args(-subst)} { set text [::InstallJammer::SubstText $text] }
return $text
}

set found 0
foreach lang $languages {
set text [::InstallJammer::GetTextForField $id $field $lang]
if {$text ne ""} {
set found 1
break
}
}

if {$found} {
if {$_args(-forcesubst)
|| ($_args(-subst) && [$id get $field,subst subst] && $subst)} {
set text [::InstallJammer::SubstText $text]
}

return $text
}
}

proc ::InstallJammer::GetTextForField { id field lang } {
set id   [::InstallJammer::ID $id]
set item [$id component]
set text [::msgcat::mcget $lang $id,$field]
if {$text eq "$id,$field"} {
set text [::msgcat::mcget $lang $item,$field]
}
if {$text ne "$item,$field"} {
return $text
}
}

proc ::InstallJammer::SetText { args } {
if {[llength $args] == 3} {
lassign $args w id field
set id   [::InstallJammer::ID $id]
set text [::InstallJammer::GetText $id $field]
} elseif {[llength $args] == 2} {
lassign $args w text
}

if {![winfo exists $w]} { return }

set class [winfo class $w]

if {$class eq "Frame" || $class eq "TFrame"} {
foreach child [winfo children $w] {
set class [winfo class $child]
if {$class eq "Label" || $class eq "TLabel"} {
set w $child
break
}
}
}

if {$class eq "Text"} {
if {![$w cget -maxundo]} {
set state [$w cget -state]
if {$state eq "disabled"} { $w configure -state normal }
if {$state eq "readonly"} {
$w clear
$w Insert end $text
} else {
$w delete 0.0 end
$w insert end $text
}
if {$state eq "disabled"} { $w configure -state disabled }
}
} elseif {($class eq "Label" || $class eq "TLabel")
&& [string length [$w cget -textvariable]]} {
set [$w cget -textvariable] $text
} else {
$w configure -text $text
}
}

proc ::InstallJammer::Image { id image } {
global images

set id    [::InstallJammer::ID $id]
set image $id,$image

if {![ImageExists $image]} { set image [$id component],$image }
if {![ImageExists $image]} { return }

set x [::InstallJammer::SubstText $images($image)]
if {[string index $x 0] eq "@"} { set x [string range $x 1 end] }
set x [::InstallJammer::ID $x]
set x [::InstallJammer::Normalize $x unix]
if {[info exists images($x)]} { return $images($x) }

if {[::InstallJammer::IsID $x] && [::InstallJammer::ObjExists $x]} {
set images($x) [image create photo -file [$x srcfile]]
} elseif {[file exists $x]} {
set images($x) [image create photo -file $x]
}

if {[info exists images($x)]} { return $images($x) }
}

proc ::InstallJammer::SetImage { w id image } {
set image [::InstallJammer::Image $id $image]
if {[winfo class $w] eq "TLabel"} { set image [list $image] }
$w configure -image $image
}

proc ::InstallJammer::ImageExists {img} {
global images
return [info exists images($img)]
}

proc ::InstallJammer::GetWidget { widget {id ""} } {
global info

if {![info exists info(Wizard)] || ![winfo exists $info(Wizard)]} { return }

if {$id eq ""} { set id [$info(Wizard) raise] }
if {$id eq ""} { return }

while {![$id ispane]} {
if {$id eq ""} { return }
set id [$id parent]
}

set widget [join [string trim $widget] ""]

switch -- $widget {
"BackButton" - "NextButton" - "CancelButton" {
set widget [string tolower [string range $widget 0 end-6]]
set widget [$info(Wizard) widget get $widget]
}

default {
if {![winfo exists $widget]} {
set widget [$id widget get $widget]
}
}
}

return $widget
}

proc ::InstallJammer::FindUpdateWidgets { textList args } {
global conf
global info

if {![info exists ::tk_patchLevel]} { return }
if {![info exists info(Wizard)]} { return }

set _args(-wizard)  $info(Wizard)
array set _args $args

set wizard $_args(-wizard)
if {![winfo exists $wizard]} { return }

if {![info exists _args(-step)]} { set _args(-step) [$wizard raise] }
set step $_args(-step)

if {$step eq ""} { return }

set widgets [concat [$step widgets] $conf(ButtonWidgets)]

trace remove variable ::info write ::InstallJammer::VirtualTextTrace

set include {}
foreach virtualtext $textList {
unset -nocomplain orig
if {[info exists info($virtualtext)]} { set orig $info($virtualtext) }

foreach widget $widgets {
set info($virtualtext) TEST1
set text1 [::InstallJammer::GetText $step $widget]

set info($virtualtext) TEST2
set text2 [::InstallJammer::GetText $step $widget]

if {$text1 ne $text2} { lappend include $widget }
}

if {[info exists orig]} {
set info($virtualtext) $orig
} else {
unset info($virtualtext)
}
}

trace add variable ::info write ::InstallJammer::VirtualTextTrace

return $include
}

proc ::InstallJammer::UpdateSelectedWidgets { {widgets {}} args } {
if {![info exists ::tk_patchLevel]} { return }

if {![llength $widgets]} { set widgets $::conf(UpdateWidgets) }

if {[llength $args]} {
set wizard [lindex $args 0]
set step   [lindex $args 1]
if {![winfo exists $wizard]} { return }
} else {
set wizard $::info(Wizard)
if {![winfo exists $wizard]} { return }

set step   [$wizard raise]
}

foreach widget $widgets {
if {[lsearch -exact $::conf(ButtonWidgets) $widget] > -1} {
set name [string tolower [string map {Button ""} $widget]]
if {[$wizard exists $name]} {
set w [$wizard widget get $name -step $step]
::InstallJammer::SetText $w $step $widget
}
} else {
set w [$step widget get $widget]

if {![winfo exists $w]} { continue }

switch -- [$step widget type $widget] {
"progress" {
set value [::InstallJammer::GetText $step $widget]
if {[string is double -strict $value]} {
$w configure -value $value
}
}

"image" {
::InstallJammer::SetImage $w $step $widget
}

"text" {
::InstallJammer::SetText $w $step $widget
}

"usertext" {
if {![$w cget -maxundo]} {
$w clear
$w insert end [::InstallJammer::GetText $step $widget]
}
}
}
}
}
}

proc ::InstallJammer::UpdateWidgets { args } {
global conf
global info

if {![info exists ::tk_patchLevel]} { return }
if {![info exists info(Wizard)]} { return }

array set _args {
-update          0
-buttons         0
-widgets         {}
-updateidletasks 0
}
set _args(-wizard)  $info(Wizard)
set _args(-widgets) $conf(UpdateWidgets)

array set _args $args

set wizard $_args(-wizard)
if {![winfo exists $wizard]} { return }

if {![info exists _args(-step)]} { set _args(-step) [$wizard raise] }
set step $_args(-step)

if {$step eq ""} { return }

if {![llength $_args(-widgets)]} { set _args(-widgets) [$step widgets] }

::InstallJammer::UpdateSelectedWidgets $_args(-widgets) $wizard $step

if {$_args(-buttons)} { ::InstallJammer::UpdateWizardButtons $wizard $step }

set update     $_args(-update)
set updateIdle $_args(-updateidletasks)
if {[info exists conf(update)]} {
set update     $conf(update)
set updateIdle $conf(update)
}
if {$update} { update; set updateIdle 0 }
if {$updateIdle} { update idletasks }
}

proc ::InstallJammer::DirIsWritable {dir} {
global conf

if {$conf(wine)} { return 1 }
if {$conf(windows98)} { return [expr {![catch {file attributes $dir}]}] }
return [file writable $dir]
}

proc ::InstallJammer::Normalize { file {style ""} } {
global conf

if {$file ne ""} {
set file [eval file join [file split $file]]

if {[string match "p*" $style]} {
set style $::tcl_platform(platform)
}

switch -glob -- $style {
"u*" {
set style forwardslash
if {[string index $file 1] == ":"} {
set file [string range $file 2 end]
}
}

"w*" {
set style backslash
if {[string index $file 1] == ":"} {
set file [string toupper $file 0]
}
}
}

switch -glob -- $style {
"f*" {
set file [string map [list \\ /] $file]
}

"b*" {
set file [string map [list / \\] $file]
}
}
}

return $file
}

proc ::InstallJammer::RelativeFile { file {relativeDir "<%InstallDir%>"} } {
if {[file pathtype $file] eq "relative"} {
set file [::InstallJammer::SubstText "$relativeDir/$file"]
}
return [::InstallJammer::Normalize $file]
}

proc ::InstallJammer::RollbackName { file } {
global info
return [file join [file dirname $file] .$info(InstallID).[file tail $file]]
}

proc ::InstallJammer::SaveForRollback {file} {
file rename -force $file [::InstallJammer::RollbackName $file]
}

proc ::InstallJammer::GetShellFolder { folder } {
set folder [string toupper $folder]
array set map {DESKTOP DESKTOPDIRECTORY MYDOCUMENTS PERSONAL}
if {[info exists map($folder)]} { set folder $map($folder) }
if {[catch {twapi::get_shell_folder csidl_[string tolower $folder]} path]} {
return [installkit::Windows::getFolder $folder]
}
return $path
}

proc ::InstallJammer::WindowsDir { dir } {
set dir [string toupper $dir]

if {$dir eq "WINDOWS"
|| [catch { ::InstallJammer::GetShellFolder $dir } windir]} {
set windir ""
}

if {$windir ne ""} { return [::InstallJammer::Normalize $windir windows] }


if {[string match "COMMON_*" $dir]} {
set chk [string range $dir 7 end]
if {[catch { ::installkit::Windows::getFolder $chk } windir]} {
set windir ""
}
if {[string length $windir]} {
return [::InstallJammer::Normalize $windir windows]
}
}

set curr {Software\Microsoft\Windows\CurrentVersion}
set key  "HKEY_LOCAL_MACHINE\\$curr"

switch -- $dir {
"MYDOCUMENTS" {
set windir [::InstallJammer::WindowsDir PERSONAL]
}

"WINDOWS" {
if {[info exists ::env(SYSTEMROOT)]} {
set windir $::env(SYSTEMROOT)
} elseif {[info exists ::env(windir)]} {
set windir $::env(windir)
} elseif {![catch {registry get $key SystemRoot} result]} {
set windir $result
} else {
set windir "C:\\Windows"
}
}

"PROGRAM_FILES" {
if {[info exists ::env(ProgramFiles)]} {
set windir $::env(ProgramFiles)
} elseif {![catch {registry get $key ProgramFilesDir} result]} {
set windir $result
} else {
set windir "C:\\Program Files"
}
}

"SYSTEM" {
set windir [file join [WindowsDir WINDOWS] system]
}

"SYSTEM32" {
set windir [file join [WindowsDir WINDOWS] system32]
}

"QUICK_LAUNCH" {
set windir [WindowsDir APPDATA]
set windir [file join $windir  "Microsoft" "Internet Explorer" "Quick Launch"]
}

"COMMON_QUICK_LAUNCH" {
set windir [WindowsDir COMMON_APPDATA]
set windir [file join $windir  "Microsoft" "Internet Explorer" "Quick Launch"]
}

"WALLPAPER" {
set windir [registry get $key WallPaperDir]
}

default {

array set regkeys {
ADMINTOOLS        {USER "Administrative Tools"}
APPDATA           {USER AppData}
CACHE             {USER Cache}
CDBURN_AREA       {USER "CD Burning"}
COOKIES           {USER Cookies}
DESKTOP           {USER Desktop}
FAVORITES         {USER Favorites}
FONTS             {USER Fonts}
HISTORY           {USER History}
INTERNET_CACHE    {USER Cache}
LOCAL_APPDATA     {USER "Local AppData"}
LOCAL_SETTINGS    {USER "Local Settings"}
MYDOCUMENTS       {USER Personal}
MYMUSIC           {USER "My Music"}
MYPICTURES        {USER "My Pictures"}
MYVIDEO           {USER "My Video"}
NETHOOD           {USER NetHood}
PERSONAL          {USER Personal}
PRINTHOOD         {USER PrintHood}
PROGRAMS          {USER Programs}
RECENT            {USER Recent}
SENDTO            {USER SendTo}
STARTMENU         {USER "Start Menu"}
STARTUP           {USER Startup}
TEMPLATES         {USER Templates}

COMMON_ADMINTOOLS {SYS "Common Administrative Tools"}
COMMON_APPDATA    {SYS "Common AppData"}
COMMON_DESKTOP    {SYS "Common Desktop"}
COMMON_DOCUMENTS  {SYS "Common Documents"}
COMMON_FAVORITES  {SYS "Common Favorites"}
COMMON_MUSIC      {SYS CommonMusic}
COMMON_PICTURES   {SYS CommonPictures}
COMMON_PROGRAMS   {SYS "Common Programs"}
COMMON_STARTMENU  {SYS "Common Start Menu"}
COMMON_STARTUP    {SYS "Common Startup"}
COMMON_TEMPLATES  {SYS "Common Templates"}
COMMON_VIDEO      {SYS CommonVideo}
}

set SYS  "HKEY_LOCAL_MACHINE\\$curr\\Explorer\\Shell Folders"
set USER "HKEY_CURRENT_USER\\$curr\\Explorer\\Shell Folders"

if {[info exists regkeys($dir)]} {
upvar 0 [lindex $regkeys($dir) 0] regkey
set val [lindex $regkeys($dir) 1]
set windir [::installkit::Windows::GetKey $regkey $val]
}

if {$windir eq ""} { return <%$dir%> }
}
}

return [::InstallJammer::Normalize $windir windows]
}

proc ::InstallJammer::SetupRegVirtualText {} {
global info

set env        {HKEY_LOCAL_MACHINE}
set user       {HKEY_CURRENT_USER}
set current    {HKEY_LOCAL_MACHINE}
append env     {\SYSTEM\CurrentControlSet\Control\Session Manager}
append current {\Software\Microsoft\Windows\CurrentVersion}

set info(REG_USER_ENV)        "$user\\Environment"
set info(REG_SYSTEM_ENV)      "$env\\Environment"
set info(REG_UNINSTALL)       "$current\\Uninstall"
set info(REG_CURRENT_VERSION) "$current"

return
}

proc ::InstallJammer::SetWindowsPlatform {} {
global conf
global info

set string Windows

if {$conf(windows)} {
switch -- $::tcl_platform(os) {
"Windows 95" { set string "Win95" }
"Windows 98" { set string "Win98" }
"Windows NT" {
switch -- $::tcl_platform(osVersion) {
"4.0" { set string "WinNT" }
"4.9" { set string "WinME" }
"5.0" { set string "Win2k" }
"5.1" { set string "WinXP" }
"5.2" { set string "Win2003" }
"6.0" { set string "Vista" }
"6.1" { set string "Windows7" }
}
}
}
}

set info(WindowsPlatform) $string
}

proc ::InstallJammer::SubstVar { var } {
global conf
global info

if {[info exists info($var)]} {
set string $info($var)
if {[info exists ::InstallJammer::VTTypes($var)]} {
if {$::InstallJammer::VTTypes($var) eq "boolean"} {
set string [string is true $string]
} elseif {$::InstallJammer::VTTypes($var) eq "directory"} {
set string [::InstallJammer::Normalize $string platform]
}
}
return $string
}

if {[::msgcat::mcexists $var]} { return [::msgcat::mc $var] }

if {![info exists ::InstallJammer::subst]} {
foreach proc [info commands ::InstallJammer::subst::*] {
set ::InstallJammer::subst([namespace tail $proc]) $proc
}
}

set idx  [string wordend $var 0]
set word [string range $var 0 [expr {$idx - 1}]]
set args [string trim [string range $var $idx end]]

if {[info exists ::InstallJammer::subst($word)]} {
return [eval ::InstallJammer::subst::$word $args]
}

if {$var ne "" && $var eq [string toupper $var]} {
return [::InstallJammer::WindowsDir $var]
}

return "<%$var%>"
}

proc ::InstallJammer::subst::Date { args } {
set secs [lindex $args 0]
if {[string is integer -strict $secs]} {
set format [join [lrange $args 1 end]]
} else {
set secs   [clock seconds]
set format [join $args]
}

return [clock format $secs -format $format]
}

proc ::InstallJammer::subst::Dir { args } {
set dir      [lindex $args 0]
set platform [lindex $args 1]
if {$platform eq ""} { set platform $::tcl_platform(platform) }
return [::InstallJammer::Normalize $dir $platform]
}

proc ::InstallJammer::subst::Dirname { args } {
return [file dirname [join $args]]
}

proc ::InstallJammer::subst::DiskSpace { args } {
return [::InstallJammer::FormatDiskSpace [join $args]]
}

proc ::InstallJammer::subst::DOSName { args } {
global conf

set file [join $args]

if {$conf(windows) && [file exists $file]} {
set file [file attributes $file -shortname]
set file [::InstallJammer::Normalize $file windows]
}

return $file
}

proc ::InstallJammer::subst::Env { args } {
set var [lindex $args 0]
if {[info exists ::env($var)]} { return $::env($var) }
}

proc ::InstallJammer::subst::FileGroup { args } {
set group [join $args]
set obj [::InstallJammer::FindObjByName $group [FileGroups children]]
if {$obj ne ""} {
set str [$obj directory]
set str [::InstallJammer::Normalize $str $::tcl_platform(platform)]
return $str
}
}

proc ::InstallJammer::subst::FormatDescription { args } {
set lines  [join $args]
set string ""
foreach line [split [string trim $lines] \n] {
if {[string trim $line] eq ""} { set line "." }
append string " $line\n"
}
return $string
}

proc ::InstallJammer::subst::GUID { args } {
global info
set info(LastGUID) [::InstallJammer::guid]
return $info(LastGUID)
}

proc ::InstallJammer::subst::InstallInfoDir { args } {
return [::InstallJammer::InstallInfoDir]
}

proc ::InstallJammer::subst::Property { args } {
set property [lindex $args end]
if {[llength $args] == 1} {
set object [::InstallJammer::CurrentObject]
} else {
set object [::InstallJammer::ID [lindex $args 0]]
}

return [$object get $property]
}

proc ::InstallJammer::subst::RegValue { args } {
set key  [lindex $args 0]
set val  [lindex $args 1]
return [::installkit::Windows::GetKey $key $val]
}

proc ::InstallJammer::subst::SpaceAvailable { args } {
global info
set dir [join $args]
if {$dir eq ""} { set dir $info(InstallDir) }
return [::InstallJammer::GetFreeDiskSpace $dir]
}

proc ::InstallJammer::subst::Tail { args } {
return [file tail [join $args]]
}

proc ::InstallJammer::subst::Temp { args } {
return [::InstallJammer::TmpDir]
}

proc ::InstallJammer::subst::Tolower { args } {
return [string tolower $args]
}

proc ::InstallJammer::subst::Toupper { args } {
return [string toupper $args]
}

proc ::InstallJammer::subst::UUID { args } {
global info
set info(LastUUID) [::InstallJammer::uuid]
return $info(LastUUID)
}

proc ::InstallJammer::SubstForEval { string } {
set map [list "<%" "\[::InstallJammer::SubstText \{<%" "%>" "%>\}\]"]
return [string map $map $string]
}

proc ::InstallJammer::SubstForPipe { string } {
set list [list]
foreach arg $string {
lappend list [::InstallJammer::SubstText $arg]
}
return $list
}

proc ::InstallJammer::SubstText { str {num 0} } {
global conf

if {$num > $conf(VirtualTextRecursionLimit)} { return $str }

if {$str eq ""} { return }

set s $str
set s [string map $conf(VirtualTextMap) $s]
set s [subst -novariables $s]
if {$str ne $s} { set s [::InstallJammer::SubstText $s [incr num]] }

return $s
}
interp alias {} sub {} ::InstallJammer::SubstText

proc settext {var val} {
set ::info($var) $val
}

proc getobj {text} {
if {[info exists ::InstallJammer::aliases($text)]} {
return $::InstallJammer::aliases($text)
} elseif {[info exists ::InstallJammer::names($text)]} {
return $::InstallJammer::names($text)
}
}

proc vercmp {ver1 ver2} {
foreach v1 [split $ver1 ._-] v2 [split $ver2 ._-] {
if {$v1 eq ""} { set v1 0 }
if {$v2 eq ""} { set v2 0 }
if {$v1 < $v2} { return -1 }
if {$v1 > $v2} { return 1 }
}
return 0
}

proc ::InstallJammer::HasVirtualText { string } {
return [string match "*<%*%>*" $string]
}

proc ::InstallJammer::TmpDir { {file ""} } {
global conf
global info

if {![info exists info(TempRoot)] || ![file exists $info(TempRoot)]} {
set dirs [list]
if {[info exists ::env(TEMP)]} { lappend dirs $::env(TEMP) }
if {[info exists ::env(TMP)]}  { lappend dirs $::env(TMP)  }
if {$conf(windows)} {
set local [::InstallJammer::WindowsDir LOCAL_APPDATA]
lappend dirs [file join [file dirname $local] Temp]

lappend dirs [::InstallJammer::WindowsDir INTERNET_CACHE]

lappend dirs C:/Windows/Temp
lappend dirs C:/WINNT/Temp
lappend dirs C:/Temp

} else {
lappend dirs /tmp /usr/tmp /var/tmp
}

foreach dir $dirs {
if {[DirIsWritable $dir]} {
if {[info exists ::InstallJammer]} {
if {$file ne ""} { set dir [file join $dir $file] }
return $dir
}
set info(TempRoot) [::InstallJammer::Normalize $dir forward]
break
}
}

if {![info exists info(TempRoot)]} {
if {[info exists ::env(TMP)]} { set tmp $::env(TMP) }
if {[info exists ::env(TEMP)]} { set tmp $::env(TEMP) }
if {![info exists tmp] || [catch {file mkdir $tmp}]} {
return -code error  "could not find a suitable temporary directory"
}
set info(TempRoot) $tmp
}
}

if {![info exists info(Temp)]} {
set info(Temp) [::InstallJammer::Normalize  [file join $info(TempRoot) ijtmp_[::InstallJammer::uuid]]]
}

if {![file exists $info(Temp)]} { file mkdir $info(Temp) }

if {$file ne ""} {
return [::InstallJammer::Normalize [file join $info(Temp) $file]]
}

return $info(Temp)
}

proc ::InstallJammer::TmpFile {} {
global conf
return [::InstallJammer::TmpDir [pid]-[incr0 conf(tmpFileCount)]]
}

proc ::InstallJammer::TmpMount {} {
variable tmpMountCount

if {![info exists tmpMountCount]} { set tmpMountCount 0 }

while {1} {
set mnt /installjammervfs[incr tmpMountCount]
if {![file exists $mnt]} { break }
}

return $mnt
}

proc ::InstallJammer::ModifyInstallDir {} {
global conf
global info

set dir [::InstallJammer::SubstText $info(InstallDir)]

if {[info exists info(InstallDirSuffix)]} {
set suf [::InstallJammer::SubstText $info(InstallDirSuffix)]

set dir [::InstallJammer::Normalize $dir forward]
set suf [::InstallJammer::Normalize $suf forward]
if {![string match "*$suf" $dir]} { set dir [file join $dir $suf] }
}

if {[file pathtype $dir] eq "relative"} { set dir [file normalize $dir] }

set info(InstallDir) [::InstallJammer::Normalize $dir platform]

if {$conf(windows)} {
set info(InstallDrive) [string range $info(InstallDir) 0 1]
}
}

proc ::InstallJammer::ModifyInstallTitle {} {
if {[info exists ::tk_patchLevel]} {
set title [::InstallJammer::SubstText "<%InstallTitleText%>"]
wm title . $title
if {[info exists ::info(Wizard)] && [winfo exists $::info(Wizard)]} {
$::info(Wizard) configure -title $title
}
}
}

proc ::InstallJammer::GetInstallInfoDir { {create 0} } {
global conf
global info

if {![info exists info(InstallJammerRegistryDir)]} {
if {$conf(windows)} {
set root [::InstallJammer::WindowsDir PROGRAM_FILES]
if {![::InstallJammer::DirIsWritable $root]} {
set root [::InstallJammer::WindowsDir APPDATA]
}

set dir  [file join $root "InstallJammer Registry"]
} else {
if {[id user] eq "root"} {
set dir "/var/lib/installjammer"
} else {
set dir "[::InstallJammer::HomeDir]/.installjammerinfo"
}
}

set info(InstallJammerRegistryDir) [::InstallJammer::Normalize $dir]
}

if {![info exists info(InstallInfoDir)]} {
set id $info(ApplicationID)
if {[info exists info(UpgradeInstall)] && $info(UpgradeInstall)} {
set id $info(UpgradeApplicationID)
}

set dir [file join $info(InstallJammerRegistryDir) $id]
set info(InstallInfoDir) [::InstallJammer::Normalize $dir]
}

if {$create && ![file exists $info(InstallInfoDir)]} {
::InstallJammer::CreateDir $info(InstallInfoDir) 0
if {$conf(windows)} {
file attributes [file dirname $info(InstallInfoDir)] -hidden 1
}
}

if {[info exists ::InstallJammer]} {
set infodir $info(InstallInfoDir)
unset info(InstallInfoDir) info(InstallJammerRegistryDir)
return $infodir
} else {
return $info(InstallInfoDir)
}
}

proc ::InstallJammer::InstallInfoDir { {file ""} } {
set dir [::InstallJammer::GetInstallInfoDir 1]
if {[string length $file]} { append dir /$file }
return $dir
}

proc ::InstallJammer::SetPermissions { file perm } {
if {$perm eq ""} { return }

if {$::tcl_platform(platform) eq "windows"} {
if {[string length $perm] > 4} { return }
lassign [split $perm ""] a h r s
file attributes $file -archive $a -hidden $h -readonly $r -system $s
} else {
file attributes $file -permissions $perm
}
}

proc ::InstallJammer::WriteDoneFile { {dir ""} } {
if {$dir eq ""} { set dir [::InstallJammer::TmpDir] }
close [open [file join $dir .done] w]
}

proc ::InstallJammer::CleanupTmpDirs {} {
global info

if {[string is true -strict $info(Debugging)]} { return }

set tmp  [file dirname [TmpDir]]
set time [expr {[clock seconds] - 86400}]
foreach dir [glob -nocomplain -type d -dir $tmp ijtmp_*] {
if {[DirIsEmpty $dir]
|| [file exists [file join $dir .done]]
|| [file mtime $dir] < $time} {
catch { file delete -force $dir }
}
}
}

proc ::InstallJammer::EvalCondition { condition } {
if {[string is true  $condition]} { return 1 }
if {[string is false $condition]} { return 0 }

set test [::InstallJammer::SubstForEval $condition]

if {![string length $test]} { return 1 }
if {[catch {expr [subst $test]} result]} {
set msg "Error in condition '$condition'\n\n$::errorInfo"
return -code error $msg
}
return $result
}

proc ::InstallJammer::HomeDir { {file ""} } {
set return [file normalize ~]
if {$file ne ""} { set return [file join $return $file] }
return $return
}

proc ::InstallJammer::PauseInstall {} {
global conf
if {[info exists conf(pause)]} {
::InstallJammer::TmpDir
close [open $conf(pause) w]
}
}

proc ::InstallJammer::ContinueInstall {} {
global conf
if {[info exists conf(pause)]} { file delete $conf(pause) }
}

proc ::InstallJammer::StopInstall {} {
global conf
global info
if {[info exists conf(stop)]} {
::InstallJammer::TmpDir
close [open $conf(stop) w]
set info(InstallStopped) 1
}
}

proc ::InstallJammer::PauseCheck {} {
global conf
global info

if {$info(InstallStopped)} { return 0 }

while {[file exists $conf(pause)]} {
if {[file exists $conf(stop)]} {
set info(InstallStopped) 1
return 0
}
after 500
}

return 1
}

proc ::InstallJammer::UninstallFile {file} {
file delete -force $file
}

proc ::InstallJammer::UninstallDirectory { dir {force ""} } {
file delete $force $dir
}

proc ::InstallJammer::UninstallRegistryKey {key {value ""}} {
if {![lempty $value]} {
catch { registry delete $key $value }
if {[catch { registry keys $key } keys]} { return }
if {[catch { registry values $key } values]} { return }
if {[lempty $keys] && [lempty $values]} {
UninstallRegistryKey $key
}
} else {
catch { registry delete $key }
}
}

proc ::InstallJammer::LogDir { dir } {
global conf
global info

if {!$conf(logInit)} {
set conf(logInit) 1
::InstallJammer::TmpDir
::InstallJammer::GetInstallInfoDir
}

set dir [::InstallJammer::Normalize $dir forward]
if {![string match $info(InstallInfoDir)* $dir]
&& ![string match $info(Temp)* $dir]} {
::InstallJammer::InstallLog [list :DIR $dir]
}
}

proc ::InstallJammer::LogFile { file } {
global conf
global info

if {!$conf(logInit)} {
set conf(logInit) 1
::InstallJammer::TmpDir
::InstallJammer::GetInstallInfoDir
}

set file [::InstallJammer::Normalize $file forward]
if {![string match $info(InstallInfoDir)* $file]
&& ![string match $info(Temp)* $file]} {
::InstallJammer::InstallLog [list :FILE $file]
}
}

proc ::InstallJammer::SetVersionInfo { file {version ""} } {
global info
global versions
if {$version eq ""} { set version $info(InstallVersion) }
set versions($file) $version
}

proc ::InstallJammer::StoreLogsInUninstall {} {
global conf
global info

if {[info exists conf(uninstall)]} {
set tmp [::InstallJammer::TmpDir]

foreach file [glob -nocomplain -dir $tmp *.info] {
lappend files $file
lappend names [file tail $file]

set file [file root $file].log

if {[file exists $file]} {
lappend files $file
lappend names [file tail $file]
}
}

foreach file [glob -nocomplain -dir $tmp *.dead] {
lappend files $file
lappend names [file tail $file]
}

installkit::addfiles $conf(uninstall) $files $names
}
}

proc ::InstallJammer::SetDialogArgs {which arrayName} {
global conf
upvar 1 $arrayName _args

set parent [::InstallJammer::TransientParent]

set _args(-parent)        $parent
set _args(-transient)     [expr {$parent ne ""}]
set _args(-usenative)     $conf(Native$which)
set _args(-placerelative) [expr {$parent ne "" && $parent ne "."}]
}

proc ::InstallJammer::MessageBox { args } {
global conf
global widg

if {$conf(windows)} { ::InstallJammer::InitializeGui }

set win  .__message_box

array set _args {
-type        "ok"
-buttonwidth 12
}
::InstallJammer::SetDialogArgs MessageBox _args

if {[info exists ::InstallJammer]} {
set _args(-title) "InstallJammer"
} else {
set _args(-title) [::InstallJammer::SubstText "<%AppName%>"]
}

array set _args $args
if {$_args(-title) eq ""} { set _args(-title) " " }

set type $_args(-type)
if {!$_args(-usenative) && $type ne "user"} {
set idx 0

set cancel     -1
set default    -1
set buttonlist {Retry OK Yes No Cancel}
switch -- $type {
"abortretryignore" {
set default 0
set buttonlist {Abort Retry Ignore}
}

"ok"          { set default 0 }
"okcancel"    { set default 0; set cancel 1 }
"retrycancel" { set default 0; set cancel 1 }
"yesno"       { set default 0; set cancel 1 }
"yesnocancel" { set default 0; set cancel 2 }
}

if {![info exists _args(-cancel)]} { set _args(-cancel) $cancel }
if {![info exists _args(-default)]} { set _args(-default) $default }

foreach button $buttonlist {
set lbutton [string tolower $button]
if {[string first $lbutton $type] > -1} {
lappend buttons $lbutton
lappend _args(-buttons) [::InstallJammer::SubstText <%$button%>]

if {[info exists _args(-default)]
&& $_args(-default) eq $lbutton} {
set _args(-default) $idx
}

incr idx
}
}

if {[llength $buttons] == 1} { set _args(-default) 0 }

set _args(-type) user
}

set result [eval [list MessageDlg $win] [array get _args]]

if {!$_args(-usenative) && $type ne "user"} {
return [lindex $buttons $result]
}
return $result
}

proc ::InstallJammer::Message { args } {
set gui [info exists ::tk_patchLevel]

if {[info exists ::InstallJammer]
&& $::tcl_platform(platform) eq "windows"
&& [file extension [info nameof]] eq ".com"} { set gui 0 }

if {$gui} {
if {[catch { eval ::InstallJammer::MessageBox $args } error]} {
if {[info exists ::conf(unix)] && $::conf(unix)} {
catch {rename ::tk_messageBox ""}
}
eval tk_messageBox -title "InstallJammer" $args
}
} else {
set _args(-icon) "info"
array set _args $args
if {![info exists _args(-message)]} { return }

set chan stdout
if {$_args(-icon) eq "error"} { set chan stderr }

puts  $chan "$_args(-message)"
flush $chan
}
}

proc ::InstallJammer::HandleThreadError { tid errorMsg } {
global info

set message "Error in thread $tid: $errorMsg"
if {$info(Installing)} {
::InstallJammer::UnpackOutput $message
::InstallJammer::UnpackOutput :DONE
} else {
::InstallJammer::MessageBox -message $message
}
}

proc ::InstallJammer::ChooseDirectory { args } {
global conf

::InstallJammer::SetDialogArgs ChooseDirectory _args

set _args(-title)  [::InstallJammer::SubstText "<%PromptForDirectoryTitle%>"]
set _args(-message)  [::InstallJammer::SubstText "<%PromptForDirectoryMessage%>"]
set _args(-newfoldertext)  [::InstallJammer::SubstText "<%PromptForDirectoryNewFolderText%>"]
set _args(-oktext)     [::InstallJammer::SubstText "<%OK%>"]
set _args(-canceltext) [::InstallJammer::SubstText "<%Cancel%>"]
array set _args $args

if {[info exists _args(-command)]} {
set command $_args(-command)
unset _args(-command)
}

if {[info exists _args(-variable)]} {
upvar 1 $_args(-variable) dir
unset _args(-variable)

if {![info exists _args(-initialdir)] && [info exists dir]} {
set _args(-initialdir) $dir
}
}

if {$_args(-usenative)} {
set _args(-title) $_args(-message)
set res [eval ij_chooseDirectory [array get _args]]
} else {
unset -nocomplain _args(-usenative)
if {[llength $conf(ParentWindow)] > 1} {
wm withdraw [lindex $conf(ParentWindow) end]
}

set res [eval ::ChooseDirectory .__choose_directory [array get _args]]

if {[llength $conf(ParentWindow)] > 1} {
wm deiconify [lindex $conf(ParentWindow) end]
}
}

if {$res ne ""} {
set dir $res
if {[info exists command]} { uplevel #0 $command }
return $dir
}
}

proc ::InstallJammer::ChooseFile { args } {
global conf

::InstallJammer::SetDialogArgs ChooseFile _args
array set _args $args

if {[info exists _args(-command)]} {
set command $_args(-command)
unset _args(-command)
}

if {[info exists _args(-variable)]} {
upvar 1 $_args(-variable) file
unset _args(-variable)
}

if {$_args(-usenative)} {
set type Open
if {[info exists _args(-type)]} {
set type [string toupper $_args(-type) 0]
}
set res [eval [list ij_get${type}File] [array get _args]]
} else {
unset -nocomplain _args(-usenative)
if {[llength $conf(ParentWindow)] > 1} {
wm withdraw [lindex $conf(ParentWindow) end]
}

set res [eval ::ChooseFile .__choose_file [array get _args]]

if {[llength $conf(ParentWindow)] > 1} {
wm deiconify [lindex $conf(ParentWindow) end]
}
}

if {$res ne ""} {
set file $res
if {[info exists command]} { uplevel #0 $command }
return $file
}
}

proc ::InstallJammer::CommandExists { proc } {
return [string length [info commands $proc]]
}

proc ::InstallJammer::uuid {} {
global conf

if {$conf(windows)} {
return [string range [::InstallJammer::guid] 1 end-1]
}

set sha [sha1 -string [info hostname][clock seconds][pid][info cmdcount]]

set i 0
foreach x {8 4 4 4 12} {
lappend list [string range $sha $i [expr {$i + $x - 1}]]
incr i $x
}

return [string toupper [join $list -]]
}

proc ::InstallJammer::guid {} {
global conf
if {$conf(windows)} {
return [string toupper [::installkit::Windows::guid]]
}
return \{[string toupper [::InstallJammer::uuid]]\}
}

proc ::InstallJammer::IsID { id } {
if {[string length $id] != 36} { return 0 }
set list [split $id -]
if {[llength $list] != 5} { return 0 }
set i 0
foreach n {8 4 4 4 12} {
if {[string length [lindex $list $i]] != $n} { return 0 }
incr i
}
return 1
}

proc ::InstallJammer::ObjExists { obj } {
return [info exists ::InstallJammer::ObjMap([namespace tail $obj])]
}

proc ::InstallJammer::ReadMessageCatalog { catalog } {
set catalog [file join $::installkit::root catalogs $catalog]
eval [read_textfile $catalog]
}

proc ::InstallJammer::Wrap { args } {
global conf
global info

set include 1
if {[set x [lsearch -exact $args -noinstall]] > -1} {
set include 0
set args [lreplace $args $x $x]
}

if {$include} {
set pkgdir [file join $::installkit::root lib InstallJammer]
set args [linsert $args 0 -package $pkgdir]
}

eval ::installkit::wrap $args
}

proc ::InstallJammer::Grab { command args } {
variable GrabStack

if {![info exists GrabStack]} {
global info
set GrabStack [list]
if {[info exists info(Wizard)]} { lappend GrabStack $info(Wizard) }
bind GrabWindow <Destroy> [list ::InstallJammer::Grab release %W]
}

set stack {}
foreach w $GrabStack {
if {[winfo exists $w]} { lappend stack $w }
}
set GrabStack $stack

switch -- $command {
"current" {
return [grab current]
}

"stack" {
return $GrabStack
}

"release" {
set window [lindex $args 0]
grab release $window
set GrabStack [lremove $GrabStack $window]
if {[llength $GrabStack] && [grab current] eq ""} {
grab [lindex $GrabStack end]
}
}

"set" {
set window [lindex $args 0]
grab $window
set tags [bindtags $window]
if {[lsearch -exact $tags GrabWindow] < 0} {
bindtags $window [concat $tags GrabWindow]
}
set x [lsearch -exact $GrabStack $window]
if {$x > -1} { set GrabStack [lreplace $GrabStack $x $x] }
lappend GrabStack $window
}

default {
::InstallJammer::Grab set $command
}
}

return
}

proc ::InstallJammer::HasKDEDesktop {} {
global info

set home [::InstallJammer::HomeDir]
set kde  [file join $home .kde]

if {![file exists $kde]} { return 0 }

if {![info exists info(KDEDesktop)] || [lempty $info(KDEDesktop)]} {
set globals [file join $kde share config kdeglobals]
set desktop [file join $home Desktop]
if {[catch {open $globals} fp]} { return 0 }
while {[gets $fp line] != -1} {
if {[regexp {^Desktop=([^\n].*)\n} $line\n trash desktop]} {
regsub -all {\$([A-Za-z0-9]+)} $desktop {$::env(\1)} desktop
break
}
}
close $fp
set info(KDEDesktop) $desktop
}

return [file exists $info(KDEDesktop)]
}

proc ::InstallJammer::HasGnomeDesktop {} {
global info

set home [::InstallJammer::HomeDir]

foreach dir [list .gnome-desktop Desktop] {
set desktop [file join $home $dir]
if {[file exists $desktop]} {
set info(GnomeDesktop) $desktop
break
}
}

if {[info exists info(GnomeDesktop)] && [file exists $info(GnomeDesktop)]} {
return 1
}
return 0
}

proc ::InstallJammer::GetDesktopEnvironment {} {
global env

if {[info exists env(DESKTOP)] && $env(DESKTOP) eq "kde"} { return KDE }
if {[info exists env(KDE_FULL_SESSION)]} { return KDE }

if {[info exists env(GNOME_DESKTOP_SESSION_ID)]} { return Gnome }

if {[info exists env(DESKTOP_SESSION)]} {
switch -glob -- $env(DESKTOP_SESSION) {
"*KDE*"   { return KDE }
"*GNOME*" { return Gnome }
}
}

return "Unknown"
}

proc ::InstallJammer::GetLinuxDistribution {} {
set lsb_release [auto_execok lsb_release]
if {[file executable $lsb_release]} {
if {![catch { exec $lsb_release -i -s } distrib]} { return $distrib }
}

foreach lsb_release [list /etc/lsb-release /etc/lsb_release] {
if {[file readable $lsb_release]} {

}
}

set check {
/etc/mandrake-release    Mandrake
/etc/fedora-release      Fedora
/etc/SuSE-release        SuSE
/etc/debian_version      Debian
/etc/gentoo-release      Gentoo
/etc/slackware-version   Slackware
/etc/turbolinux-release  TurboLinux
/etc/yellowdog-release   YellowDog
/etc/connectiva-release  Connectiva
/etc/redhat-release      Redhat
}
}

proc ::InstallJammer::GetFreeDiskSpace { dir } {
global conf

if {$conf(windows)} {
set drive [lindex [file split $dir] 0]
return [::installkit::Windows::drive freespace $drive]
}

set df [auto_execok df]
if {[file exists $df]} {
while {![file exists $dir]} {
set dir [file dirname $dir]
}
catch { exec $df -k $dir } output

set line [join [lrange [split $output \n] 1 end] " "]
if {![catch { expr {[lindex $line 3] * wide(1024)} } avail]} {
return $avail
}
}

return -1
}

proc ::InstallJammer::FormatDiskSpace { space } {
if {$space < 1048576} {
return [format "%2.2f KB" [expr {$space / 1024.0}]]
}
if {$space < 1073741824} {
return [format "%2.2f MB" [expr {$space / 1048576.0}]]
}
return [format "%2.2f GB" [expr {$space / 1073741824.0}]]
}

proc ::InstallJammer::unpack { src dest {permissions ""} } {
if {![string length $permissions]} { set permissions "0666" }

set fin [open $src r]
if {[catch {open $dest w $permissions} fout]} {
close $fin
return -code error $fout
}

set intrans  binary
set outtrans binary
if {[info exists ::conf(eol,[file extension $dest])]} {
set trans $::conf(eol,[file extension $dest])
if {[llength $trans] == 2} {
set intrans  [lindex $trans 0]
set outtrans [lindex $trans 1]
} else {
set outtrans [lindex $trans 0]
}
}

fconfigure $fin  -translation $intrans
fconfigure $fout -translation $outtrans

fcopy $fin $fout

close $fin
close $fout
}

proc ::InstallJammer::ExecAsRoot { command args } {
global conf
global info

array set _args {
-title   ""
-message "<%PromptForRootText%>"
}
array set _args $args

set wait 0
if {[info exists _args(-wait)]} { set wait $_args(-wait) }

set cmd   [list]
set msg   [sub $_args(-message)]
set title [sub $_args(-title)]

set i 0
set x [llength $command]
foreach arg $command {
if {[string first " " $arg] > -1} {
append cmdline '$arg'
} else {
append cmdline $arg
}
if {[incr i] < $x} { append cmdline " " }
}

if {$info(GuiMode)} {
if {[::InstallJammer::GetDesktopEnvironment] eq "Gnome"} {
set list {gksudo gksu gnomesu kdesudo kdesu xsu}
} else {
set list {kdesudo kdesu gksudo gksu gnomesu xsu}
}

foreach app $list {
if {[auto_execok $app] eq ""} { continue }

set cmd [list $app $cmdline]
catch {exec $app --help} help
if {$app eq "kdesu" || $app eq "kdesudo"} {
set cmd [linsert $cmd 1 -d -c]
if {$msg ne "" && [string match "*--comment*" $help]} {
set cmd [linsert $cmd 1 --comment $msg]
}
} elseif {$app eq "gksu" || $app eq "gksudo"} {
if {$msg ne "" && [string match "*--message*" $help]} {
set cmd [linsert $cmd 1 --message $msg]
}
}

if {!$wait} { lappend cmd & }
catch { eval exec $cmd }
return 1
}
}

if {!$info(HaveTerminal)} { return 0 }


if {[string is punct [string index $msg end]]} {
set msg [string range $msg 0 end-1]
}

if {[auto_execok sudo] ne ""} {
if {[catch {exec sudo -k} err]} { return 0 }

set cmd [list sudo]
if {$msg ne ""} { lappend cmd -p "\[sudo\] $msg: " }
if {$wait} {
eval exec $cmd $command
} else {
if {[catch {eval exec $cmd -v} err]} { return 0 }
set res [catch {eval system sudo $cmdline &} err]
}
} else {
puts  stdout "$msg\n\[su root\] "
flush stdout
if {!$wait} { append cmdline " &" }
set res [system su -c \"$cmdline\"]
}

return 1
}

proc ::InstallJammer::GetFilesForPattern { patternString args } {
set relative    1
set patterns    [list]
set installdir  [::InstallJammer::SubstText <%InstallDir%>]
set patternlist [split [::InstallJammer::SubstText $patternString] \;]

foreach pattern $patternlist {
set pattern [string trim [::InstallJammer::SubstText $pattern]]
if {$pattern eq ""} { continue }

if {[file pathtype $pattern] ne "relative"} {
set relative 0
set pattern [::InstallJammer::Normalize $pattern]
}

lappend patterns $pattern
}

if {![llength $patterns]} { return }

if {$relative} {
set opts $args
lappend opts -dir $installdir

set files [eval glob -nocomplain $opts $patterns]
} else {
set files [list]
foreach pattern $patterns {
set opts $args
if {[file pathtype $pattern] eq "relative"} {
lappend opts -dir $installdir
}
eval lappend files [eval glob -nocomplain $opts [list $pattern]]
}
}

return $files
}

proc ::InstallJammer::StartProgress { varName total {current 0} } {
global conf
set conf(ProgressCurr)    0
set conf(ProgressLast)    0
set conf(ProgressTotal)   $total
set conf(ProgressVarName) $varName
}

proc ::InstallJammer::ResetProgress {} {
global conf
set conf(ProgressLast) 0
}

proc ::InstallJammer::UpdateProgress { args } {
set total   $::conf(ProgressTotal)
set varName $::conf(ProgressVarName)
set current [lindex $args end]

set bytes [expr {$current - $::conf(ProgressLast)}]
set ::conf(ProgressLast) $current

incr ::conf(ProgressCurr) $bytes

if {$varName ne ""} {
set $varName [expr {round( ($::conf(ProgressCurr) * 100.0) / $total )}]
}
}

proc ::InstallJammer::ReadProperties { data arrayName } {
upvar 1 $arrayName array

foreach line [split [string trim $data] \n] {
set line [string trim $line]
if {[set x [string first : $line]] >= 0} {
set var [string trim [string range $line 0 [expr {$x-1}]]]
set val [string trim [string range $line [expr {$x+1}] end]]
set array($var) $val
}
}
}

proc ::InstallJammer::ReadPropertyFile { file arrayName } {
upvar 1 $arrayName array
::InstallJammer::ReadProperties [read_textfile $file] array
}

proc ::InstallJammer::ShowUsageAndExit { {message ""} {title ""} } {
global conf
global info

variable ::InstallJammer::CommandLineOptions

::InstallJammer::InitializeCommandLineOptions

set head --
if {$conf(windows)} { set head / }

set usage ""

if {$message ne ""} { append usage "$message\n\n" }
append usage "Usage: [file tail [info nameofexecutable]] \[options ...\]"
append usage "\n\nAvailable Options:"

set len 0
foreach option [array names CommandLineOptions] {
if {$option eq "PREFIX"} { continue }

lassign $CommandLineOptions($option) name var type x hide values desc

if {$type eq "Boolean"} {
set desc "$name <Yes or No>"
} elseif {$type eq "Prefix"} {
set desc "$name<OPTION> \[ARG\]"
} elseif {$type eq "Switch"} {
set desc $name
} else {
set desc "$name \[ARG\]"
}

set options($option) $desc

if {[string length $desc] > $len} {
set len [string length $desc]
}
}

incr len 4
set  pad [expr {$len + 3}]

foreach option [lsort -dict [array names options]] {
lassign $CommandLineOptions($option) name var type x hide values desc

if {$hide} { continue }

set desc   [::InstallJammer::SubstText $desc]
set values [::InstallJammer::SubstText $values]

set line "  [format %-${len}s $head$options($option)] $desc"

append usage "\n[::InstallJammer::WrapText $line 0 $pad]"

if {$type eq "Choice"} {
set values  [lsort -dict $values]
set last    [lindex $values end]
set values  [lrange $values 0 end-1]
set choices [string tolower "[join $values ", "] or $last"]

set line "[string repeat " " $pad]Available values: $choices"
append usage "\n[::InstallJammer::WrapLine $line 0 $pad]"
}
}

append usage \n

if {$conf(windows) || !$info(HaveTerminal)} {
if {$title eq ""} { set title "Invalid Arguments" }
::InstallJammer::MessageBox -icon error -font "Courier 8"  -title $title -message $usage
} else {
puts $usage
}

::exit [expr {$message eq "" ? 0 : 1}]
}

proc ::InstallJammer::ParseCommandLineArguments { argv } {
global conf
global info

variable ::InstallJammer::CommandLineOptions
variable ::InstallJammer::PassedCommandLineOptions
variable ::InstallJammer::VirtualTextSetByCommandLine

::InstallJammer::ExecuteActions "Command Line Actions"

::InstallJammer::InitializeCommandLineOptions

set i 0
foreach arg $argv {
if {[string tolower [string trimleft $arg -/]] eq "response-file"} {
::InstallAPI::ResponseFileAPI -do read -file [lindex $argv [incr i]]
break
}
incr i
}

set len [llength $argv]
for {set i 0} {$i < $len} {incr i} {
set arg [lindex $argv $i]
set opt [string tolower [string trimleft $arg -/]]

if {$i == 0 && [file normalize $arg] eq [file normalize [info name]]} {
continue
}

if {$opt eq "help" || $opt eq "?"} {
::InstallJammer::ShowUsageAndExit "" "Help"
}

if {$opt eq "v" || $opt eq "version"} {
set message "InstallJammer Installer version $conf(version)\n\n"
if {$info(RunningInstaller)} {
append message "<%VersionHelpText%>"
} else {
append message "<%AppName%> <%Version%>"
}

if {$conf(windows)} {
::InstallJammer::MessageBox -default ok  -title "InstallJammer Installer" -message [sub $message]
} else {
puts [sub "<%Version%> (<%InstallVersion%>)"]
puts ""
puts [sub $message]
}

::exit 0
}

if {![info exists CommandLineOptions($opt)]} {
set found 0

if {[info exists CommandLineOptions(PREFIX)]} {
foreach prefix $CommandLineOptions(PREFIX) {
if {[string match -nocase $prefix* $opt]} {
set found 1

set opt       [string trimleft $arg -/]
set xlen      [string length $prefix]
set prefixopt [string range $opt $xlen end]

set opt $prefix
break
}
}
}

if {!$found} {
::InstallJammer::ShowUsageAndExit "invalid option '$arg'"
return
}
}

lassign $CommandLineOptions($opt) name var type debug hide value desc
set choices [::InstallJammer::SubstText $value]

if {$type eq "Switch"} {
if {$value eq ""} {
set val 1
} else {
set val $value
}
} else {
if {[incr i] == $len} {
::InstallJammer::ShowUsageAndExit  "no argument given for option '$arg'"
}

set val [lindex $argv $i]

if {$type eq "Choice"} {
set val  [string tolower $val]
set vals [string tolower $choices]
if {[set x [lsearch -exact $vals $val]] < 0} {
::InstallJammer::ShowUsageAndExit  "invalid value given for option '$arg'"
}

set val [lindex $choices $x]
} elseif {$type eq "Boolean"} {
if {![string is boolean -strict $val]} {
::InstallJammer::ShowUsageAndExit  "invalid value given for option '$arg'"
}

if {$value ne ""} {
if {[string is true $val]} {
set val [lindex $value 0]
} else {
set val [lindex $value 1]
}
}
} elseif {$type eq "Prefix"} {
if {![info exists prefixopt]}  {
::InstallJammer::ShowUsageAndExit  "no option specified for '$arg'"
}

set suffix $prefixopt

if {$value ne ""} {
set opt     [string tolower $prefixopt]
set choices [string tolower $choices]
if {[set x [lsearch -exact $choices $opt]] < 0} {
::InstallJammer::ShowUsageAndExit  "invalid option '$prefixopt'"
}

set suffix [lindex $value $x]
}

append var $suffix
}
}

set info($var) $val
set PassedCommandLineOptions($opt) $val
set VirtualTextSetByCommandLine($var) $val
}

::InstallJammer::SetupModeVariables

::InstallJammer::ExecuteActions "Setup Actions"

if {$info(ShowConsole)} {
::InstallJammer::InitializeGui
if {!$conf(windows)} { SourceCachedFile console.tcl }
console show
debugging on
}

if {!$info(GuiMode) && !$conf(windows)} {
if {![catch { exec stty size } result]
&& [scan $result "%d %d" height width] == 2} {
set conf(ConsoleWidth)  $width
set conf(ConsoleHeight) $height
}
}
}

proc ::InstallJammer::SetupModeVariables {} {
global conf
global info

if {[lsearch -exact $conf(modes) $info($conf(mode))] < 0} {
set mode [lindex $conf(modes) 0]
debug "Bad $conf(mode) \"$info($conf(mode))\": using $mode mode"
set info($conf(mode)) $mode
}

set mode $info($conf(mode))
set info(GuiMode)     [expr {$mode eq "Default" || $mode eq "Standard"}]
set info(SilentMode)  [string equal $mode "Silent"]
set info(DefaultMode) [string equal $mode "Default"]
set info(ConsoleMode) [string equal $mode "Console"]
}

proc ::InstallJammer::CommonExit { {cleanupTmp 1} } {
global conf

catch {
if {$conf(windows) && $conf(UpdateWindowsRegistry)} {
registry broadcast Environment -timeout 1
}
}

catch {
if {$conf(RestartGnomePanel)
&& [::InstallJammer::GetDesktopEnvironment] eq "Gnome"} {
set pid [::InstallAPI::FindProcesses -name gnome-panel]
if {$pid ne ""} { catch {exec kill -HUP $pid} }
}
}

catch { ::InstallJammer::ExecuteActions "Exit Actions" }

catch {
foreach chan [file channels] {
if {[string match "std*" $chan]} { continue }
catch {close $chan}
}
}

if {$cleanupTmp} {
catch {
::InstallJammer::WriteDoneFile
::InstallJammer::CleanupTmpDirs
}
}

if {[info exists ::debugfp]} { catch { close $::debugfp } }
}

proc ::InstallJammer::WrapText { string {width 0} {start 0} } {
global conf

if {$width == 0} { set width $conf(ConsoleWidth) }

set splitstring {}
foreach line [split $string "\n"] {
lappend splitstring [::InstallJammer::WrapLine $line $width $start]
}
return [join $splitstring "\n"]
}

proc ::InstallJammer::WrapLine { line {width 0} {start 0} } {
global conf

if {$width == 0} { set width $conf(ConsoleWidth) }

set slen  0
set words [split $line " "]
set line  [lindex $words 0]
set lines [list]
foreach word [lrange $words 1 end] {
if {[string length $line] + [string length " $word"] > $width} {
lappend lines $line

set slen $start
set line [string repeat " " $slen]$word
} else {
append line " $word"
}
}

if {$line ne ""} { lappend lines $line }

return [join $lines "\n"]
}

proc ::InstallJammer::DisplayConditionFailure { id } {
set string [::InstallJammer::SubstText [$id get FailureMessage]]
set list   [split $string |]

set icon    ""
set title   ""
set message [string trim $string]

if {[llength $list] == 2} {
set title   [string trim [lindex $list 0]]
set message [string trim [lindex $list 1]]
} elseif {[llength $list] >= 3} {
set icon    [string trim [lindex $list 0]]
set title   [string trim [lindex $list 1]]
set message [string trim [join [lrange $list 2 end] |]]
}

if {$icon eq ""} { set icon "error" }
if {$title eq ""} { set title [sub "<%ErrorTitle%>"] }

if {$message ne ""} {
::InstallJammer::Message -icon $icon -title $title -message $message
}

set focus [string trim [$id get FailureFocus]]
if {$focus ne "" && [::InstallJammer::InGuiMode]} {
set focus [::InstallAPI::GetWidgetPath -widget $focus]
if {[winfo exists $focus]} { focus -force $focus }
}
}

proc ::InstallJammer::GetAllTreeNodes { tree {parent "root"} } {
set nodes {}
foreach node [$tree nodes $parent] {
lappend nodes $node
eval lappend nodes [::InstallJammer::GetAllTreeNodes $tree $node]
}
return $nodes
}

proc ::InstallJammer::IsValidFilename {name} {
return [expr {[regexp {[:\*\?\"<>|]} $name] == 0}]
}

proc ::InstallJammer::IsValidPath {path} {
global conf

set list [file split $path]
if {$conf(windows) && [string match {[a-zA-Z]:/} [lindex $list 0]]} {
set list [lrange $list 1 end]
}
foreach name $list {
if {![::InstallJammer::IsValidFilename $name]} { return 0 }
}
return 1
}

proc ::InstallJammer::InGuiMode {} {
return [info exists ::tk_patchLevel]
}

proc ::InstallJammer::WizardExists {} {
global info
if {![::InstallJammer::InGuiMode]} { return 0 }
return [expr {[info exists info(Wizard)] && [winfo exists $info(Wizard)]}]
}

proc ::InstallJammer::ConsoleClearLastLine { {len 0} } {
global conf
if {!$len} {
if {[info exists conf(ConsoleProgressLastLen)]} {
set len $conf(ConsoleProgressLastLen)
if {!$len} { return }
} else {
return
}
}
puts -nonewline [string repeat   $len]
puts -nonewline [string repeat " " $len]
puts -nonewline [string repeat   $len]
}

proc ::InstallJammer::ConsoleProgressBar { percent } {
global conf

if {![info exists conf(ConsoleProgressWidth)] || $percent == 0} {
SafeSet conf(ConsoleProgressNewline) 0
SafeSet conf(ConsoleProgressFormat) {[%s%s] %d%%}
set s [string map {%s "" %d "" %% %} $conf(ConsoleProgressFormat)]
set conf(ConsoleProgressWidth) [string length $s]
set conf(ConsoleProgressLastLen) 0
SafeSet conf(ConsoleProgressCompletedHash) =
SafeSet conf(ConsoleProgressIncompleteHash) -
}

set len  0
set cols $conf(ConsoleWidth)
::InstallJammer::ConsoleClearLastLine

set width [expr {$cols - 2 - $conf(ConsoleProgressWidth)}]
if {[string match "*%d*" $conf(ConsoleProgressFormat)]} { incr width -3 }
set pct   [expr {(100 * $percent) / 100}]
set cnt   [expr {($width * $percent) / 100}]
set done  [expr {$width - $cnt}]
set args  [list $conf(ConsoleProgressFormat)]
if {$conf(ConsoleProgressCompletedHash) ne ""} {
lappend args [string repeat $conf(ConsoleProgressCompletedHash) $cnt]
}
if {$conf(ConsoleProgressIncompleteHash) ne ""} {
lappend args [string repeat $conf(ConsoleProgressIncompleteHash) $done]
}
if {[string match "*%d*" $conf(ConsoleProgressFormat)]} {
lappend args $pct
}

set string [eval format $args]
puts -nonewline $string
set conf(ConsoleProgressLastLen) [string length $string]

if {$percent == 100} {
::InstallJammer::ConsoleClearLastLine
if {$conf(ConsoleProgressNewline)} { puts "" }
}
flush stdout
}

proc ::InstallJammer::MountSetupArchives {} {
global conf
global info

set found 0
if {[info exists info(ArchiveFileList)]} {
foreach file $info(ArchiveFileList) {
set file [file join $info(InstallSource) $file]
if {[file exists $file]} {
set found 1
installkit::Mount $file $conf(vfs)
}
}
}
return $found
}

proc ::InstallJammer::GetCommonInstallkit { {base ""} } {
global info
::InstallJammer::InstallInfoDir
set kit [file join $info(InstallJammerRegistryDir)  $info(Platform) installkit$info(Ext)]
set opts [list -noinstall -o $kit]
if {$base ne ""} { lappend opts -w $base }
file mkdir [file dirname $kit]

set main [::InstallJammer::TmpDir main[pid].tcl]
set fp [open $main w]
puts $fp {
if {[llength $argv]} {
uplevel #0 [list source [lindex $argv end]]
}
}
close $fp
return  [eval ::InstallJammer::Wrap $opts [list $main]]
}

proc ::InstallJammer::GetAllWidgets {parent} {
set widgets [list $parent]
foreach w [winfo children $parent] {
lappend widgets $w
eval lappend widgets [::InstallJammer::GetAllWidgets $w]
}
return $widgets
}

package require Itcl

proc ::InstallJammer::Class { name body } {
set matches [regexp -all -inline {\s+writable attribute\s+([^\s]+)} $body]
foreach {match varName} $matches {
append body "method $varName {args} { cfgvar $varName \$args }\n"
}

set matches [regexp -all -inline {\s+readable attribute\s+([^\s]+)} $body]
foreach {match varName} $matches {
append body "method $varName {args} { set $varName }\n"
}

set map [list]
lappend map "writable attribute" "public variable"
lappend map "readable attribute" "private variable"

set body [string map $map $body]

itcl::class ::$name $body
}

::itcl::class Object {
constructor {args} {
eval configure $args
set ::InstallJammer::ObjMap([namespace tail $this]) [incr objc]
}

destructor {
unset ::InstallJammer::ObjMap([namespace tail $this])
}

method destroy {} {
::itcl::delete object $this
}

method cfgvar { args } {
set option -[lindex $args 0]
if {[llength $args] == 2} {
configure $option [lindex $args 1]
if {![catch {$this type} type] && $type eq "file"} {
lappend ::conf(modifiedFiles) $this
}
}
return [cget $option]
}

method serialize {} {
set return [list]
foreach list [configure] {
set opt [lindex $list 0]
set def [lindex $list end-1]
set val [lindex $list end]
if {$def == $val} { continue }
lappend return $opt $val
}
return $return
}

common objc 0
} ; ## ::itcl::class Object

::itcl::class TreeObject {
inherit Object

constructor { args } {
set id [namespace tail $this]

eval configure $args

if {!$temp && $parent ne ""} {
if {![::InstallJammer::ObjExists $parent]} {
destroy
} else {
$parent children insert $index $id
}
}
if {$name ne ""} { set ::InstallJammer::names($name) $id }
}

destructor {
if {!$temp && $parent ne "" && [::InstallJammer::ObjExists $parent]} {
$parent children remove $id
}

foreach child $children {
$child destroy
}

if {!$temp} { CleanupAlias }
}

method serialize {} {
set return [list]
foreach list [configure] {
set opt [lindex $list 0]
if {$opt eq "-id" || $opt eq "-index"} { continue }
set def [lindex $list end-1]
set val [lindex $list end]
if {$opt eq "-name" && $val eq [string tolower $id]} { continue }
if {$def == $val} { continue }
lappend return $opt $val
}
return $return
}

method CleanupAlias {} {
variable ::InstallJammer::aliases
variable ::InstallJammer::aliasmap

if {[info exists aliasmap($id)]} {
unset -nocomplain aliases($aliasmap($id))
unset aliasmap($id)
set ::InstallJammer::Properties($id,Alias) ""
}
}

method parent { args } {
if {[lempty $args]} { return $parent }

if {![string equal $args "recursive"]} {
return [set parent [lindex $args 0]]
}

set x    $parent
set list [list]
while {[string length $x]} {
set list [linsert $list 0 $x]
set x [$x parent]
}
return $list
}

method reparent { newParent } {
if {$parent eq $newParent} { return }

if {$parent ne ""} { $parent children remove $id }

set parent $newParent
if {$parent ne ""} { $parent children add $id }
}

method children { args } {
if {![llength $args]} { return $children }

lassign $args command obj
switch -- $command {
"add" {
children insert end $obj
}

"index" {
return [lsearch -exact $children $obj]
}

"insert" {
lassign $args command index obj
if {$index eq "end"} {
lappend children $obj
} else {
set children [linsert $children $index $obj]
}
}

"remove" - "delete" {
set children [lremove $children $obj]
}

"reorder" {
if {[llength $obj]} { set children $obj }
}

"recursive" {
return [::InstallJammer::ObjectChildrenRecursive $this]
}
}
}

method is { args } {
if {[llength $args] == 1} {
return [string equal [type] [lindex $args 0]]
} else {
return [expr {[lsearch -exact $args [type]] > -1}]
}
}

method index {} {
if {[string length $parent]} { return [$parent children index $id] }
}

method component {} {
return "ClassObject"
}

method id        { args } { eval cfgvar id        $args }
method name      { args } { eval cfgvar name      $args }
method type      { args } { eval cfgvar type      $args }
method alias     { args } { eval cfgvar alias     $args }
method active    { args } { eval cfgvar active    $args }
method comment   { args } { eval cfgvar comment   $args }
method platforms { args } { eval cfgvar platforms $args }

public variable id      ""
public variable temp    0
public variable name    ""
public variable type    ""
public variable index   "end"
public variable active  1
public variable parent  ""
public variable comment ""

public variable platforms [list]

protected variable children [list]

private variable oldalias ""
public variable alias "" {
if {$oldalias ne ""} {
$this CleanupAlias
}
set oldalias $alias

if {$alias ne ""} {
set ::InstallJammer::aliases($alias) $id
set ::InstallJammer::aliasmap($id) $alias
set ::InstallJammer::Properties($id,Alias) $alias
}
}
}

::itcl::class InstallType {
inherit TreeObject

constructor { args } {
eval configure $args
} {
set type installtype
eval configure $args
}

method class {} {
return ::InstallType
}

method widget { args } {}
method setup  { args } { eval cfgvar setup $args }
method component {} {}

public variable setup  ""
}

itcl::class File {
inherit TreeObject

constructor {args} {
eval configure $args
} {
eval configure $args
}

method class {} {
return ::File
}

method srcfile {} {
if {$srcfile eq ""} { ::set srcfile [file join $::conf(vfs) $id] }
return $srcfile
}

method checkFileMethod { dest } {
::set method [filemethod]
if {$method eq ""} { ::set method [$parent filemethod] }

::set doInstall 1

if {![info exists exists] && $method ne "Always overwrite"} {
::set exists [file exists $dest]
}

switch -- $method {
"Update files with more recent dates" {
if {$exists && [file mtime $dest] >= $mtime} {
::set doInstall 0
}
}

"Update files with a newer version" {
global versions
if {$exists && [info exists versions($dest)]} {
::set c [package vcompare $version $versions($dest)]
if {$c == 0 || $c == -1} { ::set doInstall 0 }
}
}

"Always overwrite files" {
}

"Never overwrite files" {
if {$exists} { ::set doInstall 0 }
}

"Prompt user" {
if {$exists} {
::set txt "<%FileOverwriteText%>"
::set msg [::InstallJammer::SubstText $txt]
::set ans [::InstallJammer::MessageBox -type yesno  -name FileOverwrite -title "File Exists"  -message $msg]
::set doInstall [expr {$ans eq "yes"}]
}
}
}

return $doInstall
}

method destdir {} {
return [::InstallJammer::SubstText [destdirname]]
}

method destdirname {} {
return $directory
}

method destfile {} {
return [file join [destdir] [destfilename]]
}

method destfilename {} {
if {$targetfilename eq ""} {
return [file tail $name]
} else {
return [::InstallJammer::SubstText $targetfilename]
}
}

method srcfilename {} {
return [file tail $name]
}

method createdir {} {
::InstallJammer::CreateDir [destdir]
}

method install {} {
global conf

if {![::InstallJammer::PauseCheck]} { return 0 }

::set dest [install[type]]

if {![::InstallJammer::PauseCheck]} { return 0 }

if {$conf(windows)} {
::InstallJammer::SetPermissions $dest $attributes
} else {
if {$permissions eq ""} {
::set permissions $::info(DefaultDirectoryPermission)
}

if {[type] eq "dir" && [info commands output] eq "output"} {
output [list :DIR $dest $permissions]
::InstallJammer::SetPermissions $dest 00777
} else {
::InstallJammer::SetPermissions $dest $permissions
}
}

return 1
}

method installdir {} {
createdir
}

method installlink {} {
::set dest [destfile]

if {![checkFileMethod $dest]} { return }

createdir

if {[file exists $dest] && [catch { file delete -force $dest } error]} {
return -code error $error
}

if {[catch { exec ln -s $linktarget $dest } error]} {
return -code error $error
}

if {$version eq ""} {
::set version $::info(InstallVersion)
} else {
::set version [::InstallJammer::SubstText $version]
}

::InstallJammer::LogFile $dest
::InstallJammer::SetVersionInfo $dest $version

return $dest
}

method installfile { {dest ""} {createDir 1} {checkMethod 1} {logFile 1} } {
global conf
global info

if {$createDir} {
createdir
}

::set src [srcfile]
if {![file exists $src] && [info exists info(ArchiveFileList)]} {
while {![file exists $src]} {
::InstallJammer::PauseInstall
output [list :DISC [[parent] name]]
::InstallJammer::MountSetupArchives
}
}

if {$dest eq ""} { ::set dest [destfile] }

if {$version eq ""} {
::set version $::info(InstallVersion)
} else {
::set version [::InstallJammer::SubstText $version]
}

::set doInstall 1
if {$checkMethod} {
::set doInstall [checkFileMethod $dest]
}

::set info(FileSize) $size
if {!$doInstall} {
::set progress ::InstallJammer::IncrProgress
if {[::InstallJammer::CommandExists $progress]} { $progress $size }
return $dest
}

if {$permissions eq ""} {
if {$conf(windows)} {
::set permissions 0666
} else {
::set permissions $info(DefaultFilePermission)
}
}

if {!$size} {
if {[catch { open $dest w $permissions } err]} {
return -code error $err
}
close $err
} else {
::InstallJammer::unpack $src $dest $permissions
}

if {$info(InstallStopped)} { return }

if {$mtime} {
file mtime $dest $mtime
}

if {$logFile} {
::InstallJammer::LogFile $dest
::InstallJammer::SetVersionInfo $dest $version
}

return $dest
}

method group {} {
return [lindex [parent recursive] 1]
}

method set { args } {
return [eval ::InstallJammer::SetObjectProperties $id $args]
}

method get { property {varName ""} } {
if {[string length $varName]} {
upvar 1 $varName var
return [::InstallJammer::GetObjectProperty $id $property var]
} else {
return [::InstallJammer::GetObjectProperty $id $property]
}
}

method isfile {} {
return [is file link]
}

method object {} {
return ::FileObject
}

method filemethod { {newMethod ""} } {
if {$newMethod ne ""} {
if {![info exists ::InstallJammer]} {
variable ::InstallJammer::PropertyMap
::set n [lsearch -exact $PropertyMap(FileUpdateMethod)  $newMethod]
if {$n < 0} {
return -code error [BWidget::badOptionString method  $newMethod $PropertyMap(FileUpdateMethod)]
}
::set newMethod $n
}
::set filemethod $newMethod
}

if {[string is integer -strict $filemethod]} {
return [lindex $::InstallJammer::PropertyMap(FileUpdateMethod)  $filemethod]
}
return $filemethod
}

method component {} {}

method name               { args } { eval cfgvar name              $args }
method size               { args } { eval cfgvar size              $args }
method mtime              { args } { eval cfgvar mtime             $args }
method version            { args } { eval cfgvar version           $args }
method location           { args } { eval cfgvar location          $args }
method directory          { args } { eval cfgvar directory         $args }
method savefiles          { args } { eval cfgvar savefiles         $args }
method linktarget         { args } { eval cfgvar linktarget        $args }
method attributes         { args } { eval cfgvar attributes        $args }
method permissions        { args } { eval cfgvar permissions       $args }
method targetfilename     { args } { eval cfgvar targetfilename    $args }
method compressionmethod  { args } { eval cfgvar compressionmethod $args }

public variable type               "file"
public variable name               ""
public variable size               0
public variable mtime              0
public variable srcfile            ""
public variable version            ""
public variable location           ""
public variable directory          ""
public variable savefiles          ""
public variable linktarget         ""
public variable filemethod         ""
public variable attributes         ""
public variable permissions        ""
public variable targetfilename     ""
public variable compressionmethod  ""

private variable exists

} ; ## itcl::class File

::itcl::class InstallComponent {
inherit TreeObject

constructor { args } {
eval configure $args
} {
::set name [string tolower $id]

eval configure $args

if {$temp} {
if {[string length $parent]} { $parent children remove $id }
return
}

if {![info exists ::InstallJammer] && [get Include incl]} {
if {$::info(Testing) && $incl eq "Include only when not testing"
|| !$::info(Testing) && $incl eq "Include only when testing"} {
destroy
return
}
}

if {[info exists ::InstallJammer::Properties($id,Alias)]
&& [string length $::InstallJammer::Properties($id,Alias)]} {
$this set Alias $::InstallJammer::Properties($id,Alias)
}

if {![info exists ::InstallJammer] && [ispane]} {
::set install $parent
::set wizard  $::info(Wizard)

::set node $parent
if {[$parent is installtype]} { ::set node root }

if {[string equal $install "Common"]} {
::InstallJammer::CreateWindow $wizard $id
} elseif {[string equal $install $::info($::conf(mode))]} {
::set create  [list ::InstallJammer::CreateWindow $wizard $id]

get WizardOptions stepopts
eval [list $wizard insert step end $node $id  -createcommand $create] $stepopts

if {[is window]} {
$wizard itemconfigure $id -appendorder 0
}
}
}
}

destructor {
if {!$temp} {
array unset ::InstallJammer::Properties $id,*

foreach lang [::InstallJammer::GetLanguageCodes] {
::msgcat::mcunset $lang $id,*
}

foreach condition $conditions {
catch { $condition destroy }
}
}
}

method class {} {
return ::InstallComponent
}

method set { args } {
if {[llength $args] == 0} { return }
if {[llength $args] == 1} { ::set args [lindex $args 0] }
eval [list ::InstallJammer::SetObjectProperties $id] $args
}

method get { property {varName ""} } {
if {[string length $varName]} {
upvar 1 $varName var
return [::InstallJammer::GetObjectProperty $id $property var]
} else {
return [::InstallJammer::GetObjectProperty $id $property]
}
}

method getText { field args } {
eval [list ::InstallJammer::GetText $id $field] $args
}

method setText { languages args } {
if {[llength $args] == 0} { return }
if {[llength $args] == 1} { ::set args [lindex $args 0] }
eval [list ::InstallJammer::SetVirtualText $languages $id] $args
}

method properties { arrayName args } {
upvar 1 $arrayName array
return [eval ::InstallJammer::ObjectProperties $id array $args]
}

method ispane {} {
return [expr {[is "pane"] || [is "window"]}]
}

method object {} {
if {[ispane]} {
variable ::InstallJammer::panes
return $panes($component)
} elseif {[is action]} {
variable ::InstallJammer::actions
return $actions($component)
} elseif {[is actiongroup]} {
return ActionGroupObject
}
}

method initialize {} {
[object] initialize $id
}

method widget { command widget args } {
switch -- $command {
"get" {
if {[info exists widgetData($widget,widget)]} {
return $widgetData($widget,widget)
}
}

"set" {
if {[lsearch -exact $widgets $widget] < 0} {
lappend widgets $widget
}

foreach [list opt val] $args {
::set widgetData($widget,[string range $opt 1 end]) $val
}
}

"type" {
if {[info exists widgetData($widget,type)]} {
return $widgetData($widget,type)
}
return text
}
}
}

method widgets {} {
return $widgets
}

method conditions { args } {
if {[lempty $args]} { return $conditions }

lassign $args command obj
switch -- $command {
"add" {
conditions insert end $obj
}

"index" {
return [lsearch -exact $conditions $obj]
}

"insert" {
lassign $args command index obj
if {[lsearch -exact $conditions $obj] > -1} { return }

if {$index eq "end"} {
lappend conditions $obj
} else {
::set conditions [linsert $conditions $index $obj]
}
}

"remove" - "delete" {
::set conditions [lremove $conditions $obj]
}

"reorder" {
::set conditions $obj
}
}

return
}

method checkConditions { {when ""} } {
if {[ispane]} {
global info
::set info(CurrentPane) $id
}

::set return 1
if {[llength $conditions]} {
::set conditionlist [list]

foreach cid $conditions {
if {![::InstallJammer::ObjExists $cid]} { continue }

if {$when eq "" || [$cid get CheckCondition] eq $when} {
lappend conditionlist $cid
}
}

if {[llength $conditionlist]} {
::set msg "Checking conditions for $id - $title"
if {$when ne ""} { append msg " - $when" }
debug $msg $id

foreach cid $conditionlist {
if {![$cid active]} {
debug "Skipping condition $cid - [$cid title] - condition is inactive" $cid
continue
}

debug "Checking condition $cid - [$cid title]" $cid
::set result [$cid check 0]

if {!$result} {
debug "Condition failed"
::set return 0
lappend failures $cid
if {$operator eq "AND"} {
break
}
} else {
debug "Condition passed"
if {$operator eq "OR"} {
::set return 1
break
}
}
}
}
}

if {!$return} {
::InstallJammer::DisplayConditionFailure [lindex $failures 0]
}

return $return
}

method execute {} {
if {$type ne "action"} { return }

::set executed 1

debug "Executing action $id - [$id title]" $id

::set ::info(CurrentAction) $id
::InstallJammer::CurrentObject push $id

if {[info exists ::InstallJammer::tests(before,$id)]} {
inject run before,$id
} elseif {[info exists ::InstallJammer::tests(before,$type)]} {
inject run before,$type
}

if {[file exists .]} { ::set pwd [pwd] }

::set err [catch {::InstallJammer::actions::$component $this} res]

if {[info exists pwd] && [file exists .]
&& [file exists $pwd] && $pwd ne [pwd]} {
cd $pwd
}

if {[info exists ::InstallJammer::tests(after,$id)]} {
inject run after,$id
} elseif {[info exists ::InstallJammer::tests(after,$type)]} {
inject run after,$type
}

::InstallJammer::CurrentObject pop

if {$err && ![get IgnoreErrors]} {
::set msg "Error in action $component\n\n$::errorInfo"
return -code error $msg
}

return $res
}

method setup       { args } { eval cfgvar setup       $args }
method title       { args } { eval cfgvar title       $args }
method window      { args } { eval cfgvar window      $args }
method created     { args } { eval cfgvar created     $args }
method command     { args } { eval cfgvar command     $args }
method executed    { args } { eval cfgvar executed    $args }
method operator    { args } { eval cfgvar operator    $args }
method component   { args } { eval cfgvar component   $args }
method arguments   { args } { eval cfgvar arguments   $args }
method description { args } { eval cfgvar description $args }

public variable type        "installcomponent"
public variable setup       ""
public variable title       ""
public variable window      ""
public variable created     0
public variable executed    0

public variable operator    "AND"
public variable component   ""
public variable arguments   ""
public variable conditions  [list]
public variable description ""

private variable widgets    [list]
private variable widgetData
} ; ## ::itcl::class InstallComponent

::itcl::class FileGroup {
inherit InstallComponent

constructor { args } {
eval configure $args
} {
eval configure $args
::set setup Install
}

method class {} {
return ::FileGroup
}

method install {} {
global conf

::set dir [directory]

::InstallJammer::CreateDir $dir

if {$conf(windows)} {
::InstallJammer::SetPermissions $dir [get Attributes]
} else {
::InstallJammer::SetPermissions $dir [get Permissions]
}
}

method destdirname {} {
return [get Destination]
}

method directory {} {
return [::InstallJammer::SubstText [destdirname]]
}

method version {} {
return [get Version]
}

method filemethod {} {
return [get FileUpdateMethod]
}

method object {} {
return ::FileGroupObject
}

method compressionmethod {} {
return [get CompressionMethod]
}

public variable type "filegroup"
} ; ## ::itcl::class FileGroup

::itcl::class Component {
inherit InstallComponent

constructor { args } {
eval configure $args
} {
eval configure $args
::set setup Install
}

method class {} {
return ::Component
}

method object {} {
return ::ComponentObject
}

public variable type "component"
} ; ## ::itcl::class Component

::itcl::class SetupType {
inherit InstallComponent

constructor { args } {
eval configure $args
} {
eval configure $args
::set setup Install
}

method class {} {
return ::SetupType
}

method object {} {
return ::SetupTypeObject
}

public variable type "setuptype"
} ; ## ::itcl::class SetupType

::itcl::class Condition {
inherit TreeObject

constructor { args } {
::set id [namespace tail $this]
eval configure $args

if {[::InstallJammer::ObjExists $parent]} {
$parent conditions add $id
}
}

destructor {
if {[::InstallJammer::ObjExists $parent]} {
$parent conditions remove $id
}
}

method class {} {
return ::Condition
}

method serialize {} {
::set return [list]
foreach list [configure] {
::set opt [lindex $list 0]
if {$opt eq "-id"} { continue }

::set def [lindex $list end-1]
::set val [lindex $list end]
if {$def == $val} { continue }
lappend return $opt $val
}
return $return
}

method set { args } {
return [eval ::InstallJammer::SetObjectProperties $id $args]
}

method get { property {varName ""} } {
if {[string length $varName]} {
upvar 1 $varName var
return [::InstallJammer::GetObjectProperty $id $property var]
} else {
return [::InstallJammer::GetObjectProperty $id $property]
}
}

method properties { arrayName args } {
upvar 1 $arrayName array
return [eval ::InstallJammer::ObjectProperties $id array $args]
}

method object {} {
return $::InstallJammer::conditions($component)
}

method check { {showError 1} } {
::set ::info(CurrentCondition) $id
::InstallJammer::CurrentObject push $id

if {[info exists ::InstallJammer::tests(before,$id)]} {
inject run before,$id
} elseif {[info exists ::InstallJammer::tests(before,$component)]} {
inject run before,$component
}

::set res [string is true [::InstallJammer::conditions::$component $id]]
if {!$res && $showError} {
::InstallJammer::DisplayConditionFailure $id
}

if {[info exists ::InstallJammer::tests(after,$id)]} {
inject run after,$id
} elseif {[info exists ::InstallJammer::tests(after,$component)]} {
inject run after,$component
}

::InstallJammer::CurrentObject pop

::set passed $res
}

method name {} {
}

method type {} {
return $type
}

method id        { args } { eval cfgvar id        $args }
method title     { args } { eval cfgvar title     $args }
method active    { args } { eval cfgvar active    $args }
method passed    { args } { eval cfgvar passed    $args }
method parent    { args } { eval cfgvar parent    $args }
method component { args } { eval cfgvar component $args }

public variable id        ""
public variable type      "condition"
public variable title     ""
public variable active    1
public variable passed    -1
public variable parent    ""
public variable component ""
} ; ## ::itcl::class Condition


proc ::installkit::base { {installkit ""} args } {
global conf
global info

if {[info exists conf(BuildingInstallkit)]} {
vwait ::conf(BuildingInstallkit)
}

set conf(BuildingInstallkit) 1

if {$installkit eq ""} {
set installkit [::InstallJammer::TmpDir installkit$info(Ext)]
}

set res 0
if {![file exists $installkit]} {
set res [catch {
eval ::InstallJammer::Wrap -o [list $installkit] $args
} err]
}

unset conf(BuildingInstallkit)

if {$res} { return -code error $err }

return [::InstallJammer::Normalize $installkit]
}

proc ::installkit::Mount { crapFile mountPoint } {
crapvfs::mount $crapFile $mountPoint
}

proc ::installkit::Unmount { mountPoint } {
crapvfs::unmount $mountPoint
}

proc ::InstallAPI::CommandLineAPI {args} {
::InstallAPI::ParseArgs _args $args {
-do         { choice  1 "" {check exists}}
-option     { string  1 }
}

variable ::InstallJammer::CommandLineOptions
variable ::InstallJammer::PassedCommandLineOptions

set opt [string tolower [string trimleft $_args(-option) -/]]
if {$_args(-do) eq "exists"} {
return [info exists CommandLineOptions($opt)]
}

if {$_args(-do) eq "check"} {
return [info exists PassedCommandLineOptions($opt)]
}
}

proc ::InstallAPI::ComponentAPI {args} {
::InstallAPI::ParseArgs _args $args {
-components { string  1 }
-active     { boolean 0 }
-updateinfo { boolean 0 1 }
}

global conf

set components $_args(-components)
if {$components eq "all"} { set components [Components children recursive] }

foreach component $components {
set component [string trim $component]
set id [::InstallAPI::FindObjects -alias $component]
if {$id eq ""} {
set id [::InstallAPI::FindObjects -type component -name $component]
}
if {$id eq ""} {
return -code error "invalid component \"$component\""
}

set id [$id id]
lappend componentIds $id
if {[info exists _args(-active)]} {
if {$_args(-active)} {
debug "Activating component $component"
} else {
debug "Deactivating component $component"
}
$id active $_args(-active)
}
}

variable ::InstallJammer::Components

foreach tree $conf(ComponentTrees) {
if {![winfo exists $tree]} { continue }

foreach component $componentIds {
set group [$component get ComponentGroup]

set var $tree,$component
if {$group ne ""} { set var $tree,$group }

if {![info exists Components($var)] || $Components($var) eq ""} {
set checked [$component get Checked]
if {[$component get RequiredComponent]} { set checked 1 }

if {$group eq ""} {
set Components($var) [string is true $checked]
} elseif {$checked} {
set Components($var) $component
}
} else {
if {$group eq ""} {
set Components($var) [string is true [$component active]]
} elseif {[$component active]} {
set Components($var) $component
}
}
}
}

if {$_args(-updateinfo)} { ::InstallJammer::UpdateInstallInfo }
}

proc ::InstallAPI::ErrorMessage {args} {
::InstallAPI::ParseArgs _args $args {
-title   { string 0 "<%ErrorTitle%>" }
-message { string 1 }
}

::InstallJammer::Message -icon "error"  -title [sub $_args(-title)] -message [sub $_args(-message)]
}

proc ::InstallAPI::Exit {args} {
global conf
global info

::InstallAPI::ParseArgs _args $args {
-exitcode { string 0 }
-exittype { choice 0 "finish" {cancel finish} }
}

if {[info exists _args(-exitcode)]} {
set conf(ExitCode) $_args(-exitcode)
}

if {$_args(-exittype) eq "cancel"} {
set info(WizardCancelled) 1
}

foreach command {::Exit ::InstallJammer::exit ::exit} {
if {[::InstallJammer::CommandExists $command]} {
$command
}
}
}

proc ::InstallAPI::FindObjects {args} {
::InstallAPI::ParseArgs _args $args {
-active    { boolean 0 }
-alias     { string  0 }
-component { string  0 }
-glob      { boolean 0 }
-name      { string  0 }
-parent    { string  0 }
-type      { string  0 }
}

if {[info exists _args(-alias)]} {
set id [::InstallJammer::ID $_args(-alias)]
if {[::InstallJammer::ObjExists $id]} { return $id }
return
}

set check 0
foreach x {type name active parent component} {
set chk${x} 0
if {[info exists _args(-$x)]} {
incr check
set chk${x} 1
set $x $_args(-$x)
}
}

if {!$chktype} {
set type "all"
set objects [::itcl::find objects]
} else {
set type [string tolower $type]
incr check -1
set chktype 0
switch -- $type {
"file" { set class ::File }
"filegroup" { set class ::FileGroup }
"component" { set class ::Component }
"setuptype" { set class ::SetupType }
"condition" { set class ::Condition }
"action" - "actiongroup" - "pane" {
incr check
set chktype 1
set class ::InstallComponent
}

default {
return -code error [BWidget::badOptionString type $_args(-type) {action actiongroup pane file filegroup component
setuptype condition}]
}
}
set objects [::itcl::find objects -class $class]
if {$type eq "file"} {
set objects [::itcl::find objects -class $class]
if {$chkcomponent} {
incr check -1
set chkcomponent 0
}
} else {
set objects {}
foreach obj [::itcl::find objects -class $class] {
if {[$obj parent] eq ""} { continue }
lappend objects $obj
}
}
}

if {$chkparent} {
set check   0
set parent  [::InstallJammer::ID $parent]
set objects {}
if {[::InstallJammer::ObjExists $parent]} {
set objects [$parent children]
}
}

if {!$check} { return $objects }

set glob 0
if {$chkname && [info exists _args(-glob)]} { set glob 1 }

set found {}
foreach obj $objects {
if {$chktype && [$obj type] ne $type} { continue }
if {$chkparent && [$obj parent] ne $parent} { continue }
if {$chkcomponent && [$obj component] ne $component} { continue }
if {$chkactive} {
set state [$obj active]
if {($state && !$active) || (!$state && $active)} { continue }
}
if {$chkname} {
set objname [$obj name]
if {$type eq "file"} { set objname [file tail $objname] }
if {($glob && ![string match $name $objname])
|| (!$glob && $objname ne $name)} { continue }
}
lappend found $obj
}
return $found
}

proc ::InstallAPI::FindProcesses {args} {
global conf

::InstallAPI::ParseArgs _args $args {
-pid   { string  0 }
-glob  { boolean 0 0}
-name  { string  0 }
-user  { string  0 }
-group { string  0 }
}

if {$conf(windows)} {
if {[info exists _args(-pid)]} {
set pid $_args(-pid)
return [expr {[twapi::process_exists $pid] ? $pid : ""}]
}

set opts {}

if {$_args(-glob)} {
lappend opts -glob
}

if {[info exists _args(-name)]} {
lappend opts -name $_args(-name)
}

if {[info exists _args(-user)]} {
lappend opts -user $_args(-user)
}

return [eval twapi::get_process_ids $opts]
} else {
if {![info exists conf(OldPS)]} {
set conf(OldPS) [catch { exec ps -C ps }]
}

set ps     [list ps]
set all    0
set format "pid"

if {[info exists _args(-pid)]} {
lappend ps -p $_args(-pid)
}

if {[info exists _args(-name)]} {
if {$conf(OldPS)} {
set all 1
lappend format comm
} else {
lappend ps -C $_args(-name)
}
}

if {[info exists _args(-user)]} {
set all 0
lappend ps -U $_args(-user)
}

if {[info exists _args(-group)]} {
set all 0
lappend ps -G $_args(-group)
}

if {$all} { lappend ps -ae }

lappend ps -o $format

if {![catch { eval exec $ps } result]} {
set pids [list]
foreach list [lrange [split [string trim $result] \n] 1 end] {
if {[llength $list] > 1} {
set command [file tail [lindex $list 1]]
if {$_args(-name) ne $command} { continue }
}
lappend pids [lindex $list 0]
}
return $pids
}
}
}

proc ::InstallAPI::GetDisplayText {args} {
::InstallAPI::ParseArgs _args $args {
-object     { string  1 }
}

set object [::InstallJammer::ID $_args(-object)]
if {![::InstallJammer::ObjExists $object]} {
return -code error "object '$_args(-object)' does not exist"
}

set text ""
switch -- [$object type] {
"filegroup" {
set text [sub [$object get DisplayName]]
if {$text eq ""} { set text [$object name] }
}

"component" - "setuptype" {
set text [::InstallJammer::GetText $object DisplayName]
if {$text eq ""} { set text [$object name] }
}
}

return $text
}

proc ::InstallAPI::GetWidgetPath {args} {
global conf
global info

if {![::InstallJammer::InGuiMode]} { return }

::InstallAPI::ParseArgs _args $args {
-frame  { boolean 0 0 }
-widget { string  1 }
-window { string  0 }
}

set window noop
set widget $_args(-widget)

if {[info exists info(CurrentPane)]} { set window $info(CurrentPane) }

lassign [split $_args(-widget) .] pane wid
if {$wid ne ""} {
set pane [::InstallJammer::ID $pane]
if {[::InstallJammer::ObjExists $pane]} {
set widget $wid
set window $pane
}
}

if {[info exists _args(-window)]} {
set obj [::InstallJammer::ID $_args(-window)]
if {[::InstallJammer::ObjExists $obj] && [$obj ispane]} {
set window $obj
}
}

set name [join [::InstallJammer::ID $widget] ""]

if {[lsearch -exact $conf(ButtonWidgets) $name] > -1} {
set name [string tolower [string map {Button ""} $name]]
set widg [$info(Wizard) widget get $name]
} else {
if {[::InstallJammer::IsID $name]
&& [::InstallJammer::ObjExists $name]} {
set widg [$name window]
} else {
if {![::InstallJammer::ObjExists $window]} { return }
set widg [$window widget get $name]
}

if {![winfo exists $widg]} { return }
if {$_args(-frame)} { return $widg }
set class [winfo class $widg]
if {$class eq "Frame" || $class eq "TFrame" || $class eq "Labelframe"} {
foreach w [winfo children $widg] {
set class [winfo class $w]
if {$class eq "Label" || $class eq "TLabel"} { continue }
set widg $w
break
}
}
}

return $widg
}

proc ::InstallAPI::LanguageAPI {args} {
::InstallAPI::ParseArgs _args $args {
-do       { choice 1 "" "setlanguage" }
-language { string 0 "" }
}

global info

if {$_args(-do) eq "setlanguage"} {
set code [::InstallJammer::GetLanguageCode $_args(-language)]
if {$code eq ""} { return 0 }
debug "Setting language to $code"
set info(Language) $code
::msgcat::mclocale ""
::msgcat::mclocale en $info(Language)
::InstallJammer::UpdateWidgets -buttons 1
}

return 1
}

proc ::InstallAPI::PromptForDirectory {args} {
global conf

::InstallJammer::SetDialogArgs ChooseDirectory _args

::InstallAPI::ParseArgs _args $args {
-title         { string 0 "<%PromptForDirectoryTitle%>"}
-message       { string 0 "<%PromptForDirectoryMessage%>"}
-newfoldertext { string 0 "<%PromptForDirectoryNewFolderText%>"}
-variable      { string 0 }
-initialdir    { string 0 }
-normalize     { string 0 "platform" }
-virtualtext   { string 0 }
}

set normalize $_args(-normalize)
unset _args(-normalize)

if {[info exists _args(-virtualtext)]} {
set _args(-variable) ::info($_args(-virtualtext))
unset _args(-virtualtext)
}

if {[info exists _args(-variable)]} {
set varName $_args(-variable)
upvar 1 $varName dir
unset _args(-variable)
}

if {[info exists _args(-initialdir)]} {
set dir $_args(-initialdir)
} elseif {[info exists dir]} {
set _args(-initialdir) $dir
}

foreach x {-title -message -newfoldertext} {
set _args($x) [::InstallJammer::SubstText $_args($x)]
}
set _args(-oktext)      [::InstallJammer::SubstText "<%OK%>"]
set _args(-canceltext)  [::InstallJammer::SubstText "<%Cancel%>"]

if {$_args(-usenative)} {
set res [eval ::ij_chooseDirectory [array get _args]]
} else {
unset -nocomplain _args(-usenative)
if {[llength $conf(ParentWindow)] > 1} {
wm withdraw [lindex $conf(ParentWindow) end]
set _args(-parent) [::InstallJammer::TransientParent]
}

set res [eval ::ChooseDirectory .__choose_directory [array get _args]]

if {[llength $conf(ParentWindow)] > 1} {
wm deiconify [lindex $conf(ParentWindow) end]
}
}

if {$res ne ""} {
set dir $res
if {$conf(windows) && [file exists $dir]} {
set dir [file attributes $dir -longname]
}

set dir [::InstallJammer::Normalize $dir $normalize]

if {[info exists varName]} { set $varName $dir }

::InstallJammer::UpdateWidgets

return $dir
}
}

proc ::InstallAPI::ReadInstallInfo {args} {
global conf
global info

::InstallAPI::ParseArgs _args $args {
-array          { string 1 }
-prefix         { string 0 "" }
-installid      { string 0 "" }
-applicationid  { string 0 "<%ApplicationID%>" }
}

upvar 1 $_args(-array) array

set pre $_args(-prefix)
set pattern *.info
if {$_args(-installid) ne ""} { set pattern $_args(-installid).info }

set array(${pre}IDs)       {}
set array(${pre}Count)     0
set array(${pre}Exists)    0
set array(${pre}DirExists) 0

::InstallJammer::CheckAndUpdateInstallRegistry

::InstallJammer::GetInstallInfoDir
set appid [sub $_args(-applicationid)]
set dir [file join $info(InstallJammerRegistryDir) $appid]
foreach file [glob -nocomplain -dir $dir $pattern] {
set id [file root [file tail $file]]

set array(${pre}Exists) 1

set tmp(ID) $id
::InstallJammer::ReadPropertyFile $file tmp

set mtime [file mtime $file]
if {[info exists tmp(Date)]} { set mtime $tmp(Date) }

lappend sort [list $mtime $id $tmp(Dir)]

foreach {var val} [array get tmp] {
set array($id,$var) $val
}

if {$_args(-installid) ne ""} { break }
}

if {![info exists sort]} { return }

set installids  {}
set installdirs {}
foreach list [lsort -integer -index 0 $sort] {
set id  [lindex $list 1]
set dir [lindex $list 2]

if {$conf(windows)} {
set dir [string tolower [::InstallJammer::Normalize $dir]]
}

lappend installids  $id
lappend installdirs $dir
}

foreach {var val} [array get array $id,*] {
set var [string range $var [string length $id,] end]
set array(${pre}$var) $val
}

set array(${pre}IDs)       $installids
set array(${pre}Count)     [llength [lsort -unique $installdirs]]
set array(${pre}DirExists) [file exists $array(${pre}Dir)]

return $installids
}

proc ::InstallAPI::ResponseFileAPI {args} {
::InstallAPI::ParseArgs _args $args {
-do          { choice  1 "" {add read remove write}}
-file        { string  0 "" }
-virtualtext { string  0 "" }
}

global conf
global info

if {$_args(-do) eq "add"} {
foreach var $_args(-virtualtext) {
if {[lsearch -exact $conf(SaveResponseVars) [lindex $var 0]] < 0} {
lappend conf(SaveResponseVars) $var
}
}
}

if {$_args(-do) eq "remove"} {
foreach var $conf(SaveResponseVars) {
if {[lsearch -exact $_args(-virtualtext) [lindex $var 0]] < 0} {
lappend vars $var
}
}
set conf(SaveResponseVars) $vars
}

if {$_args(-do) eq "read" && [file exists $_args(-file)]} {
::InstallJammer::ReadPropertyFile $_args(-file) tmp

foreach list $conf(SaveResponseVars) {
lassign $list var type
if {![info exists tmp($var)]} { continue }

set val $tmp($var)
if {$type eq "boolean"} {
if {![string is boolean -strict $val]} { continue }
} elseif {$type eq "list"} {
set elems ""
foreach elem [split $val ,] {
lappend elems [string trim $elem]
}
set val $elems
}

set info($var) $val
}

::InstallJammer::SetupModeVariables
}

if {$_args(-do) eq "write" && $_args(-file) ne ""} {
set fp [open $_args(-file) w]
foreach list $conf(SaveResponseVars) {
lassign $list var type

set val [sub "<%$var%>"]
if {$val eq "<%$var%>"} { continue }

if {$type eq "boolean"} {
if {[string is true -strict $val]} { set val "Yes" }
if {[string is false -strict $val]} { set val "No" }
} elseif {$type eq "list"} {
set val [join $val ,]
}

puts $fp "$var: $val"
}
close $fp
}

return $conf(SaveResponseVars)
}

proc ::InstallAPI::SetActiveSetupType {args} {
global conf
global info

::InstallAPI::ParseArgs _args $args {
-setuptype  { string  1 }
}

if {[::InstallJammer::ObjExists $_args(-setuptype)]} {
set obj  $_args(-setuptype)
set name [$obj name]

if {![$obj is setuptype]} {
return -code error "$obj is not a valid Setup Type object"
}
} else {
set name $_args(-setuptype)
set obj  [::InstallAPI::FindObjects -type setuptype -name $name]
if {$obj eq ""} {
return -code error "Could not find Setup Type '$name'"
}
}

debug "Setting active setup type to $name ([$obj id])."

set info(InstallType)   $name
set info(InstallTypeID) [$obj id]
unset -nocomplain conf(PopulatedSetupType)

::InstallJammer::SelectSetupType $info(InstallTypeID)

foreach var [array names ::InstallJammer::Components] {
set ::InstallJammer::Components($var) ""
}

set components [$info(InstallTypeID) get Components]
foreach c [Components children recursive] {
if {[lsearch -exact $components $c] < 0} {
::InstallAPI::ComponentAPI -components $c -active 0 -updateinfo 0
} else {
::InstallAPI::ComponentAPI -components $c -active 1 -updateinfo 0
}
}

::InstallJammer::UpdateInstallInfo

return $info(InstallTypeID)
}

proc ::InstallAPI::SetInstallPassword {args} {
::InstallAPI::ParseArgs _args $args {
-password  { string 1 }
}

crapvfs::setPassword $_args(-password)
}

proc ::InstallAPI::SetUpdateWidgets {args} {
global conf

if {![::InstallJammer::InGuiMode]} { return }

::InstallAPI::ParseArgs _args $args {
-widgets  { string 1 }
}

set conf(UpdateWidgets) {}
foreach widget $_args(-widgets) {
lappend conf(UpdateWidgets) [join $widget ""]
}
}

proc ::InstallAPI::SetVirtualText {args} {
variable ::InstallJammer::UpdateVarCmds
variable ::InstallJammer::AutoUpdateVars

::InstallAPI::ParseArgs _args $args {
-action      { string  0 }
-autoupdate  { boolean 0 }
-command     { string  0 }
-language    { string  0 None }
-object      { string  0 }
-value       { string  0 }
-virtualtext { string  1 }
}

set val  ""
set var  $_args(-virtualtext)
set lang $_args(-language)

if {$lang eq "None"} {
upvar #0 ::InstallJammer::UpdateVarCmds  cmds
upvar #0 ::InstallJammer::AutoUpdateVars vars
} else {
if {[string equal -nocase $lang "all"]} {
set langs [::InstallJammer::GetLanguageCodes]
} else {
set langs [::InstallJammer::GetLanguageCode $lang]
}
if {![llength $langs]} {
return -code error "invalid language '$lang'"
}
upvar #0 ::InstallJammer::UpdateTextCmds cmds
upvar #0 ::InstallJammer::AutoUpdateText vars
}

if {[info exists _args(-object)]} {
set object [::InstallJammer::ID $_args(-object)]
set var $object,$var
}

if {[info exists _args(-value)]} {
set val $_args(-value)

if {$lang eq "None"} {
set ::info($var) $val
} else {
foreach lang $langs {
::msgcat::mcset $lang $var $val
}
if {[info exists cmds($var)]} {
uplevel #0 $cmds($var)
}
}
}

if {[info exists _args(-action)] && $_args(-action) ne ""} {
set command [list ::InstallJammer::ExecuteActions $_args(-action)]
}

if {[info exists _args(-command)] && $_args(-command) ne ""} {
set command $_args(-command)
}

if {[info exists command]} {
lappend cmds($var) $command

if {$lang eq "None"} {
if {[info exists ::info($var)]} {
uplevel #0 $command
}
} else {
foreach lang $langs {
if {[::msgcat::mcexists $var $lang]} {
uplevel #0 $command
break
}
}
}
}

if {[info exists _args(-autoupdate)]} {
set auto $_args(-autoupdate)
if {$auto && ![info exists vars($var)]} {
set vars($var) $val
::InstallJammer::UpdateWidgets -updateidletasks 1
} elseif {!$auto && [info exists vars($var)]} {
unset vars($var)
::InstallJammer::UpdateWidgets -updateidletasks 1
}
}
}

proc ::InstallAPI::VirtualTextAPI {args} {
::InstallAPI::ParseArgs _args $args {
-do          { choice 1 "" "settype"}
-type        { choice 0 "" "boolean directory"}
-virtualtext { string 1 }
}

if {$_args(-do) eq "settype"} {
if {![info exists _args(-type)]} {
return -code error "missing required option -type"
}

foreach var $_args(-virtualtext) {
set ::InstallJammer::VTTypes($var) $_args(-type)
}
}
}

proc ::InstallAPI::WizardAPI {args} {
::InstallAPI::ParseArgs _args $args {
-checkconditions { boolean 0 0 }
-do              { choice  1 "" {back next}}
-exit            { boolean 0 1 }
}

global info

set opts {1 0}
if {$_args(-checkconditions)} { set opts {1 1} }

if {$_args(-do) eq "back"} {
eval ::InstallJammer::Wizard back $opts
} elseif {$_args(-do) eq "next"} {
set next [$info(Wizard) step next]
if {$next eq ""} {
if {$_args(-exit)} { ::InstallAPI::Exit }
return
}
eval ::InstallJammer::Wizard next $opts
}
}

proc ::InstallAPI::ParseArgs {_arrayName _arglist optionspec} {
if {[verbose]} { debug "API Call: [info level -1]" }

upvar 1 $_arrayName array

if {[expr {[llength $_arglist] % 2}]} {
if {$_arglist ne "-?"} {
set proc [lindex [info level -1] 0]
return -code error "invalid number of arguments passed to $proc: all arguments must be key-value pairs"
}
}

array set options {
-subst       { string  0 0 }
-errorvar    { string  0 }
-returnerror { boolean 0 }
}

array set options $optionspec

set optionlist [lsort [array names options]]

set required [list]
foreach option $optionlist {
if {[lindex $options($option) 1]} {
lappend required $option
} elseif {[llength $options($option)] > 2} {
set array($option) [lindex $options($option) 2]
}
}

if {(![llength $_arglist] && [llength $required]) || $_arglist eq "-?"} {
set help "Usage: [lindex [info level -1] 0] ?option value ...?"
append help "\n\nOptions:"
foreach option $optionlist {
set type     [lindex $options($option) 0]
set required [lindex $options($option) 1]
set default  [lindex $options($option) 2]
set choices  [lindex $options($option) 3]

append help "\n\t"

if {!$required} { append help ? }
append help $option

if {$type eq "choice"} {
append help " [join $choices " | "]"
} elseif {$type eq "boolean"} {
append help " 0 | 1"
} else {
append help " [string range $option 1 end]"
}

if {$default ne ""} { append help " (Default: $default)" }

if {!$required} { append help ? }
}

return -code error $help
}

if {[expr {[llength $_arglist] % 2}]} {
return -code error "invalid number of arguments"
}

foreach {option value} $_arglist {
set option [string tolower $option]

if {![info exists options($option)]} {
return -code error "invalid option $option"
}

if {$option eq "-do"} { set value [join [string tolower $value] ""] }
set array($option) $value

set type [lindex $options($option) 0]
if {$type eq "string"} {
if {$array(-subst)} {
set array($option) [::InstallJammer::SubstText $value]
}
} elseif {$type eq "boolean"} {
if {![string is boolean -strict $value]} {
return -code error "invalid boolean value for $option"
}
} elseif {$type eq "choice"} {
set values [lindex $options($option) 3]
if {[lsearch -exact $values $value] < 0} {
set x "[string range $option 1 end] value"
return -code error [BWidget::badOptionString $x $value $values]
}
}
}

foreach option $required {
if {![info exists array($option)]} {
return -code error "missing required option $option"
}
}

unset array(-subst)

if {![info exists array(-returnerror)]} {
set array(-returnerror) 1
if {[info exists array(-errorvar)]} {
set array(-returnerror) 0
uplevel 1 [list upvar 1 $array(-errorvar) error]
}
}
}
} uninstall.tcl {
if {[info exists ::InstallJammer]} { return }

namespace eval ::InstallAPI {}
namespace eval ::InstallJammer {}

set ::debug   0
set ::verbose 0

set ::conf(osx)       [string equal $::tcl_platform(os) "Darwin"]
set ::conf(unix)      [string equal $::tcl_platform(platform) "unix"]
set ::conf(windows)   [string equal $::tcl_platform(platform) "windows"]
set ::conf(windows98) [expr {$conf(windows) && $tcl_platform(osVersion) < 5.0}]
set ::conf(vista)     [expr {$conf(windows) && $tcl_platform(osVersion) >= 6.0}]
set ::conf(wine)      [expr {$conf(windows) && [info exists env(_)]
&& [file tail $env(_)] eq "wine"}]

set ::info(Testing)   0
set ::info(Debugging) 0

trace add variable ::info write ::InstallJammer::VirtualTextTrace

proc ::InstallJammer::VirtualTextTrace { name1 name2 op } {
upvar #0 ::info($name2) var

if {[info exists ::InstallJammer::UpdateVarCmds($name2)]} {
foreach cmd $::InstallJammer::UpdateVarCmds($name2) {
uplevel #0 $cmd
}
}

if {[info exists ::InstallJammer::AutoUpdateVars($name2)]
&& $var ne $::InstallJammer::AutoUpdateVars($name2)} {
set ::InstallJammer::AutoUpdateVars($name2) $var
::InstallJammer::UpdateWidgets -updateidletasks 1
}
}

proc ::InstallJammer::SourceCachedFile { file {namespace "::"} } {
if {[info exists ::InstallJammer::files($file)]} {
namespace eval $namespace $::InstallJammer::files($file)
return 1
}
return 0
}
array set ::InstallJammer::CommandLineOptions {
mode
{UninstallMode Choice No No {Console Silent Standard} {set the mode to run the uninstaller in}}

}

set PaneList {Uninstall UninstallComplete UninstallDetails}
array set ::InstallJammer::Properties {
079D94E6-87BC-4D19-9722-BC9B2DCF7CCB,Active
{Yes}

079D94E6-87BC-4D19-9722-BC9B2DCF7CCB,CheckCondition
{6}

079D94E6-87BC-4D19-9722-BC9B2DCF7CCB,Component
{}

079D94E6-87BC-4D19-9722-BC9B2DCF7CCB,FailureFocus
{}

079D94E6-87BC-4D19-9722-BC9B2DCF7CCB,FailureMessage
{}

079D94E6-87BC-4D19-9722-BC9B2DCF7CCB,ID
{}

079D94E6-87BC-4D19-9722-BC9B2DCF7CCB,Include
{0}

079D94E6-87BC-4D19-9722-BC9B2DCF7CCB,Operator
{true}

079D94E6-87BC-4D19-9722-BC9B2DCF7CCB,String
{<%GuiMode%>}

22B5D21C-1D8C-49B8-8764-FE24A53F7FA8,Active
{Yes}

22B5D21C-1D8C-49B8-8764-FE24A53F7FA8,Alias
{Cancel Actions}

22B5D21C-1D8C-49B8-8764-FE24A53F7FA8,Conditions
{}

22B5D21C-1D8C-49B8-8764-FE24A53F7FA8,ID
{}

317238D5-A761-4160-93C6-3DD6B7FF184B,Active
{Yes}

317238D5-A761-4160-93C6-3DD6B7FF184B,CheckCondition
{3}

317238D5-A761-4160-93C6-3DD6B7FF184B,Component
{}

317238D5-A761-4160-93C6-3DD6B7FF184B,FailureFocus
{}

317238D5-A761-4160-93C6-3DD6B7FF184B,FailureMessage
{}

317238D5-A761-4160-93C6-3DD6B7FF184B,ID
{}

317238D5-A761-4160-93C6-3DD6B7FF184B,Include
{0}

317238D5-A761-4160-93C6-3DD6B7FF184B,Operator
{true}

317238D5-A761-4160-93C6-3DD6B7FF184B,String
{<%ErrorsOccurred%>}

382A3958-9C4A-4C51-B288-CED159A82636,Active
{Yes}

382A3958-9C4A-4C51-B288-CED159A82636,Alias
{Setup Actions}

382A3958-9C4A-4C51-B288-CED159A82636,Conditions
{}

382A3958-9C4A-4C51-B288-CED159A82636,ID
{}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,Active
{Yes}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,BackButton,subst
{1}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,Buttons
{Next/Cancel}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,CancelButton,subst
{1}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,Caption,subst
{1}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,Component
{}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,Conditions
{}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,FileValue,subst
{1}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,ID
{}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,Icon
{<%Icon%>}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,Include
{0}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,Message,subst
{1}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,NextButton,subst
{1}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,ProgressValue,subst
{1}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,Subtitle,subst
{1}

3F8FDE11-35CC-4405-B6A1-96EA4D066593,Title,subst
{1}

4CA9DD1A-2552-4741-86F5-8AF80B4AB844,Active
{Yes}

4CA9DD1A-2552-4741-86F5-8AF80B4AB844,CheckCondition
{6}

4CA9DD1A-2552-4741-86F5-8AF80B4AB844,Component
{}

4CA9DD1A-2552-4741-86F5-8AF80B4AB844,FailureFocus
{}

4CA9DD1A-2552-4741-86F5-8AF80B4AB844,FailureMessage
{}

4CA9DD1A-2552-4741-86F5-8AF80B4AB844,ID
{}

4CA9DD1A-2552-4741-86F5-8AF80B4AB844,Include
{0}

4CA9DD1A-2552-4741-86F5-8AF80B4AB844,Operator
{false}

4CA9DD1A-2552-4741-86F5-8AF80B4AB844,String
{<%Answer%>}

4D4F3B02-34C1-4DA3-A2BF-6DFBEAC1EEC2,Active
{Yes}

4D4F3B02-34C1-4DA3-A2BF-6DFBEAC1EEC2,Component
{}

4D4F3B02-34C1-4DA3-A2BF-6DFBEAC1EEC2,Conditions
{}

4D4F3B02-34C1-4DA3-A2BF-6DFBEAC1EEC2,ExecuteAction
{1}

4D4F3B02-34C1-4DA3-A2BF-6DFBEAC1EEC2,ID
{}

4D4F3B02-34C1-4DA3-A2BF-6DFBEAC1EEC2,IgnoreErrors
{No}

4D4F3B02-34C1-4DA3-A2BF-6DFBEAC1EEC2,Include
{0}

55CC82CB-FC93-4AA5-9AED-81D4A8E48DE9,Active
{Yes}

55CC82CB-FC93-4AA5-9AED-81D4A8E48DE9,Component
{}

55CC82CB-FC93-4AA5-9AED-81D4A8E48DE9,Conditions
{}

55CC82CB-FC93-4AA5-9AED-81D4A8E48DE9,Default
{Yes}

55CC82CB-FC93-4AA5-9AED-81D4A8E48DE9,ExecuteAction
{1}

55CC82CB-FC93-4AA5-9AED-81D4A8E48DE9,ID
{}

55CC82CB-FC93-4AA5-9AED-81D4A8E48DE9,IgnoreErrors
{No}

55CC82CB-FC93-4AA5-9AED-81D4A8E48DE9,Include
{0}

55CC82CB-FC93-4AA5-9AED-81D4A8E48DE9,Prompt
{<%UninstallStartupText%>}

55CC82CB-FC93-4AA5-9AED-81D4A8E48DE9,VirtualText
{Answer}

5D3A1856-08AF-4BC2-A601-1F1B166FB226,Active
{Yes}

5D3A1856-08AF-4BC2-A601-1F1B166FB226,AllowQuit
{Yes}

5D3A1856-08AF-4BC2-A601-1F1B166FB226,Component
{}

5D3A1856-08AF-4BC2-A601-1F1B166FB226,Conditions
{}

5D3A1856-08AF-4BC2-A601-1F1B166FB226,ExecuteAction
{1}

5D3A1856-08AF-4BC2-A601-1F1B166FB226,ID
{}

5D3A1856-08AF-4BC2-A601-1F1B166FB226,IgnoreErrors
{No}

5D3A1856-08AF-4BC2-A601-1F1B166FB226,Include
{0}

5D3A1856-08AF-4BC2-A601-1F1B166FB226,Message,subst
{1}

5D3A1856-08AF-4BC2-A601-1F1B166FB226,PaginateMessage
{Yes}

5D3A1856-08AF-4BC2-A601-1F1B166FB226,WrapText
{Yes}

5EF3691E-8C78-4DCD-AFB8-48B4B96B8E78,Action
{Uninstall Actions}

5EF3691E-8C78-4DCD-AFB8-48B4B96B8E78,Active
{Yes}

5EF3691E-8C78-4DCD-AFB8-48B4B96B8E78,Component
{}

5EF3691E-8C78-4DCD-AFB8-48B4B96B8E78,Conditions
{}

5EF3691E-8C78-4DCD-AFB8-48B4B96B8E78,EvaluateConditions
{Yes}

5EF3691E-8C78-4DCD-AFB8-48B4B96B8E78,ExecuteAction
{1}

5EF3691E-8C78-4DCD-AFB8-48B4B96B8E78,ID
{}

5EF3691E-8C78-4DCD-AFB8-48B4B96B8E78,IgnoreErrors
{No}

5EF3691E-8C78-4DCD-AFB8-48B4B96B8E78,Include
{0}

68379AAE-1F16-478C-AA38-08911974CF43,Active
{Yes}

68379AAE-1F16-478C-AA38-08911974CF43,Component
{}

68379AAE-1F16-478C-AA38-08911974CF43,Conditions
{}

68379AAE-1F16-478C-AA38-08911974CF43,ExecuteAction
{1}

68379AAE-1F16-478C-AA38-08911974CF43,ExitCode
{}

68379AAE-1F16-478C-AA38-08911974CF43,ExitType
{Cancel}

68379AAE-1F16-478C-AA38-08911974CF43,ID
{}

68379AAE-1F16-478C-AA38-08911974CF43,IgnoreErrors
{No}

68379AAE-1F16-478C-AA38-08911974CF43,Include
{0}

69594F85-CA9E-4929-A720-4F1EF022934A,Active
{Yes}

69594F85-CA9E-4929-A720-4F1EF022934A,BackButton,subst
{1}

69594F85-CA9E-4929-A720-4F1EF022934A,Buttons
{Next/Cancel}

69594F85-CA9E-4929-A720-4F1EF022934A,CancelButton,subst
{1}

69594F85-CA9E-4929-A720-4F1EF022934A,Caption,subst
{1}

69594F85-CA9E-4929-A720-4F1EF022934A,Component
{}

69594F85-CA9E-4929-A720-4F1EF022934A,Conditions
{}

69594F85-CA9E-4929-A720-4F1EF022934A,ID
{}

69594F85-CA9E-4929-A720-4F1EF022934A,Image
{<%Image%>}

69594F85-CA9E-4929-A720-4F1EF022934A,Include
{0}

69594F85-CA9E-4929-A720-4F1EF022934A,Message,subst
{1}

69594F85-CA9E-4929-A720-4F1EF022934A,NextButton,subst
{1}

69594F85-CA9E-4929-A720-4F1EF022934A,WizardOptions
{-bg #FFFFFF -separator 0}

6F441F0D-22BB-4735-8334-BB5D2DA1E6AB,Active
{Yes}

6F441F0D-22BB-4735-8334-BB5D2DA1E6AB,Component
{}

6F441F0D-22BB-4735-8334-BB5D2DA1E6AB,Conditions
{}

6F441F0D-22BB-4735-8334-BB5D2DA1E6AB,ExecuteAction
{1}

6F441F0D-22BB-4735-8334-BB5D2DA1E6AB,ID
{}

6F441F0D-22BB-4735-8334-BB5D2DA1E6AB,IgnoreErrors
{No}

6F441F0D-22BB-4735-8334-BB5D2DA1E6AB,Include
{0}

6F441F0D-22BB-4735-8334-BB5D2DA1E6AB,ShowConsoleProgress
{Yes}

82B54257-2C32-4996-837F-3CE05C8A30A3,Active
{Yes}

82B54257-2C32-4996-837F-3CE05C8A30A3,CheckCondition
{6}

82B54257-2C32-4996-837F-3CE05C8A30A3,Component
{}

82B54257-2C32-4996-837F-3CE05C8A30A3,DefaultButton
{Yes}

82B54257-2C32-4996-837F-3CE05C8A30A3,FailureFocus
{}

82B54257-2C32-4996-837F-3CE05C8A30A3,FailureMessage
{}

82B54257-2C32-4996-837F-3CE05C8A30A3,ID
{}

82B54257-2C32-4996-837F-3CE05C8A30A3,Icon
{info}

82B54257-2C32-4996-837F-3CE05C8A30A3,Include
{0}

82B54257-2C32-4996-837F-3CE05C8A30A3,Message,subst
{1}

82B54257-2C32-4996-837F-3CE05C8A30A3,ResultVirtualText
{Answer}

82B54257-2C32-4996-837F-3CE05C8A30A3,Title,subst
{1}

82B54257-2C32-4996-837F-3CE05C8A30A3,TrueValue
{No}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Active
{Yes}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,BackButton,subst
{1}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Buttons
{Next/Cancel}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,CancelButton,subst
{1}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Caption,subst
{1}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Component
{}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Conditions
{}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,ID
{}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Icon
{<%Icon%>}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Include
{0}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Message,subst
{1}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,NextButton,subst
{1}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Subtitle,subst
{1}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Text,subst
{1}

94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC,Title,subst
{1}

A20FFB87-1F66-4F1D-A53D-D718FBE4DCEF,Active
{Yes}

A20FFB87-1F66-4F1D-A53D-D718FBE4DCEF,Component
{}

A20FFB87-1F66-4F1D-A53D-D718FBE4DCEF,Conditions
{}

A20FFB87-1F66-4F1D-A53D-D718FBE4DCEF,ExecuteAction
{1}

A20FFB87-1F66-4F1D-A53D-D718FBE4DCEF,ExitCode
{}

A20FFB87-1F66-4F1D-A53D-D718FBE4DCEF,ExitType
{Cancel}

A20FFB87-1F66-4F1D-A53D-D718FBE4DCEF,ID
{}

A20FFB87-1F66-4F1D-A53D-D718FBE4DCEF,IgnoreErrors
{No}

A20FFB87-1F66-4F1D-A53D-D718FBE4DCEF,Include
{0}

A2C544A0-53CA-424E-9EA5-BF513DFF27D3,Action
{Uninstall Actions}

A2C544A0-53CA-424E-9EA5-BF513DFF27D3,Active
{Yes}

A2C544A0-53CA-424E-9EA5-BF513DFF27D3,Component
{}

A2C544A0-53CA-424E-9EA5-BF513DFF27D3,Conditions
{}

A2C544A0-53CA-424E-9EA5-BF513DFF27D3,EvaluateConditions
{Yes}

A2C544A0-53CA-424E-9EA5-BF513DFF27D3,ExecuteAction
{1}

A2C544A0-53CA-424E-9EA5-BF513DFF27D3,ID
{}

A2C544A0-53CA-424E-9EA5-BF513DFF27D3,IgnoreErrors
{No}

A2C544A0-53CA-424E-9EA5-BF513DFF27D3,Include
{0}

AEF1ECDB-7AFD-4833-A486-0FB883F70E00,Active
{Yes}

AEF1ECDB-7AFD-4833-A486-0FB883F70E00,Component
{}

AEF1ECDB-7AFD-4833-A486-0FB883F70E00,Conditions
{}

AEF1ECDB-7AFD-4833-A486-0FB883F70E00,ExecuteAction
{5}

AEF1ECDB-7AFD-4833-A486-0FB883F70E00,ID
{}

AEF1ECDB-7AFD-4833-A486-0FB883F70E00,IgnoreErrors
{No}

AEF1ECDB-7AFD-4833-A486-0FB883F70E00,Include
{0}

AEF1ECDB-7AFD-4833-A486-0FB883F70E00,State
{disabled}

AEF1ECDB-7AFD-4833-A486-0FB883F70E00,Text
{}

AEF1ECDB-7AFD-4833-A486-0FB883F70E00,Widget
{NextButton; CancelButton}

AIX-ppc,Active
{No}

AIX-ppc,BuildSeparateArchives
{No}

AIX-ppc,DefaultDirectoryPermission
{0755}

AIX-ppc,DefaultFilePermission
{0755}

AIX-ppc,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

AIX-ppc,FallBackToConsole
{Yes}

AIX-ppc,InstallDir
{<%Home%>/<%ShortAppName%>}

AIX-ppc,InstallMode
{Standard}

AIX-ppc,InstallType
{Typical}

AIX-ppc,ProgramExecutable
{<%InstallDir%>/Papilio_Programmer.sh}

AIX-ppc,ProgramFolderAllUsers
{No}

AIX-ppc,ProgramFolderName
{<%AppName%>}

AIX-ppc,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

AIX-ppc,ProgramName
{}

AIX-ppc,ProgramReadme
{<%InstallDir%>/README.txt}

AIX-ppc,PromptForRoot
{Yes}

AIX-ppc,RequireRoot
{No}

AIX-ppc,RootInstallDir
{/usr/local/<%ShortAppName%>}

BA68BA0A-BAA3-45B6-9822-D092DE188477,Active
{Yes}

BA68BA0A-BAA3-45B6-9822-D092DE188477,AllowQuit
{Yes}

BA68BA0A-BAA3-45B6-9822-D092DE188477,Component
{}

BA68BA0A-BAA3-45B6-9822-D092DE188477,Conditions
{}

BA68BA0A-BAA3-45B6-9822-D092DE188477,ExecuteAction
{1}

BA68BA0A-BAA3-45B6-9822-D092DE188477,ID
{}

BA68BA0A-BAA3-45B6-9822-D092DE188477,IgnoreErrors
{No}

BA68BA0A-BAA3-45B6-9822-D092DE188477,Include
{0}

BA68BA0A-BAA3-45B6-9822-D092DE188477,Message,subst
{1}

BA68BA0A-BAA3-45B6-9822-D092DE188477,PaginateMessage
{Yes}

BA68BA0A-BAA3-45B6-9822-D092DE188477,WrapText
{Yes}

C5B03E9D-A78B-44EB-951C-99FFB3561A98,Action
{Uninstall Actions}

C5B03E9D-A78B-44EB-951C-99FFB3561A98,Active
{Yes}

C5B03E9D-A78B-44EB-951C-99FFB3561A98,Component
{}

C5B03E9D-A78B-44EB-951C-99FFB3561A98,Conditions
{}

C5B03E9D-A78B-44EB-951C-99FFB3561A98,EvaluateConditions
{Yes}

C5B03E9D-A78B-44EB-951C-99FFB3561A98,ExecuteAction
{1}

C5B03E9D-A78B-44EB-951C-99FFB3561A98,ID
{}

C5B03E9D-A78B-44EB-951C-99FFB3561A98,IgnoreErrors
{No}

C5B03E9D-A78B-44EB-951C-99FFB3561A98,Include
{0}

D5BD6B16-D9AB-4E54-8086-A91F1D149E35,Active
{Yes}

D5BD6B16-D9AB-4E54-8086-A91F1D149E35,Alias
{Uninstall Actions}

D5BD6B16-D9AB-4E54-8086-A91F1D149E35,Conditions
{}

D5BD6B16-D9AB-4E54-8086-A91F1D149E35,ID
{}

E24E9448-4CBB-4029-BD3C-20F31EEA660C,Active
{Yes}

E24E9448-4CBB-4029-BD3C-20F31EEA660C,Component
{}

E24E9448-4CBB-4029-BD3C-20F31EEA660C,Conditions
{}

E24E9448-4CBB-4029-BD3C-20F31EEA660C,ExecuteAction
{1}

E24E9448-4CBB-4029-BD3C-20F31EEA660C,ExitCode
{}

E24E9448-4CBB-4029-BD3C-20F31EEA660C,ExitType
{Finish}

E24E9448-4CBB-4029-BD3C-20F31EEA660C,ID
{}

E24E9448-4CBB-4029-BD3C-20F31EEA660C,IgnoreErrors
{No}

E24E9448-4CBB-4029-BD3C-20F31EEA660C,Include
{0}

E8BE962F-684B-467E-BC47-BB4F2580CB0A,Active
{Yes}

E8BE962F-684B-467E-BC47-BB4F2580CB0A,Alias
{Finish Actions}

E8BE962F-684B-467E-BC47-BB4F2580CB0A,Conditions
{}

E8BE962F-684B-467E-BC47-BB4F2580CB0A,ID
{}

EB547982-C728-4D55-86C7-184D975CE364,Active
{Yes}

EB547982-C728-4D55-86C7-184D975CE364,Component
{}

EB547982-C728-4D55-86C7-184D975CE364,Conditions
{}

EB547982-C728-4D55-86C7-184D975CE364,ExecuteAction
{1}

EB547982-C728-4D55-86C7-184D975CE364,ExitCode
{}

EB547982-C728-4D55-86C7-184D975CE364,ExitType
{Finish}

EB547982-C728-4D55-86C7-184D975CE364,ID
{}

EB547982-C728-4D55-86C7-184D975CE364,IgnoreErrors
{No}

EB547982-C728-4D55-86C7-184D975CE364,Include
{0}

FE203760-F942-41E1-B15B-0DC70872AA50,Active
{Yes}

FE203760-F942-41E1-B15B-0DC70872AA50,Alias
{Startup Actions}

FE203760-F942-41E1-B15B-0DC70872AA50,Conditions
{}

FE203760-F942-41E1-B15B-0DC70872AA50,ID
{}

FreeBSD-4-x86,Active
{No}

FreeBSD-4-x86,BuildSeparateArchives
{No}

FreeBSD-4-x86,DefaultDirectoryPermission
{0755}

FreeBSD-4-x86,DefaultFilePermission
{0755}

FreeBSD-4-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

FreeBSD-4-x86,FallBackToConsole
{Yes}

FreeBSD-4-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

FreeBSD-4-x86,InstallMode
{Standard}

FreeBSD-4-x86,InstallType
{Typical}

FreeBSD-4-x86,ProgramExecutable
{}

FreeBSD-4-x86,ProgramFolderAllUsers
{No}

FreeBSD-4-x86,ProgramFolderName
{<%AppName%>}

FreeBSD-4-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

FreeBSD-4-x86,ProgramName
{}

FreeBSD-4-x86,ProgramReadme
{<%InstallDir%>/README.txt}

FreeBSD-4-x86,PromptForRoot
{Yes}

FreeBSD-4-x86,RequireRoot
{No}

FreeBSD-4-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

FreeBSD-5-x86,Active
{No}

FreeBSD-5-x86,BuildSeparateArchives
{No}

FreeBSD-5-x86,DefaultDirectoryPermission
{0755}

FreeBSD-5-x86,DefaultFilePermission
{0755}

FreeBSD-5-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

FreeBSD-5-x86,FallBackToConsole
{Yes}

FreeBSD-5-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

FreeBSD-5-x86,InstallMode
{Standard}

FreeBSD-5-x86,InstallType
{Typical}

FreeBSD-5-x86,ProgramExecutable
{}

FreeBSD-5-x86,ProgramFolderAllUsers
{No}

FreeBSD-5-x86,ProgramFolderName
{<%AppName%>}

FreeBSD-5-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

FreeBSD-5-x86,ProgramName
{}

FreeBSD-5-x86,ProgramReadme
{<%InstallDir%>/README.txt}

FreeBSD-5-x86,PromptForRoot
{Yes}

FreeBSD-5-x86,RequireRoot
{No}

FreeBSD-5-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

FreeBSD-6-x86,Active
{No}

FreeBSD-6-x86,BuildSeparateArchives
{No}

FreeBSD-6-x86,DefaultDirectoryPermission
{0755}

FreeBSD-6-x86,DefaultFilePermission
{0755}

FreeBSD-6-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

FreeBSD-6-x86,FallBackToConsole
{Yes}

FreeBSD-6-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

FreeBSD-6-x86,InstallMode
{Standard}

FreeBSD-6-x86,InstallType
{Typical}

FreeBSD-6-x86,ProgramExecutable
{}

FreeBSD-6-x86,ProgramFolderAllUsers
{No}

FreeBSD-6-x86,ProgramFolderName
{<%AppName%>}

FreeBSD-6-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

FreeBSD-6-x86,ProgramName
{}

FreeBSD-6-x86,ProgramReadme
{<%InstallDir%>/README.txt}

FreeBSD-6-x86,PromptForRoot
{Yes}

FreeBSD-6-x86,RequireRoot
{No}

FreeBSD-6-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

FreeBSD-7-x86,Active
{No}

FreeBSD-7-x86,BuildSeparateArchives
{No}

FreeBSD-7-x86,DefaultDirectoryPermission
{0755}

FreeBSD-7-x86,DefaultFilePermission
{0755}

FreeBSD-7-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

FreeBSD-7-x86,FallBackToConsole
{Yes}

FreeBSD-7-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

FreeBSD-7-x86,InstallMode
{Standard}

FreeBSD-7-x86,InstallType
{Typical}

FreeBSD-7-x86,ProgramExecutable
{}

FreeBSD-7-x86,ProgramFolderAllUsers
{No}

FreeBSD-7-x86,ProgramFolderName
{<%AppName%>}

FreeBSD-7-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

FreeBSD-7-x86,ProgramName
{}

FreeBSD-7-x86,ProgramReadme
{<%InstallDir%>/README.txt}

FreeBSD-7-x86,PromptForRoot
{Yes}

FreeBSD-7-x86,RequireRoot
{No}

FreeBSD-7-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

HPUX-hppa,Active
{No}

HPUX-hppa,BuildSeparateArchives
{No}

HPUX-hppa,DefaultDirectoryPermission
{0755}

HPUX-hppa,DefaultFilePermission
{0755}

HPUX-hppa,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

HPUX-hppa,FallBackToConsole
{Yes}

HPUX-hppa,InstallDir
{<%Home%>/<%ShortAppName%>}

HPUX-hppa,InstallMode
{Standard}

HPUX-hppa,InstallType
{Typical}

HPUX-hppa,ProgramExecutable
{}

HPUX-hppa,ProgramFolderAllUsers
{No}

HPUX-hppa,ProgramFolderName
{<%AppName%>}

HPUX-hppa,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

HPUX-hppa,ProgramName
{}

HPUX-hppa,ProgramReadme
{<%InstallDir%>/README.txt}

HPUX-hppa,PromptForRoot
{Yes}

HPUX-hppa,RequireRoot
{No}

HPUX-hppa,RootInstallDir
{/usr/local/<%ShortAppName%>}

Linux-x86,Active
{No}

Linux-x86,BuildSeparateArchives
{No}

Linux-x86,DefaultDirectoryPermission
{0755}

Linux-x86,DefaultFilePermission
{0755}

Linux-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

Linux-x86,FallBackToConsole
{Yes}

Linux-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

Linux-x86,InstallMode
{Standard}

Linux-x86,InstallType
{Typical}

Linux-x86,ProgramExecutable
{}

Linux-x86,ProgramFolderAllUsers
{No}

Linux-x86,ProgramFolderName
{<%AppName%>}

Linux-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

Linux-x86,ProgramName
{}

Linux-x86,ProgramReadme
{<%InstallDir%>/README.txt}

Linux-x86,PromptForRoot
{Yes}

Linux-x86,RequireRoot
{No}

Linux-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

Linux-x86_64,Active
{No}

Linux-x86_64,BuildSeparateArchives
{No}

Linux-x86_64,DefaultDirectoryPermission
{0755}

Linux-x86_64,DefaultFilePermission
{0755}

Linux-x86_64,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

Linux-x86_64,FallBackToConsole
{Yes}

Linux-x86_64,InstallDir
{<%Home%>/<%ShortAppName%>}

Linux-x86_64,InstallMode
{Standard}

Linux-x86_64,InstallType
{Typical}

Linux-x86_64,ProgramExecutable
{}

Linux-x86_64,ProgramFolderAllUsers
{No}

Linux-x86_64,ProgramFolderName
{<%AppName%>}

Linux-x86_64,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

Linux-x86_64,ProgramName
{}

Linux-x86_64,ProgramReadme
{<%InstallDir%>/README.txt}

Linux-x86_64,PromptForRoot
{Yes}

Linux-x86_64,RequireRoot
{No}

Linux-x86_64,RootInstallDir
{/usr/local/<%ShortAppName%>}

Solaris-sparc,Active
{No}

Solaris-sparc,BuildSeparateArchives
{No}

Solaris-sparc,DefaultDirectoryPermission
{0755}

Solaris-sparc,DefaultFilePermission
{0755}

Solaris-sparc,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

Solaris-sparc,FallBackToConsole
{Yes}

Solaris-sparc,InstallDir
{<%Home%>/<%ShortAppName%>}

Solaris-sparc,InstallMode
{Standard}

Solaris-sparc,InstallType
{Typical}

Solaris-sparc,ProgramExecutable
{}

Solaris-sparc,ProgramFolderAllUsers
{No}

Solaris-sparc,ProgramFolderName
{<%AppName%>}

Solaris-sparc,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

Solaris-sparc,ProgramName
{}

Solaris-sparc,ProgramReadme
{<%InstallDir%>/README.txt}

Solaris-sparc,PromptForRoot
{Yes}

Solaris-sparc,RequireRoot
{No}

Solaris-sparc,RootInstallDir
{/usr/local/<%ShortAppName%>}

Solaris-x86,Active
{No}

Solaris-x86,BuildSeparateArchives
{No}

Solaris-x86,DefaultDirectoryPermission
{0755}

Solaris-x86,DefaultFilePermission
{0755}

Solaris-x86,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

Solaris-x86,FallBackToConsole
{Yes}

Solaris-x86,InstallDir
{<%Home%>/<%ShortAppName%>}

Solaris-x86,InstallMode
{Standard}

Solaris-x86,InstallType
{Typical}

Solaris-x86,ProgramExecutable
{}

Solaris-x86,ProgramFolderAllUsers
{No}

Solaris-x86,ProgramFolderName
{<%AppName%>}

Solaris-x86,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

Solaris-x86,ProgramName
{}

Solaris-x86,ProgramReadme
{<%InstallDir%>/README.txt}

Solaris-x86,PromptForRoot
{Yes}

Solaris-x86,RequireRoot
{No}

Solaris-x86,RootInstallDir
{/usr/local/<%ShortAppName%>}

TarArchive,Active
{Yes}

TarArchive,BuildSeparateArchives
{No}

TarArchive,CompressionLevel
{6}

TarArchive,DefaultDirectoryPermission
{0755}

TarArchive,DefaultFilePermission
{0755}

TarArchive,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

TarArchive,FallBackToConsole
{Yes}

TarArchive,InstallDir
{<%Home%>/<%ShortAppName%>}

TarArchive,InstallMode
{Standard}

TarArchive,InstallType
{Typical}

TarArchive,OutputFileName
{<%ShortAppName%>-<%Version%>.tar.gz}

TarArchive,ProgramExecutable
{}

TarArchive,ProgramFolderAllUsers
{No}

TarArchive,ProgramFolderName
{<%AppName%>}

TarArchive,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

TarArchive,ProgramName
{}

TarArchive,ProgramReadme
{<%InstallDir%>/README.txt}

TarArchive,PromptForRoot
{Yes}

TarArchive,RequireRoot
{No}

TarArchive,RootInstallDir
{/usr/local/<%ShortAppName%>}

TarArchive,VirtualTextMap
{<%InstallDir%> <%ShortAppName%>}

Windows,Active
{Yes}

Windows,BuildSeparateArchives
{No}

Windows,Executable
{<%AppName%>-<%Version%>-Setup<%Ext%>}

Windows,FileDescription
{<%AppName%> <%Version%> Setup}

Windows,IncludeTWAPI
{No}

Windows,InstallDir
{<%PROGRAM_FILES%>/Gadget Factory}

Windows,InstallMode
{Standard}

Windows,InstallType
{Typical}

Windows,LastRequireAdministrator
{Yes}

Windows,ProgramExecutable
{}

Windows,ProgramFolderAllUsers
{No}

Windows,ProgramFolderName
{Gadget Factory}

Windows,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

Windows,ProgramName
{}

Windows,ProgramReadme
{<%InstallDir%>/README.txt}

Windows,RequireAdministrator
{Yes}

Windows,UseUncompressedBinaries
{No}

Windows,WindowsIcon
{Setup Blue Screen.ico}

ZipArchive,Active
{Yes}

ZipArchive,BuildSeparateArchives
{No}

ZipArchive,CompressionLevel
{6}

ZipArchive,DefaultDirectoryPermission
{0755}

ZipArchive,DefaultFilePermission
{0755}

ZipArchive,Executable
{<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>}

ZipArchive,FallBackToConsole
{Yes}

ZipArchive,InstallDir
{<%Home%>/<%ShortAppName%>}

ZipArchive,InstallMode
{Standard}

ZipArchive,InstallType
{Typical}

ZipArchive,OutputFileName
{<%ShortAppName%>-<%Version%>.zip}

ZipArchive,ProgramExecutable
{}

ZipArchive,ProgramFolderAllUsers
{No}

ZipArchive,ProgramFolderName
{<%AppName%>}

ZipArchive,ProgramLicense
{<%InstallDir%>/LICENSE.txt}

ZipArchive,ProgramName
{}

ZipArchive,ProgramReadme
{<%InstallDir%>/README.txt}

ZipArchive,PromptForRoot
{Yes}

ZipArchive,RequireRoot
{No}

ZipArchive,RootInstallDir
{/usr/local/<%ShortAppName%>}

ZipArchive,VirtualTextMap
{<%InstallDir%> <%ShortAppName%>}

}
namespace eval ::InstallJammer::actions {}
namespace eval ::InstallJammer::conditions {}
proc ::InstallJammer::conditions::AskYesOrNo {obj} {
global info

$obj properties props

if {$info(SilentMode)} {
debug "Ask Yes or No condition not valid in Silent mode."
debug "Skipping condition and returning $props(TrueValue)."
return $props(TrueValue)
}

set id [$obj id]

if {$info(ConsoleMode)} {
debug "Using Console Ask Yes or No action in place of Ask Yes or No condition for console install."

$obj set Default     $props(DefaultButton)
$obj set Prompt      [::InstallJammer::GetText $id Message -subst 0]
$obj set VirtualText $props(ResultVirtualText)

set result [::InstallJammer::actions::ConsoleAskYesOrNo $obj]
return [string equal -nocase $result $props(TrueValue)]
}

set title   [::InstallJammer::GetText $id Title]
set message [::InstallJammer::GetText $id Message]

set args [list -type yesno -title $title -message $message]
lappend args -icon $props(Icon)
lappend args -default [string tolower $props(DefaultButton)]
lappend args -parent [::InstallJammer::TransientParent]

set result [eval ::InstallJammer::MessageBox $args]

if {[string length $props(ResultVirtualText)]} {
global info
set info($props(ResultVirtualText)) $result
}

return [string equal -nocase $result $props(TrueValue)]
}

proc ::InstallJammer::actions::ConsoleAskYesOrNo {obj} {
$obj properties props -subst 1

set prompt \n$props(Prompt)

if {$props(Default) eq "" || $props(Default) eq "None"} {
append prompt { [y/n]}
} elseif {$props(Default) eq "Yes"} {
append prompt { [n/Y]}
} else {
append prompt { [y/N]}
}

append prompt " "

while {1} {
puts -nonewline stdout [::InstallJammer::WrapText $prompt]
flush stdout

set ans [string trim [string tolower [gets stdin]]]

puts  stdout ""
flush stdout

if {$ans eq "" && $props(Default) ne "None"} {
set ans $props(Default)
break
}

if {$ans eq "n"} { set ans "no" }
if {$ans eq "y"} { set ans "yes" }

if {$ans eq "yes" || $ans eq "no"} { break }
}

if {$props(VirtualText) ne ""} {
set ::info($props(VirtualText)) $ans
}

return $ans
}

proc ::InstallJammer::actions::ConsoleMessage {obj} {
global conf

$obj properties props
set message [::InstallJammer::GetText [$obj id] Message]

if {$props(PaginateMessage)} {
set command [list ::more -allowquit $props(AllowQuit)]

if {$props(WrapText)} {
lappend command -width $conf(ConsoleWidth)
}
} else {
set command [list puts stdout]

if {$props(WrapText)} {
set message [::InstallJammer::WrapText $message]
}
}

eval $command [list $message]
}

proc ::InstallJammer::actions::ExecuteAction {obj} {
set id [$obj id]

$obj properties props -subst 1

if {$props(Action) eq ""} {
return -code error "Error in Execute Action: Action is empty"
}

set eval   $props(EvaluateConditions)
set action [::InstallJammer::ID $props(Action)]

if {![::InstallJammer::ObjExists $action]} {
return -code error "Error in Execute Action: Action \"$action\" does not exist"
}

if {![$action is action actiongroup]} {
return -code error "Error in Execute Action: \"$action\" is not an action or action group"
}

if {[$action is action]} {
::InstallJammer::ExecuteActions $action -parent $id -conditions $eval
return
}


set when "Before Action is Executed"
if {$eval && ![$action checkConditions $when]} {
debug "Skipping action group $id - [$id title] - conditions failed"
return
}

set when "Before Next Action is Executed"
while {1} {
::InstallJammer::ExecuteActions $action -parent $id -conditions $eval
if {!$eval || [$action checkConditions $when]} { break }
}
}

proc ::InstallJammer::actions::Exit {obj} {
$obj properties props -subst 1

lappend opts -exittype [string tolower $props(ExitType)]
if {$props(ExitCode) ne ""} { lappend opts -exitcode $props(ExitCode) }

eval ::InstallAPI::Exit $opts
}

proc ::InstallJammer::actions::ModifyWidget {obj} {
global conf
global info

variable hidden

set id     [$obj id]
set parent [$obj parent]

if {![$parent ispane]} {
set parent $info(CurrentPane)
}

$obj properties props

if {![string length $props(Widget)]} { return }

set allArgs   {}
set labelArgs {}

if {$props(Text) ne ""}  {
lappend labelArgs -text $props(Text)
}

if {$props(State) ne "" && $props(State) ne "hidden"} {
lappend allArgs -state $props(State)
}

set widgets [split $props(Widget) \;]

for {set i 0} {$i < [llength $widgets]} {incr i} {
set name [string trim [lindex $widgets $i]]
set name [::InstallJammer::ID $name]
set w [join $name ""]
set widget $w

set button 0
if {[lsearch -exact $conf(ButtonWidgets) $widget] > -1} {
set button 1
set w [string tolower [string map {Button ""} $widget]]
}

if {$button} {
set w [$info(Wizard) widget get $w]
} else {
set w [$parent widget get $widget]
}

if {$w eq ""} {
return -code error "bad widget \"$name\""
}

if {$props(Text) ne ""} {
::InstallJammer::SetVirtualText all $parent $widget $props(Text)
}

set class [winfo class $w]
if {$class eq "Frame" || $class eq "TFrame"} {
foreach child [winfo children $w] {
set class [winfo class $child]
if {$class eq "Label" || $class eq "TLabel"} {
eval [list $child configure] $labelArgs
}
eval [list $child configure] $allArgs
}
} else {
if {$class eq "Text"} {
eval [list $w configure] $allArgs
if {[llength $labelArgs]} {
set state [$w cget -state]
$w configure -state normal
$w delete 1.0
$w insert end $props(Text)
$w configure -state $state
}
} else {
eval [list $w configure] $allArgs $labelArgs
}
}

if {$props(State) eq "hidden" && ![info exists hidden($w)]} {
set manager [winfo manager $w]
set options [$manager info $w]
set hidden($w) [concat $manager configure $w $options]
$manager forget $w
} elseif {$props(State) eq "normal" && [info exists hidden($w)]} {
eval $hidden($w)
unset hidden($w)
}
}

if {$props(Text) ne ""} {
::InstallJammer::UpdateWidgets -buttons 1 -updateidletasks 1
}
}

proc ::InstallJammer::actions::MoveForward {obj} {
global conf
global info

set next [$info(Wizard) step next]

if {$next eq ""} {
debug "No more panes left to move forward... exiting"
::InstallAPI::Exit
} else {
debug "Moving forward to $next"
set conf(moveToPane) "next"
}
}

proc ::InstallJammer::conditions::StringIsCondition {obj} {
$obj properties props

debug "Checking to see if $props(String) is $props(Operator)"

set string [::InstallJammer::SubstText $props(String)]

if {$props(Operator) eq "empty"} {
return [expr {[string trim $string] eq ""}]
} elseif {$props(Operator) eq "not empty"} {
return [expr {[string trim $string] ne ""}]
} else {
return [string is $props(Operator) -strict $string]
}
}

proc ::InstallJammer::actions::UninstallSelectedFiles {obj {forceUninstall 0}} {
global conf
global info

if {[string is true -strict $info(Testing)]} { return }

set id     [$obj id]
set parent [$obj parent]

set info(Errors)                ""
set info(ErrorDirs)             ""
set info(ErrorFiles)            ""
set info(FileBeingUninstalled)  ""
set info(GroupBeingUninstalled) ""
set info(Status)                ""

set conf(ShowConsoleProgress) [$obj get ShowConsoleProgress]

::InstallAPI::SetUpdateWidgets -widgets  [::InstallJammer::FindUpdateWidgets {Status FileBeingUninstalled  GroupBeingUninstalled UninstallPercentComplete}]

if {!$forceUninstall} {
set info(Status) "<%UninstallPrepareText%>"

::InstallJammer::GetUninstallInfo

upvar #0 ::uninstall array

if {[info exists conf(AddToUninstall)]} {
foreach line $conf(AddToUninstall) {
lappend array([lindex $line 0]) [lrange $line 1 end]
}
}
} else {
upvar #0 ::leftovers array
}

foreach x {:DIR :FILE :REGISTRY} {
if {![info exists array($x)]} { set array($x) {} }
}

set dirLen  [llength $array(:DIR)]
set fileLen [llength $array(:FILE)]
set regLen  [llength $array(:REGISTRY)]
set conf(total) [expr $fileLen + $dirLen + $regLen]

set checkRemove 0
if {[info exists conf(RemoveFromUninstall)]} {
set checkRemove 1
set pattern [join $conf(RemoveFromUninstall) |]
}

if {$fileLen} {
set info(GroupBeingUninstalled) "<%String.files%>"
set info(Status) "<%FileBeingUninstalledText%>"

for {set i [expr $fileLen -1]} {$i >= 0} {incr i -1} {
set list [lindex $array(:FILE) $i]
set file [lindex $list 0]
set tail [file tail $file]

if {![file exists $file]} { continue }
if {[file type $file] eq "directory"} { continue }

set info(FileBeingUninstalled) $tail
::InstallJammer::UpdateUninstallProgress

if {$checkRemove && [regexp $pattern $file]} {
if {$::verbose} {
debug "$file removed from uninstall by action."
}
continue
}

if {$::verbose} {
debug "Uninstalling file $file."
}

if {[catch {::InstallJammer::UninstallFile $file} error]} {
debug "Failed to delete $file."
lappend ::leftovers(:FILE) $list
append info(Errors) "$error\n"
lappend info(ErrorFiles) $file
}
}
}

if {$info(Errors) eq ""} {
set conf(UninstallRemoved) 1
set tmpuninstall [::InstallJammer::TmpDir uninstall$info(Ext)]
catch {file rename -force $conf(uninstall) $tmpuninstall}
set conf(UninstallRenamed) [expr {![file exists $conf(uninstall)]}]
if {$conf(UninstallRenamed)} { set conf(uninstall) $tmpuninstall }
}

if {$dirLen} {
set notEmptyDirs ""
set info(GroupBeingUninstalled) "<%String.directories%>"
::InstallJammer::UpdateWidgets -update 1

set p $::tcl_platform(platform)
set installdir [::InstallJammer::Normalize $info(InstallDir)]
foreach list [lsort -index 0 -decreasing $array(:DIR)] {
lassign $list dir force

if {![file exists $dir]} { continue }
if {[file type $dir] ne "directory"} { continue }

if {$checkRemove && [regexp $pattern $dir]} {
if {$::verbose} {
debug "$dir removed from uninstall by action."
}
continue
}

set forceDelete $forceUninstall
if {$force ne ""} { set forceDelete 1 }
if {$forceDelete} { set force -force }

set info(FileBeingUninstalled) [file tail $dir]
::InstallJammer::UpdateUninstallProgress

if {!$forceDelete && ![::InstallJammer::DirIsEmpty $dir]} {
if {[lindex [file split $dir] end] eq $info(Company)} {
set conf(cleanupCompanyDir) $dir
} else {
lappend ::leftovers(:DIR) $list
lappend info(ErrorDirs) [file normalize $dir]
lappend notEmptyDirs [file normalize $dir]
}

debug "Skipping non-empty directory $dir."

continue
}

if {$::verbose} {
if {$forceDelete} {
debug "Forcefully deleting directory $dir."
} else {
debug "Deleting directory $dir."
}
}

if {[catch {::InstallJammer::UninstallDirectory $dir $force} err]} {
debug "Failed to delete directory $dir."
append info(Errors) "$err\n"
lappend info(ErrorDirs) [file normalize $dir]
}
}

set uninstallDir [file normalize [file dirname $conf(uninstall)]]
foreach dir $notEmptyDirs {
if {!$conf(UninstallRenamed) && $dir eq $uninstallDir} {
set files [glob -nocomplain -dir $dir *]
eval lappend files [glob -nocomplain -dir $dir -type hidden *]
if {[llength $files] == 1} { continue }
}
set info(Dir) [::InstallJammer::Normalize $dir $p]
append info(Errors) [sub "<%DirectoryNotEmptyText%>"]
}
}

if {[info exists array(:ENV)]} {
set info(GroupBeingUninstalled) "<%String.environment.variables%>"
::InstallJammer::UpdateWidgets -update 1

if {$conf(windows)} {
foreach list [lreverse $array(:ENV)] {
set conf(UpdateWindowsRegistry) 1

lassign $list var level
set key "<%REG_[string toupper $level]_ENV%>"
set key [::InstallJammer::SubstText $key]

if {[llength $list] == 3} {
set value [lindex $list 2]
debug "Restoring environment variable $var to $value"
catch { registry set $key $var $value expand_sz }
} else {
debug "Deleting environment variable $var."
catch { registry delete $key $var }
}
}
} else {
set ids $conf(UninstallIDs)

foreach list $array(:ENV) {
lappend vars   [lindex $list 0]
lappend levels [lindex $list 1]
}

set    pat {; # ADDED BY INSTALLER - DO NOT EDIT OR DELETE}
append pat { THIS COMMENT - ([A-Z0-9-]+) ([A-Z0-9-]+)}

foreach level [lsort -unique $levels] {
set files $conf([string toupper $level 0]RCFiles)

foreach file $files {
if {![file exists $file]} { continue }
if {[catch { read_file $file } contents]} { continue }

if {[string match "*csh*" $file]} {
set varpat {^setenv ([^ ]+)}
} else {
set varpat {^(.*)=}
}

set lines {}
foreach line [split $contents \n] {
if {[regexp $pat $line -> appid instid]
&& [lsearch -exact $ids $instid] > -1
&& [regexp $varpat $line -> var]
&& [lsearch -exact $vars $var] > -1} { continue }

if {[lindex $lines end] eq ""} {
set lines [lreplace $lines end end]
}
lappend lines $line
}

if {![catch { open $file w } fp]} {
puts  $fp [join $lines \n]
close $fp
}
}
}
}
}

if {[info exists array(:PATH)]} {
set info(GroupBeingUninstalled) "<%String.environment.variables%>"
::InstallJammer::UpdateWidgets -update 1

foreach list [lreverse $array(:PATH)] {
set conf(UpdateWindowsRegistry) 1

lassign $list var dirs level sep
if {$sep eq ""} { set sep \; }

set key   "<%REG_[string toupper $level]_ENV%>"
set key   [::InstallJammer::SubstText $key]
set path  [::installkit::Windows::GetKey $key $var]
set list  [split $path $sep]
set lower [split [string tolower $path] $sep]

set indexes {}
foreach dir [split $dirs $sep] {
set dir [::InstallJammer::Normalize $dir windows]
set chk [string tolower $dir]

eval lappend indexes [lsearch -exact -all $lower $chk]
}

if {[llength $indexes]} {
foreach x [lsort -integer -decreasing $indexes] {
set list [lreplace $list $x $x]
}

set path [join $list $sep]

registry set $key $var $path expand_sz
}
}
}

if {$conf(windows)} {
if {$regLen} {
set info(GroupBeingUninstalled) "<%String.registry.entries%>"
::InstallJammer::UpdateWidgets -update 1

set command ::InstallJammer::UninstallRegistryKey
for {set i [expr $regLen -1]} {$i >= 0} {incr i -1} {
set list [lindex $array(:REGISTRY) $i]
lassign $list key value
::InstallJammer::UpdateUninstallProgress

if {[catch {eval $command $list} error]} {
lappend ::leftovers(:REGISTRY) $list
append info(Errors) "Could not remove $list: $error\n"
}
}
}
} elseif {[info exists array(:XDGRESOURCE)]} {
set info(GroupBeingUninstalled) "<%String.shortcuts%>"
::InstallJammer::UpdateWidgets -update 1

foreach list [lreverse $array(:XDGRESOURCE)] {
set which [lindex $list 0]
set files [lindex $list 1]
set mode  [lindex $list 2]
if {$mode eq ""} { set mode "user" }
if {$which eq "desktop"} {
catch { eval exec xdg-desktop-icon uninstall --novendor $files }
} elseif {$which eq "menu"} {
set dirfiles  [list]
set deskfiles [list]
foreach file $files {
if {[string match "*.directory" $file]} {
lappend dirfiles $file
} else {
lappend deskfiles $file
}
}

lappend menuUninstall($mode,$dirfiles) $deskfiles
}
}

foreach {dirfiles deskfiles} [array get menuUninstall] {
set list     [split $dirfiles ,]
set mode     [lindex $list 0]
set dirfiles [join [lrange $list 1 end] ,]
set files    [concat $dirfiles $deskfiles]
catch { eval exec xdg-desktop-menu uninstall  --novendor --mode $mode $files } res
}
}

set script [::InstallJammer::TmpDir install-cleanup]

set fp [open $script w 0755]
puts $fp "#!/bin/sh\n"

if {[info exists array(:RPM)]} {
foreach list [lreverse $array(:RPM)] {
set db RPM
set package [lindex $list 0]
if {![file exists /tmp/.installjammer.rpm.$package]} {
puts $fp "rpm -e $package"
}
}
}

if {[info exists array(:DPKG)]} {
foreach list [lreverse $array(:DPKG)] {
set db DPKG
set package [lindex $list 0]
puts $fp "dpkg -P $package"
}
}

close $fp

if {[info exists db]} {
set info(FileBeingUninstalled)  "$db <%String.database.entries%>"
set info(GroupBeingUninstalled) "<%String.package.entries%>"
::InstallJammer::UpdateWidgets -update 1

if {!$info(UserIsRoot)} {
::InstallJammer::ExecAsRoot [list $script] -wait 1
} else {
catch { exec $script } error
}
}

set conf(RestartGnomePanel) 1

::InstallJammer::CleanupInstallInfoDirs

set info(ErrorsOccurred) [expr {[string length $info(Errors)] > 0}]

::InstallAPI::SetUpdateWidgets -widgets {}

return 1
}


proc CreateWindow.UninstallDetails {wizard id} {
CreateWindow.CustomTextPane1 $wizard $id
}

proc CreateWindow.UninstallComplete {wizard id} {
CreateWindow.CustomBlankPane1 $wizard $id
}

proc CreateWindow.Uninstall {wizard id} {
CreateWindow.CustomBlankPane2 $wizard $id

set base [$id widget get ClientArea]

grid rowconfigure    $base 0 -weight 1
grid columnconfigure $base 0 -weight 1

set frame [frame $base.frame]
grid $frame -row 0 -column 0 -sticky new

grid rowconfigure    $frame 1 -weight 1
grid columnconfigure $frame 0 -weight 1

label $frame.file -anchor w
grid  $frame.file -row 0 -column 0 -sticky new
$id widget set FileValue -widget $frame.file

ttk::progressbar $frame.progress
grid $frame.progress -row 1 -column 0 -sticky ew
$id widget set ProgressValue -widget $frame.progress -type progress
}

proc CreateWindow.CustomTextPane1 {wizard id} {
CreateWindow.CustomBlankPane2 $wizard $id

set base [$id widget get ClientArea]

grid rowconfigure    $base 0 -weight 1
grid columnconfigure $base 0 -weight 1

frame $base.frame
grid  $base.frame -row 0 -column 0 -sticky news

grid rowconfigure    $base.frame 0 -weight 1
grid columnconfigure $base.frame 0 -weight 1

if {![$id get TextFont font]} { set font TkTextFont }

Text $base.frame.text  -state readonly -bg #FFFFFF -font $font -wrap word -highlightthickness 0  -yscrollcommand "$base.frame.vs set"  -xscrollcommand "$base.frame.hs set"
grid $base.frame.text -row 0 -column 0 -sticky news
$id widget set Text -widget $base.frame.text

ttk::scrollbar $base.frame.vs -command "$base.frame.text yview"
grid $base.frame.vs -row 0 -column 1 -sticky ns

ttk::scrollbar $base.frame.hs -command "$base.frame.text xview"  -orient horizontal
grid $base.frame.hs -row 1 -column 0 -sticky ew
}

proc CreateWindow.CustomBlankPane2 {wizard id} {
set base  [$wizard widget get $id]
set frame $base.titleframe

grid rowconfigure    $base 3 -weight 1
grid columnconfigure $base 0 -weight 1

frame $frame -bd 0 -relief flat -background #FFFFFF
grid  $frame -row 0 -column 0 -sticky nsew

grid rowconfigure    $frame 1 -weight 1
grid columnconfigure $frame 0 -weight 1

Label $frame.title -background #FFFFFF -anchor nw -justify left  -autowrap 1 -font TkCaptionFont  -textvariable [$wizard variable $id -text1]
grid $frame.title -row 0 -column 0 -sticky new -padx 5 -pady 5
$id widget set Title -widget $frame.title

Label $frame.subtitle -background #FFFFFF -anchor nw -autowrap 1  -justify left -textvariable [$wizard variable $id -text2]
grid $frame.subtitle -row 1 -column 0 -sticky new -padx [list 20 5]
$id widget set Subtitle -widget $frame.subtitle

label $frame.icon -borderwidth 0 -background #FFFFFF -anchor c
grid  $frame.icon -row 0 -column 1 -rowspan 2
$id widget set Icon -widget $frame.icon -type image

Separator $base.separator -relief groove -orient horizontal
grid $base.separator -row 1 -column 0 -sticky ew

Label $base.caption -anchor nw -justify left -autowrap 1  -textvariable [$wizard variable $id -text3]
grid $base.caption -row 2 -sticky nsew -padx 8 -pady [list 8 4]
$id widget set Caption -widget $base.caption

frame $base.clientarea
grid  $base.clientarea -row 3 -sticky nsew -padx 8 -pady 4
$id widget set ClientArea -widget $base.clientarea -type frame

Label $base.message -anchor nw -justify left -autowrap 1  -textvariable [$wizard variable $id -text4]
grid $base.message -row 4 -sticky nsew -padx 8 -pady [list 4 8]
$id widget set Message -widget $base.message
}

proc CreateWindow.CustomBlankPane1 {wizard id} {
set base [$wizard widget get $id]

grid rowconfigure    $base 1 -weight 1
grid columnconfigure $base 1 -weight 1

label $base.image -borderwidth 0 -background #FFFFFF
grid  $base.image -row 0 -column 0 -rowspan 2 -sticky nw
$id widget set Image -type image -widget $base.image

Label $base.title -height 3 -bg #FFFFFF -font TkCaptionFont  -autowrap 1 -anchor nw -justify left
grid $base.title -row 0 -column 1 -sticky ew -padx 20 -pady [list 20 10]
$id widget set Caption -type text -widget $base.title

Label $base.message -bg #FFFFFF -autowrap 1 -anchor nw -justify left
grid  $base.message -row 1 -column 1 -sticky news -padx 20
$id widget set Message -type text -widget $base.message

Separator $base.sep -orient horizontal
grid $base.sep -row 2 -column 0 -columnspan 2 -sticky ew
}


proc ThemeInit {} {
global info

Wizard $info(Wizard)  -raisecommand  [list RaiseStep %W %S]  -width [::InstallJammer::SubstText "<%WizardWidth%>"]  -height [::InstallJammer::SubstText "<%WizardHeight%>"]  -title [::InstallJammer::SubstText "<%UninstallTitleText%>"]  -separatortext [::InstallJammer::SubstText "<%SeparatorText%>"]

bind $info(Wizard) <<WizardFinish>> [list ::InstallJammer::exit 1]

if {$::tcl_platform(platform) eq "unix"} {
$info(Wizard) configure -bg [style configure . -background]
}
}


if {[info exists ::InstallJammer]} { return }

proc ::InstallJammer::UpdateUninstallProgress {} {
global conf
global info

incr0 conf(num)
set pct [expr ($conf(num) * 100) / $conf(total)]
if {$pct != $conf(lastPercent)} {
set info(UninstallPercentComplete) $pct

if {$info(GuiMode)} {
::InstallJammer::UpdateSelectedWidgets
update
} elseif {$info(ConsoleMode) && $conf(ShowConsoleProgress)} {
::InstallJammer::ConsoleProgressBar $pct
}
set conf(lastPercent) $pct
}
}

proc ::InstallJammer::GetUninstallInfo {} {
global conf
global info
global uninstall

set dir   $::installkit::root
set files [glob -nocomplain -dir $dir *.info]
set conf(LogsInUninstaller) 1

if {![llength $files]} {
set conf(LogsInUninstaller) 0
set dir   [::InstallJammer::GetInstallInfoDir]
set files [glob -nocomplain -dir $dir *.info]
}

set installdir  $info(InstallDir)
set uninstaller $info(Uninstaller)

set conf(uninstall) $uninstaller

set sort [list]
foreach file $files {
if {[file exists [file root $file].dead]} { continue }

set id [file root [file tail $file]]
::InstallJammer::ReadPropertyFile $file tmp

if {![info exists tmp(Uninstaller)]} {
lappend sort [list $tmp(Date) $id]
continue
}

if {[patheq $installdir $tmp(Dir)]
|| [patheq $uninstaller $tmp(Uninstaller)]} {
lappend sort [list $tmp(Date) $id]
}
}

set data ""
foreach list [lsort -integer -index 0 $sort] {
set id [lindex $list 1]

lappend conf(UninstallIDs) $id

set file [file join $dir $id.log]
if {[file exists $file]} {
append data [read_textfile $file]
}
}

set uninstall(:DIR)      {}
set uninstall(:FILE)     {}
set uninstall(:REGISTRY) {}
foreach line [split [string trim $data] \n] {
if {[info exists done($line)]} { continue }
set done($line) 1
lappend uninstall([lindex $line 0]) [lrange $line 1 end]
}
}

proc ::InstallJammer::CleanupInstallInfoDirs {} {
global info
global conf

if {[string is true -strict $info(Testing)]} { return }

if {![info exists conf(UninstallIDs)]} { return }
if {[file exists $info(Uninstaller)]
&& ![file writable $info(Uninstaller)]} { return }
if {[file exists $info(InstallInfoDir)]
&& ![file writable $info(InstallInfoDir)]} { return }

debug "Cleaning up install registry..."

set info(Status) "Cleaning up install registry..."
::InstallJammer::UpdateWidgets -update 1

if {!$conf(UninstallRemoved)} {

debug "Uninstaller was not removed."

if {$conf(LogsInUninstaller)} {
debug "Found logs in uninstaller.  Moving them  to new uninstaller."

foreach id $conf(UninstallIDs) {
set file [file join $::installkit::root $id.info]

if {![info exists found]} {
set found $id
file copy -force $file [::InstallJammer::TmpDir]
} else {
close [open [::InstallJammer::TmpDir $id.dead] w]
}
}

set id $found
} else {
debug "Storing install IDs in uninstaller."

foreach id $conf(UninstallIDs) {
set file [file join $info(InstallInfoDir) $id.info]
if {[file exists $file]} {
file copy -force $file [::InstallJammer::TmpDir]
break
}
}
}

set log [::InstallJammer::TmpDir $id.log]
set fp [open_text $log w -translation lf -encoding utf-8]

foreach var [array names ::leftovers] {
foreach list [lreverse $::leftovers($var)] {
puts $fp [concat $var $list]
}
}

close $fp

if {!$conf(windows)} { ::InstallJammer::StoreLogsInUninstall }
}

foreach id $conf(UninstallIDs) {
foreach ext {.log .ver .info} {
set file [file join $info(InstallInfoDir) $id$ext]
if {[file exists $file]} {
debug "Deleting $file"
file delete $file
}
}
}

if {[::InstallJammer::DirIsEmpty $info(InstallInfoDir)]} {
debug "Deleting empty registry directory $info(InstallInfoDir)."
catch { file delete -force $info(InstallInfoDir) }
} else {
debug "Will not delete non-empty directory $info(InstallInfoDir)."
}
}

proc ::InstallJammer::InstallLog {args} {
}

proc ::InstallJammer::CleanupTmpDir {} {
global conf
global info

set tmpdir [::InstallJammer::TmpDir]
if {$conf(windows)} {

set tmp [::InstallJammer::TmpDir ij[pid]cleanup.tcl]
set fp [open $tmp w]
puts $fp "catch {wm withdraw .}"
puts $fp "set temp [list [::InstallJammer::TmpDir]]"

if {[info exists conf(uninstall)]} {
puts $fp "set uninstall [list $conf(uninstall)]"
}

if {[info exists conf(uninstall)] && !$conf(UninstallRemoved)} {
puts $fp {
set pattern {*[.info|.log|.dead]}
foreach file [glob -nocomplain -type f -dir $temp $pattern] {
lappend files $file
lappend names [file tail $file]
}
set i 0
while {[incr i] < 600 && [file exists $uninstall] &&
[catch {installkit::addfiles $uninstall $files $names}]} {
after 100
}
}
}

puts $fp {
set i 0
while {[file exists $temp] && [incr i] < 600} {
catch {file delete -force -- $temp}
after 100
}
}

if {$conf(UninstallRemoved) && !$conf(UninstallRenamed)} {

puts $fp {
set i 0
while {[file exists $uninstall] && [incr i] < 300} {
catch {file delete -force -- $uninstall}
after 100
}
}

set dir [file normalize [file dirname $conf(uninstall)]]
if {[lsearch -exact $info(ErrorDirs) $dir] > -1} {

set dirs [list $dir]

if {[info exists conf(cleanupCompanyDir)]} {
lappend dirs $conf(cleanupCompanyDir)
}
puts $fp "set dirs [list $dirs]"
puts $fp {
set i 0
while {[incr i] < 300} {
set done 0
foreach dir $dirs {
if {![file exists $dir]} {
incr done
continue
}

set files [glob -nocomplain -dir $dir *]
eval lappend files  [glob -nocomplain -dir $dir -type hidden *]
if {![llength $files]} { catch {file delete $dir} }
}

if {$done == [llength $dirs]} { break }
after 100
}
}
}
}
puts $fp "exit"
close $fp

set installkit [::InstallJammer::GetCommonInstallkit $conf(uninstall)]
installkit::Windows::shellExecute -windowstate hidden default  $installkit "\"$tmp\""
} else {
set tmp [file join $info(TempRoot) install[pid]cleanup.sh]
set fp [open $tmp w]
puts $fp "sleep 3"
puts $fp "rm -rf $tmpdir $tmp"
close $fp

exec [auto_execok sh] $tmp &
}
}

proc ::InstallJammer::exit { {prompt 0} } {
global conf
global info

if {$info(WizardStarted) && !$info(WizardCancelled)} {
::InstallJammer::ExecuteActions "Finish Actions"
} else {
::InstallJammer::ExecuteActions "Cancel Actions"
}

::InstallJammer::CommonExit 0
if {!$info(Debugging)} { ::InstallJammer::CleanupTmpDir }

if {[string is integer -strict $conf(ExitCode)]} { ::exit $conf(ExitCode) }
::exit 0
}

proc ::InstallJammer::UninstallMain {} {
global conf
global info

if {$conf(unix)} {
if {$info(RequireRoot) && !$info(UserIsRoot)} {
if {$info(GuiMode) && $info(PromptForRoot)} {
set msg [sub "<%PromptForAdministratorText%>"]
set cmd [concat [list [info nameofexecutable]] $::argv]
::InstallJammer::ExecAsRoot $cmd -message $msg
::exit 0
}

set title   [sub "<%RequireRootTitleText%>"]
set message [sub "<%RequireRootUninstallText%>"]
::InstallJammer::Message -title $title -message $message
::exit 1
}
}

if {$info(SilentMode)} {
after 1000
::InstallJammer::ExecuteActions "Startup Actions"
::InstallJammer::ExecuteActions Silent
} elseif {$info(ConsoleMode)} {
::InstallJammer::ExecuteActions "Startup Actions"
::InstallJammer::ExecuteActions Console
} else {
::InstallJammer::ExecuteActions "Startup Actions"

set info(WizardStarted) 1
::InstallJammer::CenterWindow $info(Wizard)
::InstallJammer::Wizard next
}
}

proc ::InstallJammer::InitUninstall {} {
global conf
global info
global argv

catch { wm withdraw . }

SourceCachedFile common.tcl

::InstallJammer::LoadTwapi

unset -nocomplain info(Temp)
unset -nocomplain info(TempRoot)

cd [::InstallJammer::TmpDir]

set info(RunningInstaller)   0
set info(RunningUninstaller) 1

::InstallJammer::CommonInit

::InstallJammer::ReadMessageCatalog messages

set conf(mode)  "UninstallMode"
set conf(stop)  [::InstallJammer::TmpDir .stop]
set conf(pause) [::InstallJammer::TmpDir .pause]
set conf(lastPercent) 0
set conf(uninstall) [info nameofexecutable]
set conf(UninstallRemoved) 0
set conf(UninstallRenamed) 0

set conf(modes) "Standard Silent"
if {!$conf(windows)} { lappend conf(modes) "Console" }

array set info {
ErrorDirs                 ""
ErrorFiles                ""
ErrorsOccurred            0
RunningUninstaller        1
FileBeingUninstalled      ""
GroupBeingUninstalled     ""
UninstallPercentComplete  0
}

set info(Status) "Preparing to uninstall..."

SafeArraySet info {
FileBeingUninstalledText  "Removing <%FileBeingUninstalled%>"
GroupBeingUninstalledText "Removing <%GroupBeingUninstalled%>"
}

::InstallJammer::ParseCommandLineArguments $::argv

if {$info(GuiMode)} {
SourceCachedFile gui.tcl
InitGui
}

::InstallJammer::CommonPostInit

::InstallJammer::ConfigureBidiFonts
}

::InstallJammer::InitUninstall




proc RaiseStep { wizard id } {
set widget [$id widget get Caption]
if {$widget ne ""} {
if {![string length [::InstallJammer::GetText $id Caption]]} {
grid remove $widget
} else {
grid $widget
}
}

set widget [$id widget get Message]
if {$widget ne ""} {
if {![string length [::InstallJammer::GetText $id Message]]} {
grid remove $widget
} else {
grid $widget
}
}

set widget [$id widget get ClientArea]
if {$widget ne ""} {
grid configure $wizard.buttons -pady {18 5}
} else {
grid configure $wizard.buttons -pady 5
}
}

InstallType ::Common
InstallType ::Standard
InstallComponent 3F8FDE11-35CC-4405-B6A1-96EA4D066593 -setup Uninstall -type pane -title Uninstall -component Uninstall -active Yes -parent Standard
InstallComponent AEF1ECDB-7AFD-4833-A486-0FB883F70E00 -setup Uninstall -type action -title {Modify Widget} -component ModifyWidget -active Yes -parent 3F8FDE11-35CC-4405-B6A1-96EA4D066593
InstallComponent A2C544A0-53CA-424E-9EA5-BF513DFF27D3 -setup Uninstall -type action -title {Execute Action} -component ExecuteAction -active Yes -parent 3F8FDE11-35CC-4405-B6A1-96EA4D066593
InstallComponent 4D4F3B02-34C1-4DA3-A2BF-6DFBEAC1EEC2 -setup Uninstall -type action -title {Move Forward} -component MoveForward -active Yes -parent 3F8FDE11-35CC-4405-B6A1-96EA4D066593
InstallComponent 94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC -setup Uninstall -type pane -conditions 317238D5-A761-4160-93C6-3DD6B7FF184B -title {Uninstall Details} -component UninstallDetails -active Yes -parent Standard
Condition 317238D5-A761-4160-93C6-3DD6B7FF184B -active Yes -parent 94FB8EA4-7411-4C48-B9F1-0A6CE398A9CC -title {String Is Condition} -component StringIsCondition -TreeObject::id 317238D5-A761-4160-93C6-3DD6B7FF184B
InstallComponent 69594F85-CA9E-4929-A720-4F1EF022934A -setup Uninstall -type pane -title {Uninstall Complete} -component UninstallComplete -active Yes -parent Standard
InstallType ::Default
InstallType ::Console
InstallComponent 55CC82CB-FC93-4AA5-9AED-81D4A8E48DE9 -setup Uninstall -type action -title {Console Ask Yes Or No} -component ConsoleAskYesOrNo -active Yes -parent Console
InstallComponent A20FFB87-1F66-4F1D-A53D-D718FBE4DCEF -setup Uninstall -type action -conditions 4CA9DD1A-2552-4741-86F5-8AF80B4AB844 -title Exit -component Exit -active Yes -parent Console
Condition 4CA9DD1A-2552-4741-86F5-8AF80B4AB844 -active Yes -parent A20FFB87-1F66-4F1D-A53D-D718FBE4DCEF -title {String Is Condition} -component StringIsCondition -TreeObject::id 4CA9DD1A-2552-4741-86F5-8AF80B4AB844
InstallComponent 5D3A1856-08AF-4BC2-A601-1F1B166FB226 -setup Uninstall -type action -title {Console Message} -component ConsoleMessage -active Yes -parent Console
InstallComponent C5B03E9D-A78B-44EB-951C-99FFB3561A98 -setup Uninstall -type action -title {Execute Action} -component ExecuteAction -active Yes -parent Console
InstallComponent BA68BA0A-BAA3-45B6-9822-D092DE188477 -setup Uninstall -type action -title {Console Message} -component ConsoleMessage -active Yes -parent Console
InstallComponent E24E9448-4CBB-4029-BD3C-20F31EEA660C -setup Uninstall -type action -title Exit -component Exit -active Yes -parent Console
InstallType ::Silent
InstallComponent 5EF3691E-8C78-4DCD-AFB8-48B4B96B8E78 -setup Uninstall -type action -title {Uninstall Everything} -component ExecuteAction -active Yes -parent Silent
InstallComponent EB547982-C728-4D55-86C7-184D975CE364 -setup Uninstall -type action -title Exit -component Exit -active Yes -parent Silent
InstallType ::ActionGroups
InstallComponent 382A3958-9C4A-4C51-B288-CED159A82636 -setup Uninstall -type actiongroup -title {Setup Actions} -alias {Setup Actions} -active Yes -parent ActionGroups
InstallComponent FE203760-F942-41E1-B15B-0DC70872AA50 -setup Uninstall -type actiongroup -title {Startup Actions} -alias {Startup Actions} -active Yes -parent ActionGroups
InstallComponent 68379AAE-1F16-478C-AA38-08911974CF43 -setup Uninstall -type action -conditions {079D94E6-87BC-4D19-9722-BC9B2DCF7CCB 82B54257-2C32-4996-837F-3CE05C8A30A3} -title Exit -component Exit -active Yes -parent FE203760-F942-41E1-B15B-0DC70872AA50
Condition 079D94E6-87BC-4D19-9722-BC9B2DCF7CCB -active Yes -parent 68379AAE-1F16-478C-AA38-08911974CF43 -title {String Is Condition} -component StringIsCondition -TreeObject::id 079D94E6-87BC-4D19-9722-BC9B2DCF7CCB
Condition 82B54257-2C32-4996-837F-3CE05C8A30A3 -active Yes -parent 68379AAE-1F16-478C-AA38-08911974CF43 -title {Ask Yes or No} -component AskYesOrNo -TreeObject::id 82B54257-2C32-4996-837F-3CE05C8A30A3
InstallComponent D5BD6B16-D9AB-4E54-8086-A91F1D149E35 -setup Uninstall -type actiongroup -title {Uninstall Actions} -alias {Uninstall Actions} -active Yes -parent ActionGroups
InstallComponent 6F441F0D-22BB-4735-8334-BB5D2DA1E6AB -setup Uninstall -type action -title {Uninstall Selected Files} -component UninstallSelectedFiles -active Yes -parent D5BD6B16-D9AB-4E54-8086-A91F1D149E35
InstallComponent E8BE962F-684B-467E-BC47-BB4F2580CB0A -setup Uninstall -type actiongroup -title {Finish Actions} -alias {Finish Actions} -active Yes -parent ActionGroups
InstallComponent 22B5D21C-1D8C-49B8-8764-FE24A53F7FA8 -setup Uninstall -type actiongroup -title {Cancel Actions} -alias {Cancel Actions} -active Yes -parent ActionGroups


proc ::ThemeMain {} {
::InstallJammer::UninstallMain
}

if {![info exists ::InstallJammer]} { ThemeMain }
} components.tcl {namespace eval ::InstallJammer::actions {}
namespace eval ::InstallJammer::conditions {}
proc ::InstallJammer::actions::AddWindowsFileCommand {obj} {
global conf

if {!$conf(windows)} { return }

$obj properties props -subst 1

set key [::installkit::Windows::FileType command  $props(FileType) $props(CommandName) $props(Command)]
::InstallJammer::LogRegistry $key

if {$props(MenuName) ne ""} {
set key [::installkit::Windows::FileType menu  $props(FileType) $props(CommandName) $props(MenuName)]
::InstallJammer::LogRegistry $key
}
}

proc ::InstallJammer::actions::AddWindowsFileExtension {obj} {
global conf

if {!$conf(windows)} { return }

$obj properties props -subst 1

::installkit::Windows::FileExtension set  $props(FileExtension) $props(FileType)

::InstallJammer::LogRegistry "HKEY_CLASSES_ROOT\\$props(FileExtension)"
}

proc ::InstallJammer::actions::AddWindowsFileType {obj} {
global conf

if {!$conf(windows)} { return }

$obj properties props -subst 1

::installkit::Windows::FileType set $props(FileType) $props(Title)

if {$props(IconPath) ne ""} {
::installkit::Windows::FileType icon $props(FileType)  $props(IconPath),$props(IconPathIndex)
}

switch -- $props(ShowFileExtensions) {
"Always show file extension" {
::installkit::Windows::FileType showextension  $props(FileType) always 1
}

"Never show file extension" {
::installkit::Windows::FileType showextension  $props(FileType) never 1
}
}

::InstallJammer::LogRegistry "HKEY_CLASSES_ROOT\\$props(FileType)"
}

proc ::InstallJammer::actions::AddWindowsRegistryKey {obj} {
global conf

if {!$conf(windows)} { return }

$obj properties props -subst 1

set key $props(Key)
if {![string match "HKEY*" $key]} { set key $props(RootKey)\\$key }

set name $props(Name)

switch -- $props(DataType) {
"None"		    { set type none }
"Binary Data"	    { set type binary }
"String"    	    { set type sz }
"Expand String"	    { set type expand_sz }
"String Array"	    { set type multi_sz }
"Number"	    { set type dword }
"Big Endian Number" { set type dword_big_endian }
"Symbolic Link"     { set type link }
"Resource List"     { set type resource_list }
default		    { set type none }
}

set conf(UpdateWindowsRegistry) 1

if {$props(RestoreOnUninstall) && ![catch { registry get $key }]} {
if {[catch { registry get $key $name } oldval]} {
::InstallJammer::LogRegistry $key $name
} else {
::InstallJammer::LogRegistry $key $name $oldval
}
} elseif {$props(AddToUninstall)} {
::InstallJammer::LogRegistry $key $name
}

registry set $key $name $props(Value) $type
}

proc ::InstallJammer::actions::AddWindowsUninstallEntry {obj} {
global conf

if {!$conf(windows)} { return }

set properties {
UninstallString
QuietUninstallString
DisplayName
DisplayIcon
DisplayVersion
Comments
Contact
HelpLink
HelpTelephone
InstallDate
InstallLocation
InstallSource
Publisher
Readme
URLInfoAbout
URLUpdateInfo
}

eval $obj properties props -subst 1 [lsort $properties]

set appkey [::InstallJammer::SubstText [$obj get RegistryKeyName]]
set key {HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion}
append key "\\Uninstall\\$appkey"

if {[catch { registry set $key NoModify 1 dword } error]} {
set key {HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion}
append key "\\Uninstall\\$appkey"

registry set $key NoModify 1 dword
}

registry set $key NoRepair 1 dword

foreach var [array names props] {
registry set $key $var $props($var)
}

::InstallJammer::LogRegistry $key
}

proc ::InstallJammer::conditions::AskYesOrNo {obj} {
global info

$obj properties props

if {$info(SilentMode)} {
debug "Ask Yes or No condition not valid in Silent mode."
debug "Skipping condition and returning $props(TrueValue)."
return $props(TrueValue)
}

set id [$obj id]

if {$info(ConsoleMode)} {
debug "Using Console Ask Yes or No action in place of Ask Yes or No condition for console install."

$obj set Default     $props(DefaultButton)
$obj set Prompt      [::InstallJammer::GetText $id Message -subst 0]
$obj set VirtualText $props(ResultVirtualText)

set result [::InstallJammer::actions::ConsoleAskYesOrNo $obj]
return [string equal -nocase $result $props(TrueValue)]
}

set title   [::InstallJammer::GetText $id Title]
set message [::InstallJammer::GetText $id Message]

set args [list -type yesno -title $title -message $message]
lappend args -icon $props(Icon)
lappend args -default [string tolower $props(DefaultButton)]
lappend args -parent [::InstallJammer::TransientParent]

set result [eval ::InstallJammer::MessageBox $args]

if {[string length $props(ResultVirtualText)]} {
global info
set info($props(ResultVirtualText)) $result
}

return [string equal -nocase $result $props(TrueValue)]
}

proc ::InstallJammer::actions::ConsoleAskYesOrNo {obj} {
$obj properties props -subst 1

set prompt \n$props(Prompt)

if {$props(Default) eq "" || $props(Default) eq "None"} {
append prompt { [y/n]}
} elseif {$props(Default) eq "Yes"} {
append prompt { [n/Y]}
} else {
append prompt { [y/N]}
}

append prompt " "

while {1} {
puts -nonewline stdout [::InstallJammer::WrapText $prompt]
flush stdout

set ans [string trim [string tolower [gets stdin]]]

puts  stdout ""
flush stdout

if {$ans eq "" && $props(Default) ne "None"} {
set ans $props(Default)
break
}

if {$ans eq "n"} { set ans "no" }
if {$ans eq "y"} { set ans "yes" }

if {$ans eq "yes" || $ans eq "no"} { break }
}

if {$props(VirtualText) ne ""} {
set ::info($props(VirtualText)) $ans
}

return $ans
}

proc ::InstallJammer::actions::ConsoleGetUserInput {obj} {
$obj properties props -subst 1

fconfigure stdin -buffering line

set prompt \n$props(Prompt)

set virtual "<%$props(VirtualText)%>"
set default [::InstallJammer::SubstText $virtual]
if {$default ne $virtual} { append prompt " \[$default\]" }

append prompt " "

while {1} {
puts -nonewline stdout [::InstallJammer::WrapText $prompt]
flush stdout

if {!$props(EchoInput)} {
catch { exec stty -echo }
}

gets stdin result

if {!$props(EchoInput)} {
catch { exec stty echo }
}

puts  stdout ""
flush stdout

if {$props(RequireResponse) && [string trim $result] eq ""} { continue }
break
}

if {$props(TrimResult)} { set result [string trim $result] }

if {$default ne $virtual && $result eq ""} {
set result $default
}

if {$result ne ""} {
set ::info($props(VirtualText)) $result
}
}

proc ::InstallJammer::actions::ConsoleMessage {obj} {
global conf

$obj properties props
set message [::InstallJammer::GetText [$obj id] Message]

if {$props(PaginateMessage)} {
set command [list ::more -allowquit $props(AllowQuit)]

if {$props(WrapText)} {
lappend command -width $conf(ConsoleWidth)
}
} else {
set command [list puts stdout]

if {$props(WrapText)} {
set message [::InstallJammer::WrapText $message]
}
}

eval $command [list $message]
}

proc ::InstallJammer::actions::CreateInstallPanes {obj} {
global conf
global info

set parent      [$obj parent]
set progressbar [$parent widget get ProgressBar]
if {![string length $progressbar]} { set progressbar noop }

set children [$info($conf(mode)) children recursive]
set total    [llength $children]
foreach id $children {
$progressbar configure -value [expr {[incr0 i] * 100 / $total}]
update
if {[$id ispane]} {
$info(Wizard) createstep $id
}
}
}

proc ::InstallJammer::actions::ExecuteAction {obj} {
set id [$obj id]

$obj properties props -subst 1

if {$props(Action) eq ""} {
return -code error "Error in Execute Action: Action is empty"
}

set eval   $props(EvaluateConditions)
set action [::InstallJammer::ID $props(Action)]

if {![::InstallJammer::ObjExists $action]} {
return -code error "Error in Execute Action: Action \"$action\" does not exist"
}

if {![$action is action actiongroup]} {
return -code error "Error in Execute Action: \"$action\" is not an action or action group"
}

if {[$action is action]} {
::InstallJammer::ExecuteActions $action -parent $id -conditions $eval
return
}


set when "Before Action is Executed"
if {$eval && ![$action checkConditions $when]} {
debug "Skipping action group $id - [$id title] - conditions failed"
return
}

set when "Before Next Action is Executed"
while {1} {
::InstallJammer::ExecuteActions $action -parent $id -conditions $eval
if {!$eval || [$action checkConditions $when]} { break }
}
}

proc ::InstallJammer::actions::ExecuteExternalProgram {obj} {
global conf
global info

set id [$obj id]

$obj properties props -subst {ConsoleTitle}

set resultVarName [::InstallJammer::SubstText $props(ResultVirtualText)]
set statusVarName [::InstallJammer::SubstText $props(StatusVirtualText)]

set resultVar ::conf(ExternalResult)
if {[string length $resultVarName]} { set resultVar ::info($resultVarName) }

set statusVar ::conf(ExternalStatus)
if {[string length $statusVarName]} { set statusVar ::info($statusVarName) }

set $statusVar 0
set $resultVar ""

::InstallJammer::UpdateWidgets -update 1

set workdir [::InstallJammer::SubstText $props(WorkingDirectory)]
if {$workdir ne "" && [file exists $workdir]} {
debug "Changing to working directory $workdir"
set pwd [pwd]
cd $workdir
}

set cmdline $props(ProgramCommandLine)

if {$props(ShowProgressiveOutput)} {
debug "Executing with progressive output"

set proc   ::ReadOutput${id}
set watch  $props(WatchProgressiveOutput)
set widget $props(ProgressiveOutputWidget)
set widget [::InstallAPI::GetWidgetPath -widget $widget]

if {!$info(GuiMode) || ![winfo exists $widget]
|| [winfo class $widget] ne "Text"} {
set widget ""
} else {
if {$props(ClearProgressiveWidget)} { $widget delete 1.0 end }

$widget configure -maxundo 1
}

if {$watch} {
debug "Watching progressive output for special syntax."
}

proc ::CloseProgressive { fp statusVar resultVar } {
unset -nocomplain ::conf(update)
fconfigure $fp -blocking 1
if {[catch { close $fp } error]} {
if {[lindex $::errorCode 0] eq "CHILDSTATUS"} {
set $statusVar [lindex $::errorCode 2]
} else {
set $statusVar 1
}

set $resultVar $error
} else {
set $statusVar 0
}
}

proc $proc { fp statusVar resultVar widget watch } {
set ::conf(update) 0
if {[llength $watch]} {
gets $fp data

if {[fblocked $fp]} { return }

if {$::conf(windows)} {
set data [string map [list \r ""] $data]
}

if {[eof $fp]} {
CloseProgressive $fp $statusVar $resultVar
return
}

lassign $watch pattern var
set matches [regexp -inline -- $pattern $data]
set len [llength $matches]
if {$len == 1 || $len == 2} {
set val [lindex $matches end]
} elseif {$len == 3} {
set var [lindex $matches 1]
set val [lindex $matches 2]
}

if {$len && $var ne ""} {
set ::info($var) [::InstallJammer::SubstText $val]
::InstallJammer::UpdateWidgets
return
}

append data \n
} else {
set data [read $fp]

if {$::conf(windows)} {
set data [string map [list \r ""] $data]
}

if {[eof $fp]} {
CloseProgressive $fp $statusVar $resultVar
return
}
}

set data [::InstallJammer::SubstText $data]

append $resultVar $data

if {$::info(ConsoleMode)} {
puts -nonewline stdout $data
flush stdout
} elseif {$widget ne ""} {
set auto [expr {[lindex [$widget yview] 1] == 1}]

$widget configure -state normal
$widget insert end $data
$widget configure -state disabled

if {$auto} { $widget yview moveto 1.0 }

update idletasks
}
}

set cmd [::InstallJammer::SubstForPipe $cmdline]

if {$props(IncludeStderr)} { lappend cmd "2>@1" }

debug "Executing Command Line: $cmd"

if {[catch { open "|$cmd" } fp]} {
set $statusVar 1
set $resultVar $fp
if {[lindex $::errorCode 0] eq "CHILDSTATUS"} {
set $statusVar [lindex $::errorCode 2]
}

return -code error [set $resultVar]
} else {
if {$watch} {
debug "Watching progressive output for matches"
set watch [list $props(WatchRegularExpression)  $props(WatchVirtualText)]
} else {
set watch ""
}

fconfigure $fp -buffering none -blocking 0 -translation lf
fileevent $fp readable  [list $proc $fp $statusVar $resultVar $widget $watch]

if {$props(WaitForProgram)} { vwait $statusVar }
}
} else {
set cmd [::InstallJammer::SubstForPipe $cmdline]

if {$props(ExecuteInConsole)} {
debug "Executing in console"

if {$conf(windows)} {
set cmd [linsert $cmd 0 $::env(COMSPEC) /c]
} else {
set title Console
if {$props(ConsoleTitle) ne ""} {
set title $props(ConsoleTitle)
}

set konsole   0
set gnometerm 0
set desktop   [::InstallJammer::GetDesktopEnvironment]

if {$desktop eq "KDE" && [auto_execok konsole] ne ""} {
set konsole 1
set term konsole
} elseif {$desktop eq "Gnome"
&& [auto_execok gnome-terminal] ne ""} {
set gnometerm 1
set term gnome-terminal
} elseif {[info exists ::env(COLORTERM)]} {
set term $::env(COLORTERM)
} elseif {[info exists ::env(TERM)]} {
set term $::env(TERM)
} else {
set term xterm
}

if {[auto_execok $term] eq ""} {
return -code error "Execute External Program failled: Cannot execute program in console because a suitable terminal program could not be found."
}

set cmd [join $cmd]
set tmpfile [::InstallJammer::TmpFile].sh
set fp [open $tmpfile w 00755]
puts $fp "#!/bin/sh"
puts $fp $cmd
close $fp

if {$props(ExecuteAsRoot) && !$info(UserIsRoot)} {
set sutmpfile [::InstallJammer::TmpFile].sh
set fp [open $sutmpfile w 00755]
puts $fp "#!/bin/sh"
puts $fp "echo [sub "<%PromptForRootText%>"]"
puts $fp "su -c '$tmpfile'"
close $fp
set tmpfile $sutmpfile
}
set cmd $tmpfile

if {$gnometerm} {
set cmd [list $term -t $title -e $cmd]
} else {
set cmd [list $term -e $cmd]
}
}

if {!$props(WaitForProgram)} { lappend cmd & }

debug "Executing Command Line: $cmd"

if {[catch { eval exec $cmd } $resultVar]} {
debug "Error while executing: [set $resultVar]"

set $statusVar 1
if {[lindex $::errorCode 0] eq "CHILDSTATUS"} {
set $statusVar [lindex $::errorCode 2]
}
}
} elseif {$props(ExecuteAsRoot) && !$info(UserIsRoot)
&& !$conf(windows)} {
debug "Executing as root"
set cmd [::InstallJammer::SubstForPipe $cmdline]

if {$props(IncludeStderr)} { lappend cmd "2>@1" }

debug "Executing Command Line: $cmd"
::InstallJammer::ExecAsRoot $cmd -wait $props(WaitForProgram)
} else {
if {$props(IncludeStderr)} { lappend cmd "2>@1" }

if {!$props(WaitForProgram)} { lappend cmd & }

debug "Executing Command Line: $cmd"
if {[catch { eval exec $cmd } $resultVar]} {
debug "Error while executing: [set $resultVar]"

set $statusVar 1
if {[lindex $::errorCode 0] eq "CHILDSTATUS"} {
set $statusVar [lindex $::errorCode 2]
}
}
}
}

::InstallJammer::UpdateWidgets -updateidletasks 1

if {[info exists pwd]} { cd $pwd }
}

proc ::InstallJammer::actions::Exit {obj} {
$obj properties props -subst 1

lappend opts -exittype [string tolower $props(ExitType)]
if {$props(ExitCode) ne ""} { lappend opts -exitcode $props(ExitCode) }

eval ::InstallAPI::Exit $opts
}

proc ::InstallJammer::conditions::FileExistsCondition {obj} {
$obj properties props

debug "Checking to see if $props(Filename) $props(Operator)"

set file [::InstallJammer::SubstText $props(Filename)]

if {$props(Operator) eq "exists"} {
return [file exists $file]
} else {
return [expr {![file exists $file]}]
}
}

proc ::InstallJammer::conditions::FilePermissionCondition {obj} {
global conf
global info

$obj properties props

if {[string match "can*create" $props(Permission)]} {
debug "Checking to see if we $props(Permission) $props(Filename)"
} else {
debug "Checking to see if $props(Filename) $props(Permission)"
}

set res  0
set file [::InstallJammer::SubstText $props(Filename)]
switch -glob -- $props(Permission) {
"is*readable" {
set res [file readable $file]
}

"is*writable" {
set res [::InstallJammer::DirIsWritable $file]
}

"can*create" {
set info(Dir) [file nativename $file]
while {[llength [file split $info(Dir)]]} {
if {[file exists $info(Dir)]} {
set res [::InstallJammer::DirIsWritable $info(Dir)]
break
}

set dir [file dirname $info(Dir)]

if {$dir eq $info(Dir)} { break }

set info(Dir) $dir
}
}
}

if {[string match "*not*" $props(Permission)]} { set res [expr {!$res}] }
return $res
}

proc ::InstallJammer::actions::InstallDesktopShortcut {obj} {
global conf

set allusers [::InstallJammer::SubstText [$obj get InstallForAllUsers]]

if {$conf(windows)} {
$obj set ShortcutDirectory <%DESKTOP%>

if {[string is true -strict $allusers]} {
$obj set ShortcutDirectory <%COMMON_DESKTOP%>
}

::InstallJammer::actions::InstallWindowsShortcut $obj
} else {
$obj set ShortcutLocation Desktop
::InstallJammer::actions::InstallUNIXShortcut $obj
}
}

proc ::InstallJammer::actions::InstallProgramFolderShortcut {obj} {
global conf

set allusers [::InstallJammer::SubstText [$obj get InstallForAllUsers]]

if {$conf(windows)} {
set folder [$obj get ProgramFolderName]

$obj set ShortcutDirectory "<%PROGRAMS%>/$folder"

if {[string is true -strict $allusers]} {
$obj set ShortcutDirectory "<%COMMON_PROGRAMS%>/$folder"
}

::InstallJammer::actions::InstallWindowsShortcut $obj
} else {
$obj set ShortcutLocation "Program Folder"
::InstallJammer::actions::InstallUNIXShortcut $obj
}
}

proc ::InstallJammer::actions::InstallSelectedFiles {obj} {
global info
global conf

update

if {[string is true -strict $info(Testing)]} { return }

set setups [SetupTypes children]

if {![llength $setups]} { return }

set setuptype [::InstallJammer::FindObjByName $info(InstallType) $setups]

if {$setuptype eq ""} {
return -code error "Install Selected Files failed: could not find current Setup Type in list of available Setup Types"
}

set conf(stop)  [::InstallJammer::TmpDir .stop]
set conf(pause) [::InstallJammer::TmpDir .pause]

set id     [$obj id]
set parent [$obj parent]

set conf(InstallID) $parent

set total 0

set info(FileBeingInstalled)  ""
set info(GroupBeingInstalled) ""

set info(Status) "<%InstallPrepareText%>"

set groups [list]
foreach component [$setuptype get Components] {
if {![$component active]} {
debug "Skipping component $component - [$component name] - component is inactive" $component
continue
}

if {[info exists done($component)]} { continue }
set done($component) 1

foreach filegroup [$component get FileGroups] {
if {![$filegroup active]} {
debug "Skipping file group $filegroup - [$filegroup name] - filegroup is inactive" $component
continue
}

if {[info exists done($filegroup)]} { continue }
set done($filegroup) 1

lappend groups $filegroup

if {$::verbose} {
debug "Adding file group [$filegroup name] for installation..."
}

foreach file [$filegroup children] {
if {![$file active]} {
debug "Skipping file $file - [$file name] - file is inactive" $component
continue
}

if {[info exists done($file)]} { continue }
set done($file) 1

set total [expr {wide($total) + [$file size]}]

if {$::verbose} {
debug "Adding file [$file name] for installation..."
}

lappend files($filegroup) $file
}
}
}

if {![llength $groups]} {
set info(InstallFinished) 1
return
}

set info(TotalSize) $total

if {$info(InstallHasSolidArchives) && !$info(SolidArchivesExtracted)} {
::InstallJammer::UnpackSolidArchives 0
set info(InstallPercentComplete) 0
set info(Status) "<%InstallPrepareText%>"
}

set conf(InstallLog) [file join $info(InstallDir) install.log]

set unpackBin    [::installkit::base]
set unpackInf    [::InstallJammer::BuildUnpackInfo $groups files]
set unpackScript [::InstallJammer::BuildUnpack]

set info(Installing)     1
set info(InstallErrors)  ""
set info(InstallStarted) 1

set conf(LastPercent)          0
set conf(UpdateFileText)       [$obj get UpdateFileText]
set conf(UpdateFilePercent)    [$obj get UpdateFilePercentage]
set conf(directoryPermissions) {}
set conf(ShowConsoleProgress)  [$obj get ShowConsoleProgress]

if {!$info(GuiMode)} {
set conf(UpdateFileText)       0
set conf(UpdateFilePercentage) 0
}

if {$conf(UpdateFileText)} {
set info(Status) "<%FileBeingInstalledText%>"
} else {
set info(Status) "<%GroupBeingInstalledText%>"
}

if {[threaded]} {
set tid [installkit::newThread thread::wait]
thread::errorproc ::InstallJammer::HandleThreadError

set conf(UnpackThread) $tid
thread::send $tid [list set ::argv [list $unpackInf]]
thread::send -async $tid [list source $unpackScript]
} else {
set cmd "|[list $unpackBin] [list $unpackScript] -- [list $unpackInf]"
set conf(UnpackBin) $unpackBin
set conf(UnpackFp)  [open $cmd]

fconfigure $conf(UnpackFp) -blocking 0
fileevent  $conf(UnpackFp) readable  [list ::InstallJammer::ReadUnpack $parent]
}

vwait ::info(Installing)

set info(Installing)      0
set info(InstallFinished) 1

if {$info(InstallErrors) ne ""} {
set info(InstallStopped) 1
if {![$obj get IgnoreErrors]} {
::InstallAPI::ErrorMessage -subst 1 -message "<%InstallErrorText%>"
}
}

if {$info(InstallStopped)} { return }

if {$conf(windows)} {
set conf(UpdateWindowsRegistry) 1
}

if {$conf(rollback) && $info(InstallStarted)} {
set info(Status)  "<%CleanupInstallText%>"

foreach {dir perms} $conf(directoryPermissions) {
::InstallJammer::SetPermissions $dir $perms
}

foreach file $conf(rollbackFiles) {
set roll [::InstallJammer::RollbackName $file]
if {[file exists $roll]} { file delete -force $roll }
}
}

set info(FileBeingInstalled)  ""
set info(GroupBeingInstalled) ""
}

proc ::InstallJammer::actions::InstallUNIXShortcut {obj} {
global conf
global info

if {![string match "Linux*" $info(Platform)]
&& ![string match "FreeBSD*" $info(Platform)]} { return }

$obj properties props -subst 1

if {$props(ShortcutLocation) eq "Directory"} {
set file [file join $props(ShortcutDirectory) $props(ShortcutName)]

if {![file exists $props(ShortcutDirectory)]} {
::InstallJammer::CreateDir $props(ShortcutDirectory)
}

::InstallJammer::LogFile $file
} else {
if {$props(FileName) eq ""} {
return -code error "File Name property must not be empty"
}

set file [::InstallJammer::TmpDir $props(FileName)]
}

if {![string match *.desktop $file]} { append file .desktop }

set fp [open $file w]

puts $fp {[Desktop Entry]}
puts $fp "Version=1.0"
puts $fp "Type=$props(ShortcutType)"
puts $fp "Name=$props(ShortcutName)"

if {$props(TargetFileName) ne ""} {
if {$props(ShortcutType) eq "Link"} {
set target $props(TargetFileName)
if {![regexp {[a-z]+://} $target]} { set target "file://$target" }
puts $fp "URL=$target"
} else {
set target $props(TargetFileName)
if {[string first " " $target] > -1} { set target \"$target\" }
if {[info exists props(CommandLineArguments)]} {
append target " $props(CommandLineArguments)"
}
puts $fp "Exec=$target"
}
}

if {$props(IconPath) ne ""}  {
puts $fp "Icon=$props(IconPath)"
}

if {$props(AdditionalArguments) ne ""} {
puts $fp $props(AdditionalArguments)
}

close $fp

if {$props(ShortcutLocation) eq "Desktop"} {
catch { exec xdg-desktop-icon install --novendor $file }
set tail [file tail $file]
::InstallJammer::InstallLog [list :XDGRESOURCE desktop $tail]
} elseif {$props(ShortcutLocation) eq "Program Folder"} {
set files [list]
foreach folder [file split $props(ProgramFolderName)] {
set uuid    $props(VendorID)-[join $folder ""]
set dirfile [::InstallJammer::TmpDir $uuid.directory]

if {![file exists $dirfile]} {
set fp [open $dirfile w]
puts $fp {[Desktop Entry]}
puts $fp "Version=1.0"
puts $fp "Type=Directory"
puts $fp "Name=$folder"
close $fp
}

lappend files $dirfile
}

if {![llength $files]
&& ![regexp {Categories\s*=} $props(AdditionalArguments)]} {
return -code error "You must specify Program Folder Name or include Categories in the Additional Arguments"
}

lappend files $file

set mode user
if {$info(UserIsRoot)} { set mode system }
catch {
eval exec xdg-desktop-menu install --mode $mode --novendor $files
}

foreach file $files {
lappend logfiles [file tail $file]
}

::InstallJammer::InstallLog [list :XDGRESOURCE menu $logfiles $mode]
}

set conf(RestartGnomePanel) 1
}

proc ::InstallJammer::actions::InstallUninstaller {obj} {
global info
global conf

$obj properties props -subst 1

set info(Status) [$obj get Message]

set uninstallBin [file join $props(UninstallDirectory)  $props(UninstallFilename)]

set conf(uninstall)   $uninstallBin
set info(Uninstaller) $uninstallBin

if {[file exists $uninstallBin]} {

set tmp [::InstallJammer::TmpDir]
set dir [::InstallJammer::TmpMount]

if {![catch { installkit::Mount $uninstallBin $dir } error]} {
foreach pattern {*.info *.log} {
foreach file [glob -nocomplain -dir $dir $pattern] {
file copy -force $file $tmp
}
}

installkit::Unmount $dir
}
}

::InstallJammer::CreateDir [file dirname $uninstallBin]

set arrays {
info
::InstallJammer::Properties
::InstallJammer::languagecodes
}

cd [::InstallJammer::TmpDir]
set uninstall uninstall.tcl
set main uninstallMain.tcl

set fp [open_text $uninstall w -translation lf -encoding utf-8]
puts $fp "namespace eval ::InstallAPI {}"
puts $fp "namespace eval ::InstallJammer {}"

puts $fp "set conf(version) [list $conf(version)]"

puts $fp "set info(Uninstaller) [list $info(Uninstaller)]"

foreach array $arrays {
puts $fp "array set $array [list [array get $array]]"
}

set filedata [array get ::InstallJammer::files gui.tcl]
if {!$conf(windows)} {
eval lappend filedata [array get ::InstallJammer::files console.tcl]
}

puts $fp "array set ::InstallJammer::files [list $filedata]"

foreach file {common.tcl uninstall.tcl} {
puts $fp $::InstallJammer::files($file)
}

close $fp

set opts [list -noinstall -o $uninstallBin -w [::installkit::base]]

if {$conf(windows)} {
set desc "Uninstall <%AppName%> <%Version%>"
lappend opts -filedescription [::InstallJammer::SubstText $desc]
}

set dirs [glob -nocomplain -type d -tails -dir [file join $conf(vfs) lib] *]
set rem  [list installkit itcl tcl tk thread tile]
set dirs [eval lremove [list $dirs] $rem]

foreach dir $dirs {
lappend opts -package [file join $conf(vfs) lib $dir]
}

lappend opts -catalog [file join $conf(vfs) catalogs messages]

set fp [open $main w]
puts $fp {encoding system utf-8}
puts $fp {source [file join $::installkit::root uninstall.tcl]}
close $fp

eval ::InstallJammer::Wrap $opts [list $main $uninstall]

::InstallJammer::SetPermissions $uninstallBin 00755

return 1
}

proc ::InstallJammer::actions::InstallWindowsShortcut {obj} {
global conf

if {!$conf(windows)} { return }

$obj properties props -subst 1

set a(path) $props(TargetFileName)
if {![regexp {[a-zA-Z0-9]+://} $a(path)]} {
set a(path) [file nativename $a(path)]
}

if {$props(WorkingDirectory) ne ""} {
set a(work) $props(WorkingDirectory)
}

if {$props(IconPath) ne ""} {
set a(icon) $props(IconPath)
set a(idx) $props(IconPathIndex)
}

if {$props(CommandLineArguments) ne ""} {
set a(args) $props(CommandLineArguments)
}

set a(show) $props(WindowState)

set linkPath [file join $props(ShortcutDirectory) $props(ShortcutName)]
if {![string match *.lnk $linkPath]} { append linkPath .lnk }

set dir [file dirname $linkPath]
if {![file exists $dir]} { ::InstallJammer::CreateDir $dir }

if {$conf(twapi)} {
if {$a(path) eq ""} { set a(path) "C:/" }
set args [list $linkPath -path $a(path) -showcmd $a(show)]
if {[info exists a(args)]} { lappend args -args $a(args) }
if {[info exists a(work)]} { lappend args -workdir $a(work) }
if {$props(Description) ne ""} {
lappend args -desc $props(Description)
}
if {[info exists a(icon)]} {
lappend args -iconpath $a(icon) -iconindex $a(idx)
}
debug "Creating shortcut $linkPath with these options: $args"
eval twapi::write_shortcut $args
} else {
set args [list $linkPath -objectpath $a(path) -showcommand $a(show)]
if {[info exists a(args)]} { lappend args -arguments $a(args) }
if {[info exists a(work)]} { lappend args -workingdirectory $a(work) }
if {[info exists a(icon)]} { lappend args -icon $a(icon) $a(idx) }
debug "Creating shortcut $linkPath with these options: $args"
eval ::installkit::Windows::createShortcut $args
}
::InstallJammer::LogFile $linkPath
}

proc ::InstallJammer::actions::ModifyWidget {obj} {
global conf
global info

variable hidden

set id     [$obj id]
set parent [$obj parent]

if {![$parent ispane]} {
set parent $info(CurrentPane)
}

$obj properties props

if {![string length $props(Widget)]} { return }

set allArgs   {}
set labelArgs {}

if {$props(Text) ne ""}  {
lappend labelArgs -text $props(Text)
}

if {$props(State) ne "" && $props(State) ne "hidden"} {
lappend allArgs -state $props(State)
}

set widgets [split $props(Widget) \;]

for {set i 0} {$i < [llength $widgets]} {incr i} {
set name [string trim [lindex $widgets $i]]
set name [::InstallJammer::ID $name]
set w [join $name ""]
set widget $w

set button 0
if {[lsearch -exact $conf(ButtonWidgets) $widget] > -1} {
set button 1
set w [string tolower [string map {Button ""} $widget]]
}

if {$button} {
set w [$info(Wizard) widget get $w]
} else {
set w [$parent widget get $widget]
}

if {$w eq ""} {
return -code error "bad widget \"$name\""
}

if {$props(Text) ne ""} {
::InstallJammer::SetVirtualText all $parent $widget $props(Text)
}

set class [winfo class $w]
if {$class eq "Frame" || $class eq "TFrame"} {
foreach child [winfo children $w] {
set class [winfo class $child]
if {$class eq "Label" || $class eq "TLabel"} {
eval [list $child configure] $labelArgs
}
eval [list $child configure] $allArgs
}
} else {
if {$class eq "Text"} {
eval [list $w configure] $allArgs
if {[llength $labelArgs]} {
set state [$w cget -state]
$w configure -state normal
$w delete 1.0
$w insert end $props(Text)
$w configure -state $state
}
} else {
eval [list $w configure] $allArgs $labelArgs
}
}

if {$props(State) eq "hidden" && ![info exists hidden($w)]} {
set manager [winfo manager $w]
set options [$manager info $w]
set hidden($w) [concat $manager configure $w $options]
$manager forget $w
} elseif {$props(State) eq "normal" && [info exists hidden($w)]} {
eval $hidden($w)
unset hidden($w)
}
}

if {$props(Text) ne ""} {
::InstallJammer::UpdateWidgets -buttons 1 -updateidletasks 1
}
}

proc ::InstallJammer::actions::MoveForward {obj} {
global conf
global info

set next [$info(Wizard) step next]

if {$next eq ""} {
debug "No more panes left to move forward... exiting"
::InstallAPI::Exit
} else {
debug "Moving forward to $next"
set conf(moveToPane) "next"
}
}

proc ::InstallJammer::conditions::ObjectTestCondition {obj} {
$obj properties props

$obj get ObjectID oid
set id [::InstallJammer::ID [::InstallJammer::SubstText $oid]]

if {$id eq ""} {
return -code error "Object is Active condition failed: invalid object '$oid'"
}

debug "Checking to see if object $oid $props(Operator)"

set exists [::InstallJammer::ObjExists $id]

if {$props(Operator) eq "exists"} {
return $exists
}

if {$props(Operator) eq "does not exist"} {
return [expr {!$exists}]
}

if {!$exists} {
debug "Object $oid does not exist.  Cannot check if it $props(Operator)"
return 0
}

if {$props(Operator) eq "is active"} {
return [$id active]
}

if {$props(Operator) eq "is not active"} {
return [expr {![$id active]}]
}
}

proc ::InstallJammer::actions::PopulateComponents {obj} {
global conf
global info

set step [$obj parent]

set tree [$step widget get ComponentTree]
set text [$step widget get DescriptionText]

if {[lsearch -exact $conf(ComponentTrees) $tree] < 0} {
lappend conf(ComponentTrees) $tree
}

$tree clear

set setuptype $info(InstallTypeID)

set new 0
if {![info exists conf(PopulatedSetupType)]
|| $conf(PopulatedSetupType) ne $setuptype} {
set new 1
array unset ::InstallJammer::Components $tree,*
}

set conf(PopulatedSetupType) $setuptype

foreach id [$setuptype get Components] {
if {![$id get ShowComponent]} { continue }

set parent [$id parent]
set group  [$id get ComponentGroup]
if {$parent eq "Components"} { set parent root }

if {![$tree exists $parent]} { continue }

set varName ::InstallJammer::Components($tree,$id)
if {$group ne ""} {
set varName ::InstallJammer::Components($tree,$group)
if {![info exists $varName]} { set $varName "" }
}

set checked  [string is true [$id get Checked]]
set required [$id get RequiredComponent]

if {$required} { set checked 1 }

if {$new} { $id active $checked }

set text [::InstallAPI::GetDisplayText -object $id]

if {![$id get Selectable]} {
$tree insert end $parent $id -text $text -type none -open 1  -command [list ::InstallJammer::ToggleComponent %W $step %n]
} elseif {$group eq ""} {
if {$new} { set $varName $checked }
$tree insert end $parent $id -text $text -type checkbutton  -command [list ::InstallJammer::ToggleComponent %W $step %n]  -variable $varName -open 1
} else {
$tree insert end $parent $id -text $text -type radiobutton  -command [list ::InstallJammer::ToggleComponent %W $step %n]  -variable $varName -value $id -open 1
lappend ::InstallJammer::Components($tree,$group,others) $id

if {$new && $checked} { set $varName $id }
}

if {$required} { $tree itemconfigure $id -state disabled }
}

bind $tree <<TreeSelect>> [list ::InstallJammer::SelectComponent $step]

$tree selection set [lindex [$tree nodes root] 0]
::InstallJammer::SelectComponent $step
}

proc ::InstallJammer::actions::PopulateSetupTypes {obj} {
global conf
global info

set step [$obj parent]

set text    [$step widget get DescriptionText]
set listbox [$step widget get SetupTypeListBox]

if {[lsearch -exact $conf(SetupTypeTrees) $listbox] < 0} {
lappend conf(SetupTypeTrees) $listbox
}

$listbox clear

foreach id [SetupTypes children] {
if {![$id active] || ![$id get ShowSetupType]} { continue }

set text [::InstallAPI::GetDisplayText -object $id]
$listbox insert end $id -text $text -data [$id name]
if {[$id name] eq $info(InstallType)} {
::InstallJammer::SelectSetupType $id
}
}

bind $listbox <<ListboxSelect>> {
::InstallJammer::SelectSetupType [%W selection get]
}
}

proc ::InstallJammer::conditions::ScriptCondition {obj} {
return [::InstallJammer::EvalCondition [$obj get Script]]
}

proc ::InstallJammer::conditions::StringEqualCondition {obj} {
$obj properties props

debug "Checking to see if $props(String1) $props(Operator) $props(String2)"

set string1 [::InstallJammer::SubstText $props(String1)]
set string2 [::InstallJammer::SubstText $props(String2)]

set cmd [list string equal]
if {!$props(MatchCase)} { lappend cmd -nocase }
lappend cmd $string1 $string2

if {$props(Operator) eq "equals"} {
return [eval $cmd]
} else {
return [expr {![eval $cmd]}]
}
}

proc ::InstallJammer::conditions::StringIsCondition {obj} {
$obj properties props

debug "Checking to see if $props(String) is $props(Operator)"

set string [::InstallJammer::SubstText $props(String)]

if {$props(Operator) eq "empty"} {
return [expr {[string trim $string] eq ""}]
} elseif {$props(Operator) eq "not empty"} {
return [expr {[string trim $string] ne ""}]
} else {
return [string is $props(Operator) -strict $string]
}
}

proc ::InstallJammer::actions::TextWindow {obj} {
global info

if {!$info(GuiMode)} { return }

set wizard [::InstallJammer::Wizard]

set id [$obj id]

$id window .[$id name]
set top [$id window]

$obj properties props -subst {Font}

toplevel     $top
wm withdraw  $top
wm title     $top [::InstallJammer::GetText $id Title]
wm transient $top [::InstallJammer::TransientParent]
wm geometry  $top $props(Width)x$props(Height)

grid rowconfigure    $top 1 -weight 1
grid columnconfigure $top 0 -weight 1

if {$props(GrabFocus)} {
::InstallJammer::Grab $top
bind $top <Destroy> [list ::InstallJammer::Grab release $top]
}

::InstallJammer::PlaceWindow $id -width $props(Width) -height $props(Height)

if {[string length [::InstallJammer::GetText $id Caption]]} {
label $top.caption -anchor w
grid $top.caption -row 0 -column 0 -padx 5 -pady [list 5 10] -sticky w
$id widget set Caption -widget $top.caption
}

text $top.message -bg #FFFFFF -bd 2 -relief sunken -wrap $props(TextWrap)  -yscrollcommand [list $top.vs set] -xscrollcommand [list $top.hs set]

if {$props(Font) ne ""} {
$top.message configure -font $props(Font)
}

grid $top.message -row 1 -column 0 -padx [list 5 0] -sticky news
$id widget set Message -widget $top.message

ttk::scrollbar $top.vs -command [list $top.message yview]
grid $top.vs -row 1 -column 1 -sticky ns -padx [list 0 5]

ttk::scrollbar $top.hs -command [list $top.message xview] -orient horizontal
grid $top.hs -row 2 -column 0 -sticky ew -padx [list 5 0] -pady [list 0 5]

set width [string length [::InstallJammer::GetText $id CloseButton]]
if {$width < 12} { set width 12 }

ttk::button $top.close -width $width -command [list destroy $top]
grid $top.close -row 3 -column 0 -padx 5 -pady 5 -sticky e -columnspan 2
$id widget set CloseButton -widget $top.close

set file [::InstallJammer::SubstText $props(TextFile)]
if {[file exists $file]} {
$id set Message,subst 0
::InstallJammer::SetVirtualText $info(Language)  $id Message [read_file $file]
}

::InstallJammer::UpdateWidgets -step $id -updateidletasks 1

focus $top.message

wm deiconify $top

if {$props(WaitOnWindow)} { tkwait window $top }
}

proc ::InstallJammer::actions::WriteTextToFile {obj} {
global info

$obj properties props -subst 1

set mode w
if {$props(FileOpenAction) eq "Append to file"} { set mode a }

set translation auto
if {$props(LineFeed) eq "Unix"} {
set translation lf
} elseif {$props(LineFeed) eq "Windows"} {
set translation crlf
}

foreach file [split $props(Files) \;] {
set file [string trim $file]
if {[file pathtype $file] eq "relative"} {
set file [file join $info(InstallDir) $file]
}

set dir [file dirname $file]
if {![file exists $dir]} {
if {$props(AddToUninstall)} {
::InstallJammer::CreateDir $dir
} else {
file mkdir $dir
}
}

set data [::InstallJammer::GetText [$obj id] TextToWrite]

set fp [open $file $mode]
fconfigure $fp -translation $translation
if {$props(Encoding) ne ""} {
fconfigure $fp -encoding $props(Encoding)
}

if {$props(AppendNewline)} {
puts $fp $data
} else {
puts -nonewline $fp $data
}

close $fp

if {$props(AddToUninstall)} { ::InstallJammer::LogFile $file }
}
}
} unpack.tcl {
if {[info exists ::InstallJammer]} { return }

if {[threaded]} {
proc output { line } {
thread::send $::parentThread [list ::InstallJammer::UnpackOutput $line]
}
} else {
proc output {string} {
global conf

catch { puts $conf(runlogFp) $string }
puts stdout $string

catch { flush $conf(runlogFp) }
flush stdout
}
}

proc ::InstallJammer::InstallFiles {} {
global conf
global info
global files
global groups

set conf(unpackTotal) 0

::InstallJammer::CreateDir $info(InstallDir)

foreach group $groups {
set name [::InstallAPI::GetDisplayText -object $group]
output [list :GROUP $name [$group directory]]

$group install

if {![info exists files($group)]} { continue }

foreach file $files($group) {
output [list :FILE [$file destfile] [$file version]]
if {![$file install]} { return }
}
}
}

proc ::InstallJammer::IncrProgress { bytes } {
global conf
global info

if {$info(TotalSize) == 0} {
output ":PERCENT 100"
return
}

incr0 conf(unpackLeft) -$bytes
incr0 conf(unpackTotal) $bytes
incr0 conf(unpackSoFar) $bytes

if {$info(TotalSize) > 0} {
set x [expr round(($conf(unpackTotal) * wide(100.0))/$info(TotalSize))]
if {$x != $conf(lastPercent)} {
output ":PERCENT $x"
set conf(lastPercent) $x
}
}

}

proc ::InstallJammer::unpack { src dest {permissions ""} } {
global conf
global info

if {![PauseCheck]} { return }

if {$conf(rollback) && [file exists $dest]} {
output [list :ROLLBACK $dest]
::InstallJammer::SaveForRollback $dest
}

if {$permissions eq ""} { set permissions 0666 }

set fin [open $src r]
if {[catch {open $dest w $permissions} fout]} {
close $fin
return -code error $fout
}

set intrans  binary
set outtrans binary
if {[info exists conf(eol,[file extension $dest])]} {
set trans $conf(eol,[file extension $dest])
if {[llength $trans] == 2} {
set intrans  [lindex $trans 0]
set outtrans [lindex $trans 1]
} else {
set outtrans [lindex $trans 0]
}
}

fconfigure $fin  -translation $intrans  -buffersize $conf(chunk)
fconfigure $fout -translation $outtrans -buffersize $conf(chunk)

set conf(unpackLeft)  $info(FileSize)
set conf(unpackDone)  0
set conf(unpackSoFar) 0
set conf(unpackFin)   $fin
set conf(unpackFout)  $fout
set conf(lastPercent) 0

::InstallJammer::unpackfile $fin $fout 0

if {!$info(InstallStopped)} {
vwait ::conf(unpackDone)
}

return $dest
}

proc ::InstallJammer::unpackfile { in out bytes {error ""} } {
global conf

if {![PauseCheck]} {
set error "Install Stopped"
}

::InstallJammer::IncrProgress $bytes

if {$error ne "" || $conf(unpackLeft) <= 0 || [eof $in]} {
close $in
close $out
set conf(unpackDone) $conf(unpackTotal)
} else {
set size $conf(chunk)
if {$size > $conf(unpackLeft)} { set size $conf(unpackLeft) }
::fcopy $in $out -size $size -command [lrange [info level 0] 0 2]
}
}

proc ::InstallJammer::InstallLog { string } {
output [list :LOG $string]
}

proc ::InstallJammer::exit {} {
global info
global conf

if {![threaded]} {
::InstallJammer::WriteDoneFile $info(Temp)

catch { close $conf(runlogFp) }
catch { close $conf(unpackFin)  }
catch { close $conf(unpackFout) }

::exit
}

output ":PERCENT 100"
output ":DONE"
}

proc ::InstallJammer::UnpackMain {} {
global conf
global info

catch { wm withdraw . }

::InstallJammer::CommonInit

set conf(pwd) [file dirname [info nameofexe]]

if {![threaded]} { set info(Temp) $conf(pwd) }

uplevel #0 [list source -encoding utf-8 [lindex $::argv end]]

set conf(stop)        [TmpDir .stop]
set conf(pause)       [TmpDir .pause]
set conf(chunk)       [expr {64 * 1024}]
set conf(lastPercent) 0

::InstallJammer::InitSetup
::InstallJammer::InitFiles
::InstallJammer::UpdateFiles

if {![threaded]} {
set conf(vfs) /installkitunpackvfs
::installkit::Mount $info(installer) $conf(vfs)
set conf(runlogFp) [open [TmpDir run.log] w]

if {$info(InstallHasSolidArchives)} {
foreach file [glob -nocomplain -dir [TmpDir] solid.*] {
installkit::Mount $file $conf(vfs)
}
}

::InstallJammer::MountSetupArchives
}

set conf(rollback) [string match "*Rollback*" $info(CancelledInstallAction)]

if {$conf(Wow64Disabled)} {
installkit::Windows::disableWow64FsRedirection
}

if {[info exists info(InstallPassword)] && $info(InstallPassword) ne ""} {
::InstallAPI::SetInstallPassword -password [sub $info(InstallPassword)]
}

::InstallJammer::InstallFiles

::InstallJammer::exit
}

::InstallJammer::UnpackMain
}}
::InstallJammer::SourceCachedFile common.tcl

proc ::ThemeInit {} {
variable info

Wizard $info(Wizard)  -raisecommand [list RaiseStep %W %S]  -width [::InstallJammer::SubstText "<%WizardWidth%>"]  -height [::InstallJammer::SubstText "<%WizardHeight%>"]  -title [::InstallJammer::SubstText "<%InstallTitleText%>"]  -separatortext [::InstallJammer::SubstText "<%SeparatorText%>"]

if {$::tcl_platform(platform) eq "unix"} {
$info(Wizard) configure -bg [style configure . -background]
}
}


InstallType ::Common
InstallType ::Standard
InstallType ::Default
InstallType ::Console
InstallType ::Silent
InstallType ::ActionGroups
InstallComponent 0C00B011-E6E6-45F0-988A-0E4F3A7CFAEA -setup Install -type actiongroup -title {Setup Actions} -alias {Setup Actions} -active Yes -parent ActionGroups
InstallComponent 53A5ED00-3B96-409A-8BD3-FF90DC6A236E -setup Install -type actiongroup -title {Startup Actions} -alias {Startup Actions} -active Yes -parent ActionGroups
InstallComponent B8788952-C1D3-4C1B-977C-B66BACB06EBA -setup Install -type action -conditions {D94AC272-9E75-4338-B6E0-A3A9D3EFD838 3B154EDD-CDCE-4F32-9C1B-F65597824199} -title Exit -component Exit -active Yes -parent 53A5ED00-3B96-409A-8BD3-FF90DC6A236E
Condition D94AC272-9E75-4338-B6E0-A3A9D3EFD838 -active Yes -parent B8788952-C1D3-4C1B-977C-B66BACB06EBA -title {String Is Condition} -component StringIsCondition -TreeObject::id D94AC272-9E75-4338-B6E0-A3A9D3EFD838
Condition 3B154EDD-CDCE-4F32-9C1B-F65597824199 -active Yes -parent B8788952-C1D3-4C1B-977C-B66BACB06EBA -title {Ask Yes or No} -component AskYesOrNo -TreeObject::id 3B154EDD-CDCE-4F32-9C1B-F65597824199
InstallComponent FDF685FD-6987-4870-8AE2-E6E2B2B04E4B -setup Install -type action -title {Create Install Panes} -component CreateInstallPanes -active Yes -parent 53A5ED00-3B96-409A-8BD3-FF90DC6A236E
InstallComponent 9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2 -setup Install -type actiongroup -title {Install Actions} -alias {Install Actions} -active Yes -parent ActionGroups
InstallComponent F0AB0978-2913-406A-AA05-8444A744A0A6 -setup Install -type action -title {Install Selected Files} -component InstallSelectedFiles -active Yes -parent 9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2
InstallComponent 2995F1E8-9123-4C17-A819-5536E6E83ABD -setup Install -type action -conditions 0DC6D281-6A64-4464-8A8E-64917B16A4F2 -title {Install Uninstaller} -component InstallUninstaller -active Yes -parent 9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2
Condition 0DC6D281-6A64-4464-8A8E-64917B16A4F2 -active Yes -parent 2995F1E8-9123-4C17-A819-5536E6E83ABD -title {String Is Condition} -component StringIsCondition -TreeObject::id 0DC6D281-6A64-4464-8A8E-64917B16A4F2
InstallComponent FE0EF106-EE02-41E3-B3E6-EB3E3A6BC93C -setup Install -type actiongroup -conditions 44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E -title {Install Papilio Drivers Actions} -alias {Install Papilio Drivers Actions} -active Yes -parent 9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2
Condition 44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E -active Yes -parent FE0EF106-EE02-41E3-B3E6-EB3E3A6BC93C -title {Object Test Condition} -component ObjectTestCondition -TreeObject::id 44D7C0E3-A0D0-4490-A127-B2C53E5B5A3E
InstallComponent E60273EC-A142-41FA-A49B-2C6534A62B7D -setup Install -type action -title {Install FTDI Drivers} -component ExecuteExternalProgram -alias {Install FTDI Drivers} -active Yes -parent FE0EF106-EE02-41E3-B3E6-EB3E3A6BC93C
InstallComponent 77CF837E-744A-4997-A16C-985A7E45A594 -setup Install -type actiongroup -conditions 70B6AA2F-5488-4D63-BA78-764573D99E40 -title {Install Papilio Loader Actions} -alias {Install Papilio Loader Actions} -active Yes -parent 9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2
Condition 70B6AA2F-5488-4D63-BA78-764573D99E40 -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594 -title {Object Test Condition} -component ObjectTestCondition -TreeObject::id 70B6AA2F-5488-4D63-BA78-764573D99E40
InstallComponent ADDE8DE3-F9FE-4CAB-AABA-1B6092433EA9 -setup Install -type action -title {Add Windows File Type} -component AddWindowsFileType -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594
InstallComponent 40462983-C441-43A7-9F80-4FF6363530C7 -setup Install -type action -title {Add Windows File Extension} -component AddWindowsFileExtension -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594
InstallComponent E1038B2A-A6C9-429B-88A7-360DEA5E9E58 -setup Install -type action -title {Add Windows File Command} -component AddWindowsFileCommand -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594
InstallComponent 8FF06A33-510C-4F73-954C-243D1E048A1C -setup Install -type action -title {Add Windows File Command} -component AddWindowsFileCommand -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594
InstallComponent 8BB412C6-340B-4777-9460-91C90A4461AB -setup Install -type action -title {Add Windows File Command} -component AddWindowsFileCommand -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594
InstallComponent 4E6C63E2-EC53-446E-8C3F-BE01E815CDED -setup Install -type action -conditions {47F49C3E-6656-4340-A617-57BE7170465E 3C6A6A40-F9F2-44CF-9B22-C490BD81457E} -title MakeUserModeSimple -component WriteTextToFile -alias MakeUserModeExpert -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594
Condition 47F49C3E-6656-4340-A617-57BE7170465E -active Yes -parent 4E6C63E2-EC53-446E-8C3F-BE01E815CDED -title {String Equal Condition} -component StringEqualCondition -TreeObject::id 4CC94CF8-926C-4097-BFE1-B058D9E33925
Condition 3C6A6A40-F9F2-44CF-9B22-C490BD81457E -active Yes -parent 4E6C63E2-EC53-446E-8C3F-BE01E815CDED -title {Object Test Condition} -component ObjectTestCondition -TreeObject::id 3C6A6A40-F9F2-44CF-9B22-C490BD81457E
InstallComponent 916232D2-337E-451C-A1D8-C33F5FFFE1B1 -setup Install -type action -conditions {F5991CC4-CF8C-439E-BAD9-71B40786A387 D969A91E-B7C3-48DC-AE70-76E54B3E825A} -title MakeUserModeExpert -component WriteTextToFile -alias MakeUserModeExpert -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594
Condition F5991CC4-CF8C-439E-BAD9-71B40786A387 -active Yes -parent 916232D2-337E-451C-A1D8-C33F5FFFE1B1 -title {String Equal Condition} -component StringEqualCondition -TreeObject::id 88C7EEED-0B73-44A4-BFA5-26955F66EE18
Condition D969A91E-B7C3-48DC-AE70-76E54B3E825A -active Yes -parent 916232D2-337E-451C-A1D8-C33F5FFFE1B1 -title {Object Test Condition} -component ObjectTestCondition -TreeObject::id D969A91E-B7C3-48DC-AE70-76E54B3E825A
InstallComponent B1A05AB5-2C36-48AE-ABD1-25598A617A02 -setup Install -type action -conditions {4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F EEB67E3E-293A-402F-92B8-1C935A51EB85} -title MakeDefaultWriteFPGAQuit -component AddWindowsRegistryKey -alias {MakeDefaultWriteFPGAQuit default} -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594
Condition 4A18CEA6-ED18-4DB8-ABE2-9F2E341F615F -active Yes -parent B1A05AB5-2C36-48AE-ABD1-25598A617A02 -title {String Equal Condition} -component StringEqualCondition -TreeObject::id 0D40DE13-C36F-44A2-911C-2162EA4A418F
Condition EEB67E3E-293A-402F-92B8-1C935A51EB85 -active Yes -parent B1A05AB5-2C36-48AE-ABD1-25598A617A02 -title {Object Test Condition} -component ObjectTestCondition -TreeObject::id EEB67E3E-293A-402F-92B8-1C935A51EB85
InstallComponent FD7C6529-7FB1-4694-9E2C-CC642F91BCEF -setup Install -type action -conditions {C53A6B38-F78B-4198-86CD-073DFA2715CB 23947914-B7E4-4988-BF20-F0835F76BEE6} -title MakeDefaultWriteSPIFlashQuit -component AddWindowsRegistryKey -alias {MakeDefaultWriteSPIFlashQuit default} -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594
Condition C53A6B38-F78B-4198-86CD-073DFA2715CB -active Yes -parent FD7C6529-7FB1-4694-9E2C-CC642F91BCEF -title {String Equal Condition} -component StringEqualCondition -TreeObject::id 326F0271-9C97-4040-974B-F294E80AADC6
Condition 23947914-B7E4-4988-BF20-F0835F76BEE6 -active Yes -parent FD7C6529-7FB1-4694-9E2C-CC642F91BCEF -title {Object Test Condition} -component ObjectTestCondition -TreeObject::id 23947914-B7E4-4988-BF20-F0835F76BEE6
InstallComponent 8DBB3BD6-710F-4C59-992E-4AE68D34B5EB -setup Install -type action -conditions {5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E AFE00D6D-DCCB-4103-9B0F-C8A358139934} -title MakeOpenBitfileAndWait -component AddWindowsRegistryKey -alias {MakeOpenBitfileAndWait default} -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594
Condition 5DEAECA1-C2DA-4AB6-86D8-7AD4603A6B5E -active Yes -parent 8DBB3BD6-710F-4C59-992E-4AE68D34B5EB -title {String Equal Condition} -component StringEqualCondition -TreeObject::id 21988402-90B2-434E-A495-49FC2A0EF97D
Condition AFE00D6D-DCCB-4103-9B0F-C8A358139934 -active Yes -parent 8DBB3BD6-710F-4C59-992E-4AE68D34B5EB -title {Object Test Condition} -component ObjectTestCondition -TreeObject::id AFE00D6D-DCCB-4103-9B0F-C8A358139934
InstallComponent C12BFB5E-30A3-426F-B968-78936A987445 -setup Install -type action -conditions 36B65108-42A9-48CB-8A06-1DD2FB8CF4E5 -title {Papilio Loader Program Shortcut} -component InstallProgramFolderShortcut -alias {Papilio Loader Program Shortcut} -active Yes -parent 77CF837E-744A-4997-A16C-985A7E45A594
Condition 36B65108-42A9-48CB-8A06-1DD2FB8CF4E5 -active Yes -parent C12BFB5E-30A3-426F-B968-78936A987445 -title {Object Test Condition} -component ObjectTestCondition -TreeObject::id 36B65108-42A9-48CB-8A06-1DD2FB8CF4E5
InstallComponent DC250F40-AD9D-42F4-AE7D-4942E31F1F29 -setup Install -type actiongroup -title {Install Arcade Blaster} -active Yes -parent 9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2
InstallComponent 13265F60-3204-4CB5-BFA0-02B87391452B -setup Install -type action -conditions 99158BA8-1DEE-4435-87C7-3BD2F29DE9AF -title {Arcade Blaster Program Shortcut} -component InstallProgramFolderShortcut -alias {Arcade Blaster Program Shortcut} -active Yes -parent DC250F40-AD9D-42F4-AE7D-4942E31F1F29
Condition 99158BA8-1DEE-4435-87C7-3BD2F29DE9AF -active Yes -parent 13265F60-3204-4CB5-BFA0-02B87391452B -title {Object Test Condition} -component ObjectTestCondition -TreeObject::id 36B65108-42A9-48CB-8A06-1DD2FB8CF4E5
InstallComponent 64025B8C-05BC-419D-9964-5BD7F16DDE25 -setup Install -type action -conditions 84878F75-8E75-4180-9322-C65ADBE252A9 -title {Uninstall Shortcut} -component InstallProgramFolderShortcut -active Yes -parent 9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2
Condition 84878F75-8E75-4180-9322-C65ADBE252A9 -active Yes -parent 64025B8C-05BC-419D-9964-5BD7F16DDE25 -title {String Is Condition} -component StringIsCondition -TreeObject::id 20939B04-A400-4596-86B7-F8FDB7EA544C
InstallComponent 37296288-67D4-4EC5-AD14-4AD87531451A -setup Install -type action -conditions 09BF6BC9-4178-4305-BEA8-6CC90C6ECB68 -title {Windows Uninstall Registry} -component AddWindowsUninstallEntry -active Yes -parent 9B8CA7B7-7EF4-4AB0-964A-F528F2A0D5C2
Condition 09BF6BC9-4178-4305-BEA8-6CC90C6ECB68 -active Yes -parent 37296288-67D4-4EC5-AD14-4AD87531451A -title {String Is Condition} -component StringIsCondition -TreeObject::id 09BF6BC9-4178-4305-BEA8-6CC90C6ECB68
InstallComponent FD9020C4-ED13-41E1-8AD8-0B14BC60A740 -setup Install -type actiongroup -title {Finish Actions} -alias {Finish Actions} -active Yes -parent ActionGroups
InstallComponent 616096EB-AEF0-4632-87D0-1D7B2F3BC498 -setup Install -type action -conditions {97DFB023-85C5-40E2-8796-F3457FE417E0 1C73E020-B9DB-4195-A0AF-666D2AA81FCA} -title {Install Desktop Shortcut} -component InstallDesktopShortcut -active Yes -parent FD9020C4-ED13-41E1-8AD8-0B14BC60A740
Condition 97DFB023-85C5-40E2-8796-F3457FE417E0 -active Yes -parent 616096EB-AEF0-4632-87D0-1D7B2F3BC498 -title {String Is Condition} -component StringIsCondition -TreeObject::id E53AC3CD-1974-42C1-B6E4-DD67AFE3EC99
Condition 1C73E020-B9DB-4195-A0AF-666D2AA81FCA -active Yes -parent 616096EB-AEF0-4632-87D0-1D7B2F3BC498 -title {File Exists Condition} -component FileExistsCondition -TreeObject::id C6DD0F38-0270-41D7-A86A-78EEBC9F7FF7
InstallComponent C998AA02-4300-4ACA-A960-55B58B87280C -setup Install -type action -conditions {68D41542-7529-41A1-9D67-603F04C8FF5E 5009513F-1205-4BFD-8C0E-BB2D53917533} -title {Install Quick Launch Shortcut} -component InstallWindowsShortcut -active Yes -parent FD9020C4-ED13-41E1-8AD8-0B14BC60A740
Condition 68D41542-7529-41A1-9D67-603F04C8FF5E -active Yes -parent C998AA02-4300-4ACA-A960-55B58B87280C -title {String Is Condition} -component StringIsCondition -TreeObject::id 41D81F90-A8C5-400B-A313-7AA1D0A0AF88
Condition 5009513F-1205-4BFD-8C0E-BB2D53917533 -active Yes -parent C998AA02-4300-4ACA-A960-55B58B87280C -title {File Exists Condition} -component FileExistsCondition -TreeObject::id 08B9B0B1-ABB0-463A-ABE7-9A9582BE316D
InstallComponent 85A32F95-6AEE-4C87-B4E6-8A8E538D31D4 -setup Install -type action -conditions {33087EB2-7CAB-46FF-9833-E44D5AE9CBC1 F9667A19-B7E9-4F24-9084-889AEC9B9100 44064F33-D693-4923-8936-E81B3E683581} -title {View Readme Window} -component TextWindow -active Yes -parent FD9020C4-ED13-41E1-8AD8-0B14BC60A740
Condition 33087EB2-7CAB-46FF-9833-E44D5AE9CBC1 -active Yes -parent 85A32F95-6AEE-4C87-B4E6-8A8E538D31D4 -title {String Is Condition} -component StringIsCondition -TreeObject::id C2274A7A-996C-451C-A7E0-E8EBEA1B95A1
Condition F9667A19-B7E9-4F24-9084-889AEC9B9100 -active Yes -parent 85A32F95-6AEE-4C87-B4E6-8A8E538D31D4 -title {String Is Condition} -component StringIsCondition -TreeObject::id 45D904F5-099F-4B49-BC9B-6E19EFDE3DF7
Condition 44064F33-D693-4923-8936-E81B3E683581 -active Yes -parent 85A32F95-6AEE-4C87-B4E6-8A8E538D31D4 -title {File Exists Condition} -component FileExistsCondition -TreeObject::id DA6621D7-366D-4C29-8C5E-71BCA9C04D67
InstallComponent D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6 -setup Install -type action -conditions {296FCB13-8245-4613-B076-E71607C30531 656F9803-C015-478C-AD86-764DE1565681 6B51E7EB-6B8B-429A-A161-BBFA388EF9BF} -title {Launch Application} -component ExecuteExternalProgram -active Yes -parent FD9020C4-ED13-41E1-8AD8-0B14BC60A740
Condition 296FCB13-8245-4613-B076-E71607C30531 -active Yes -parent D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6 -title {String Is Condition} -component StringIsCondition -TreeObject::id 820A49A4-D485-4D8C-BE62-FAE42EB8E07F
Condition 656F9803-C015-478C-AD86-764DE1565681 -active Yes -parent D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6 -title {String Is Condition} -component StringIsCondition -TreeObject::id 8C932A6D-24B1-4E96-9483-89B39D56C9E7
Condition 6B51E7EB-6B8B-429A-A161-BBFA388EF9BF -active Yes -parent D9F98F2B-8BAC-4121-B5EC-5C9F0D7A67D6 -title {File Exists Condition} -component FileExistsCondition -TreeObject::id C390B4EB-4249-4B39-B625-CEC7A233B5C1
InstallComponent FFA92858-5767-41B2-885E-B4EB514D796B -setup Install -type actiongroup -title {Cancel Actions} -alias {Cancel Actions} -active Yes -parent ActionGroups


if {[info exists ::InstallJammer]} { return }

proc ::InstallJammer::UpdateInstallInfo {} {
global conf
global info

set setups    [SetupTypes children]
set setuptype [::InstallJammer::FindObjByName $info(InstallType) $setups]

set total      0
set filegroups ""
set components ""
foreach component [$setuptype get Components] {
if {![$component active]} { continue }

set name [$component name]
if {[lsearch -exact $components $name] < 0} { lappend components $name }

set doSize 1
set size [$component get Size]
if {$size ne ""} {
set doSize 0
set total [expr {wide($total) + $size}]
}

foreach filegroup [$component get FileGroups] {
if {![$filegroup active]} { continue }

if {$doSize} {
set fsize [$filegroup get Size]
if {$fsize eq ""} { set fsize [$filegroup get FileSize] }

if {[string is integer -strict $fsize]} {
set total [expr {wide($total) + $fsize}]
}
}

set name [$filegroup name]
if {[lsearch -exact $filegroups $name] < 0} {
lappend filegroups $name
}
}
}

set conf(ModifySelectedComponents) 0

set info(SpaceRequired)      $total
set info(SelectedFileGroups) $filegroups
set info(SelectedComponents) $components

set conf(ModifySelectedComponents) 1

::InstallJammer::UpdateWidgets
}

proc ::InstallJammer::SelectComponent { paneId } {
global info

::InstallJammer::UpdateInstallInfo

set id   $paneId
set tree [$id widget get ComponentTree]
set text [$id widget get DescriptionText]
set node [$tree selection get]
set desc [::InstallJammer::GetText $node Description]

::InstallJammer::SetText $text $desc

::InstallJammer::SetVirtualText $info(Language) $id  [list DescriptionText $desc]
}

proc ::InstallJammer::ToggleComponent { tree id node } {
global info

if {![$node get Selectable]} { return }
if {[$node get RequiredComponent]} { return }

set type $info(InstallTypeID)

if {[$node active]} {
$node active 0

foreach component [$node children recursive] {
if {[$component get RequiredComponent]} { continue }

$component active 0
if {[$tree exists $component]} {
$tree itemconfigure $component -on 0

if {[$tree itemcget $component -type] eq "radiobutton"} {
set group [$component get ComponentGroup]
set ::InstallJammer::Components($tree,$group) ""
}
}
}
} else {
$node active 1

foreach component [$node children recursive] {
$component active 1
if {[$tree exists $component]} {
$tree itemconfigure $component -on 1

if {[$tree itemcget $component -type] eq "radiobutton"} {
set group [$component get ComponentGroup]
if {[$component get Checked]} {
set ::InstallJammer::Components($tree,$group) $component
} else {
$component active 0
}
}
}
}
}

if {[$tree itemcget $node -type] eq "radiobutton"} {
set group [$node get ComponentGroup]
foreach comp $::InstallJammer::Components($tree,$group,others) {
if {$comp ne $node} { $comp active 0 }
}
}

::InstallJammer::UpdateInstallInfo
}

proc ::InstallJammer::SelectSetupType { {node ""} } {
global info

set name $info(InstallType)
if {$node eq "" || [set name [$node name]] ne $info(InstallType)} {
set info(InstallType) $name
set obj [::InstallAPI::FindObjects -type setuptype -name $name]
if {$obj eq ""} { set obj [lindex [SetupTypes children] 0] }
::InstallAPI::SetActiveSetupType -setuptype $obj
}

if {$node ne "" && [::InstallJammer::WizardExists]} {
set id [$info(Wizard) raise]
if {$id eq ""} { return }

set text [$id widget get DescriptionText]
set list [$id widget get SetupTypeListBox]
if {$text eq "" || $list eq ""} { return }

::InstallJammer::UpdateInstallInfo

set desc [::InstallJammer::GetText $node Description]
::InstallJammer::SetText $text $desc
::InstallJammer::SetVirtualText $info(Language) $id  [list DescriptionText $desc]

$list selection set $node
}
}

proc ::InstallJammer::PopulateProgramFolders { step } {
global conf

set listbox [$step widget get ProgramFolderListBox]

if {$conf(windows)} {
set folder [list]
foreach dir {PROGRAMS COMMON_PROGRAMS} {
set dir [::InstallJammer::WindowsDir $dir]
eval lappend folders [glob -nocomplain -type d -dir $dir -tails *]
}
eval [list $listbox insert end] [lsort -dict -unique $folders]
}
}

proc ::InstallJammer::SetProgramFolder { {folder ""} } {
global conf
global info

if {![string length $folder]} {
set step $info(CurrentPane)
set listbox [$step widget get ProgramFolderListBox]
set folder  [$listbox get [$listbox curselection]]

set list [file split $info(OriginalProgramFolderName)]
if {[llength $list] > 1} {
set folder [file join $folder [lindex $list end]]
} else {
set folder [file join $folder $info(OriginalProgramFolderName)]
}
}

set info(ProgramFolderName) $folder
}

proc ::InstallJammer::ModifyProgramFolder {} {
global conf
global info

set all $info(ProgramFolderAllUsers)
if {$conf(vista)} { set all 1 }

if {!$all} {
set info(ProgramFolder) "<%PROGRAMS%>/<%ProgramFolderName%>"
} else {
set info(ProgramFolder) "<%COMMON_PROGRAMS%>/<%ProgramFolderName%>"
}
}

proc ::InstallJammer::ModifySelectedComponents {} {
global conf
global info

if {!$conf(ModifySelectedComponents)} { return }
set conf(ModifySelectedComponents) 0

set selected $info(SelectedComponents)
::InstallAPI::ComponentAPI -components all -active 0
::InstallAPI::ComponentAPI -components $selected -active 1

set conf(ModifySelectedComponents) 1
}

proc ::InstallJammer::ScrollLicenseTextBox { force args } {
global info

eval $args

if {!$force} { return }

set w   [lindex $args 0]
lassign [$w yview] y0 y1

if {$y1 == 1} {
$info(Wizard) itemconfigure next -state normal
} else {
$info(Wizard) itemconfigure next -state disabled
}
}

proc ::InstallJammer::exit { {prompt 0} } {
global conf
global info

if {$prompt} {
::InstallJammer::PauseInstall

set title   [sub "<%ExitTitle%>"]
set message [sub "<%ExitText%>"]
set ans [MessageBox -type yesno -default no  -parent [::InstallJammer::TransientParent]  -title $title -message $message]

if {$ans eq "no"} {
::InstallJammer::ContinueInstall
return
}

set id [$info(Wizard) raise]

if {$id ne ""} {
set when "After Pane is Cancelled"

::InstallJammer::ExecuteActions $id -when $when

if {![$id checkConditions $when]} { return }
}

set info(WizardCancelled) 1
}

if {$info(Installing)} {
::InstallJammer::StopInstall

vwait ::info(Installing)

if {[string match "*Continue*" $info(CancelledInstallAction)]} {
}
}

if {$info(InstallStarted)
&& $info(InstallStopped)
&& $info(CleanupCancelledInstall)} {
::InstallJammer::CleanupCancelledInstall
}

if {!$info(WizardCancelled) && ($info(WizardStarted) || !$info(GuiMode))} {
::InstallJammer::ExecuteActions "Finish Actions"

if {!$info(InstallStopped)} {
::InstallJammer::StoreVersionInfo
::InstallJammer::CreateInstallLog
::InstallJammer::CreateApplicationInstallLog

if {!$info(InstallRegistryInfo)} {
::InstallJammer::StoreLogsInUninstall
}
}

if {$info(EnableResponseFiles) && [::InstallAPI::CommandLineAPI  -do check -option save-response-file]} {
::InstallAPI::ResponseFileAPI -do write  -file $info(SaveResponseFile)
}
} else {
::InstallJammer::ExecuteActions "Cancel Actions"
}

::InstallJammer::CheckAndUpdateInstallRegistry

::InstallJammer::CommonExit

if {[string is integer -strict $conf(ExitCode)]} { ::exit $conf(ExitCode) }
::exit $info(WizardCancelled)
}

proc ::InstallJammer::UnpackOutput { line } {
global conf
global info

if {$::verbose >= 2} {
debug "Unpack Output: $line"
}

if {[catch {lindex $line 0} command]} { set command :ERROR }

switch -- $command {
":DONE" {
::InstallJammer::UnpackOutput [list :PERCENT 100]

set info(FileBeingInstalled)  ""
set info(GroupBeingInstalled) ""

set info(Status) "File installation complete..."

if {![threaded]} { catch { close $conf(UnpackFp) } }
set info(Installing) 0
}

":LOG" {
::InstallJammer::InstallLog [lindex $line 1]
}

":GROUP" {
set info(GroupBeingInstalled) [lindex $line 1]
::InstallJammer::UpdateWidgets -buttons 0 -updateidletasks 1

if {!$info(GuiMode) && !$info(SilentMode)} {
set cols [expr {$conf(ConsoleWidth) - 2}]
::InstallJammer::ConsoleClearLastLine $cols
echo <%Status%> 1
}
}

":DIR" {
set dir   [lindex $line 1]
set perms [lindex $line 2]
lappend conf(directoryPermissions) $dir $perms
}

":DISC" {
set info(RequiredDiscName) [lindex $line 1]
::InstallJammer::MessageBox -message [sub <%InsertDiscText%>]
update
::InstallJammer::ContinueInstall
}

":FILE" {
set file [lindex $line 1]
set ::conf(TMPFILE) $file
set info(FileBeingInstalled) $file
::InstallJammer::SetVersionInfo $file [lindex $line 2]
if {$conf(UpdateFileText)} {
::InstallJammer::UpdateWidgets -buttons 0 -updateidletasks 1
}

if {$::verbose == 1} {
debug "Installing $file..."
}
}

":PERCENT" {
set percent [lindex $line 1]
set info(InstallPercentComplete) $percent
if {$info(InstallPercentComplete) != $conf(LastPercent)} {
if {$info(GuiMode)} {
::InstallJammer::UpdateWidgets -buttons 0 -updateidletasks 1
} elseif {$info(ConsoleMode) && $conf(ShowConsoleProgress)} {
::InstallJammer::ConsoleProgressBar $percent
}
set conf(LastPercent) $percent
}
}

":ROLLBACK" {
lappend conf(rollbackFiles) [lindex $line 1]
}

":FILEPERCENT" {
set info(FilePercentComplete) [lindex $line 1]
if {$conf(UpdateFilePercent)} {
::InstallJammer::UpdateWidgets -buttons 0 -updateidletasks 1
}
}

default {
debug "Unpack Error: $line"
append info(InstallErrors) $line\n
}
}
}

proc ::InstallJammer::ReadUnpack { id } {
global conf

if {[gets $conf(UnpackFp) line] < 0} { set line :DONE }
::InstallJammer::UnpackOutput $line
}

proc ::InstallJammer::BuildUnpackInfo { groupList groupArray } {
global conf
global info
global versions

upvar 1 $groupArray groups

::InstallJammer::ReadVersionInfo

set unpack [TmpDir unpack.ini]

set fp [open_text $unpack w -translation lf -encoding utf-8]

set confArray [array get conf eol,*]
eval lappend confArray [array get conf Wow64Disabled]

puts $fp "namespace eval ::InstallJammer {}"
puts $fp "set info(installer) [list [info nameofexecutable]]"
puts $fp "array set conf [list $confArray]"
puts $fp "array set info [list [array get info]]"
puts $fp "set groups [list $groupList]"
puts $fp "array set files [list [array get groups]]"
puts $fp ""
puts $fp "array set versions [list [array get versions]]"

puts -nonewline $fp "array set ::InstallJammer::Properties "
puts $fp "[list [array get ::InstallJammer::Properties]]"

puts $fp "proc ::InstallJammer::UpdateFiles {} {"
if {[info exists conf(newFiles)]} {
foreach obj $conf(newFiles) {
puts $fp "File $obj [$obj serialize]"
}
unset conf(newFiles)
}
if {[info exists conf(modifiedFiles)]} {
foreach obj $conf(modifiedFiles) {
puts $fp "$obj configure [$obj serialize]"
}
unset conf(modifiedFiles)
}
puts $fp "}"

puts $fp $::InstallJammer::files(files.tcl)
puts $fp $::InstallJammer::files(setup.tcl)
puts $fp $::InstallJammer::files(components.tcl)

close $fp

return $unpack
}

proc ::InstallJammer::BuildUnpack {} {
global info
global conf

if {[info exists conf(UnpackBin)]} { return $conf(UnpackBin) }

set unpack [TmpDir unpack.tcl]
set conf(UnpackScript) $unpack

set fp [open_text $unpack w -translation lf -encoding utf-8]
puts $fp $::InstallJammer::files(common.tcl)
puts $fp $::InstallJammer::files(unpack.tcl)
close $fp

return $unpack
}

proc ::InstallJammer::CleanupCancelledInstall {} {
global conf
global info

if {$conf(TMPFILE) eq "" && ![llength $conf(LOG)]} { return }

set info(Status) "Cleaning up install..."

set dirs    {}
set files   {}
set regkeys {}
foreach line [lreverse $conf(LOG)] {
set type [lindex $line 0]
set args [lrange $line 1 end]
switch -- $type {
":FILE"	{
lappend files [lindex $args 0]
}

":DIR"	{
lappend dirs $args
}

":REGISTRY"	{
lappend regkeys $args
}
}
}

foreach file $files {
set roll [::InstallJammer::RollbackName $file]
if {[file exists $roll]} {
if {$::verbose == 1} {
debug "Rolling back file $file"
}
file rename -force $roll $file
} else {
if {$::verbose == 1} {
debug "Cleaning up file $file"
}
::InstallJammer::UninstallFile $file
}
}

if {[lsearch -exact $files $::conf(TMPFILE)] < 0} {
::InstallJammer::UninstallFile $::conf(TMPFILE)
}

foreach dir $dirs {
if {$::verbose == 1} {
debug "Cleaning up directory $dir"
}
eval ::InstallJammer::UninstallDirectory $dir
}

foreach regkey $regkeys {
if {$::verbose == 1} {
debug "Cleaning up registry key $regkey"
}
eval ::InstallJammer::UninstallRegistryKey $regkey
}
}

proc ::InstallJammer::CreateApplicationInstallLog {} {
global conf
global info

if {$info(InstallRegistryInfo)} {
set file [::InstallJammer::InstallInfoDir $info(InstallID).info]
} else {
set file [::InstallJammer::TmpDir $info(InstallID).info]
}

set fp [open_text $file w -translation lf -encoding utf-8]

set    string ""
append string "ApplicationID: <%ApplicationID%>\n"
append string "Dir:           <%InstallDir%>\n"
append string "Date:          [clock seconds]\n"
append string "User:          <%Username%>\n"
append string "RealUser:      <%RealUsername%>\n"
append string "Version:       <%InstallVersion%>\n"
append string "VersionString: <%Version%>\n"
append string "Source:        <%InstallSource%>\n"
append string "Executable:    <%Installer%>\n"
append string "Uninstaller:   <%Uninstaller%>\n"
append string "UpgradeID:     <%UpgradeApplicationID%>\n"

puts $fp [::InstallJammer::SubstText $string]

if {[info exists conf(APPLOG)]} {
foreach {var val} $conf(APPLOG) {
puts $fp "$var: $val"
}
}

close $fp
}

proc ::InstallJammer::CreateInstallLog { {file ""} } {
global conf
global info

if {$file eq ""} {
if {$info(InstallRegistryInfo)} {
set file [::InstallJammer::InstallInfoDir $info(InstallID).log]
} else {
set file [::InstallJammer::TmpDir $info(InstallID).log]
}
}

if {[catch { open_text $file w -translation lf -encoding utf-8 } fp]} {
return
}

::InstallJammer::LogFile $file

set checkRemove 0
if {[info exists conf(RemoveFromUninstall)]} {
set checkRemove 1
set pattern [join $conf(RemoveFromUninstall) |]
}

foreach line $conf(LOG) {
if {![info exists done($line)]} {
set done($line) 1

if {$checkRemove} {
set type [lindex $line 0]
set dir  [lindex $line 1]
if {($type eq ":DIR" || $type eq ":FILE")
&& [regexp $pattern $dir]} { continue }
}

puts $fp $line
}
}
close $fp
}

proc ::InstallJammer::InstallLog {string} {
lappend ::conf(LOG) $string
}

proc ::InstallJammer::LogRegistry { args } {
::InstallJammer::InstallLog [concat :REGISTRY $args]
}

proc ::InstallJammer::CheckAndUpdateInstallRegistry {} {
global conf
global info

if {[info exists conf(checkAndUpdateRegistry)]} { return }
set conf(checkAndUpdateRegistry) 1

set dir [::InstallJammer::GetInstallInfoDir]

if {[file exists [file join $dir install.log]]} {

set newid [::InstallJammer::uuid]

set file [file join $dir .installinfo]
if {[file exists $file]} {
file delete $file
}

set file [file join $dir install.log]
if {[file exists $file]} {
file rename -force $file [file join $dir $newid.log]

set file [file join $dir $newid.log]
foreach x [split [string trim [read_textfile $file]] \n] {
if {[lindex $x 0] eq ":DIR"} {
set installdir [lindex $x 1]

set info [file join $dir $newid.info]
set fp [open_text $info w -translation lf -encoding utf-8]
puts  $fp "ApplicationID: $info(ApplicationID)"
puts  $fp "Dir:           $installdir"
puts  $fp "Date:          [file mtime $file]"
close $fp
break
}
}
}
}
}

proc ::InstallJammer::ReadPreviousInstall {} {
global conf
global info

variable ::InstallJammer::PreviousInstallInfo

::InstallJammer::CheckAndUpdateInstallRegistry

::InstallAPI::ReadInstallInfo -prefix PreviousInstall  -array PreviousInstallInfo

foreach {var val} [array get PreviousInstallInfo PreviousInstall*] {
set info($var) $val
unset PreviousInstallInfo($var)
}
}

proc ::InstallJammer::StoreVersionInfo { {dir ""} {file ""} } {
global conf
global info
global versions

if {!$info(InstallVersionInfo)} { return }

if {$info(InstallRegistryInfo)} {
if {$dir eq ""} { set dir [::InstallJammer::InstallInfoDir] }
if {$file eq ""} { set file $info(InstallID).ver }
} else {
if {$dir eq ""} { set dir $info(InstallDir) }
if {$file eq ""} { set file .installinfo }
}

set file [file join $dir $file]

if {[file exists $file]} {
catch { file delete -force $file }
}

debug "Storing version file $file"
if {[catch {open_text $file w -translation lf -encoding utf-8} fp]} {
return
}

::InstallJammer::LogFile $file

foreach filename [array names versions] {
puts $fp "Ver [list $filename] $versions($filename)"
}

catch {close $fp}

if {![file exists $file] || [file size $file] == 0} {
debug "Version file failed to create."
} else {
debug "Version file created successfully."
}

if {$conf(windows)} {
file attributes $file -hidden 1
}
}

proc ::InstallJammer::ReadVersionInfo {} {
global info
global versions

set dir  [::InstallJammer::GetInstallInfoDir]
set file [file join $dir $info(InstallID).ver]
if {![file exists $file]} {
set file [file join $info(InstallDir) .installinfo]
}

if {[file exists $file]} {
set fp [open_text $file]

while {[gets $fp line] != -1} {
switch -- [lindex $line 0] {
"Ver" {
lassign $line cmd file ver
set versions($file) $ver
}
}
}

close $fp
}
}

proc ::InstallJammer::UnpackSolidProgress { in out showGui bytes {error ""} } {
global conf
global info

set top .__solidExtract

if {$error ne "" || [eof $in]} {
set conf(solidUnpackDone) 1
} else {
set conf(solidDone) [expr {$conf(solidDone) + double($bytes)}]
if {$conf(solidTotal) > 0} {
set conf(solidLeft) [expr {wide($conf(solidTotal))
- $conf(solidDone)}]
set x [expr {round(($conf(solidDone) * wide(100))
/ $conf(solidTotal))}]
if {$showGui} {
$top.p configure -value $x
wm title $top "$x% Extracting"
update
} else {
set info(InstallPercentComplete) $x
::InstallJammer::UpdateWidgets -update 1
}
}

if {$conf(solidLeft) == 0} {
set conf(solidUnpackDone) 1
return
}

set size [expr {64 * 1024}]
if {$size > $conf(solidLeft)} {
set size [expr {round($conf(solidLeft))}]
}

::fcopy $in $out -size $size -command [lrange [info level 0] 0 3]
}
}

proc ::InstallJammer::UnpackSolidArchives { {showGui 0} } {
global conf
global info

if {!$info(InstallHasSolidArchives) || $info(SolidArchivesExtracted)} {
return
}

set files [list]
set conf(solidDone)  0
set conf(solidTotal) 0
foreach file [glob -nocomplain -dir $conf(vfs) solid.*] {
lappend files $file
set conf(solidTotal) [expr {wide($conf(solidTotal))
+ [file size $file]}]
}

if {![llength $files]} { return }

if {!$info(GuiMode)} { set showGui 0 }

if {$showGui} {
set top .__solidExtract
toplevel    $top
wm withdraw $top
wm title    $top "0% Extracting"
wm geometry $top 270x60
wm protocol $top WM_DELETE_WINDOW {#}

ttk::progressbar $top.p
pack $top.p -expand 1 -fill both -padx 10 -pady 20

BWidget::place $top 270 60 center

wm deiconify $top
update

grab $top
} else {
set info(Status) "Extracting setup files..."
}

if {!$info(GuiMode) && !$info(SilentMode)} {
puts  stdout [::InstallJammer::SubstText $info(Status)]
flush stdout
}

foreach file $files {
set temp [TmpDir [file tail $file]]

set ifp [open $file]
fconfigure $ifp -translation binary

set ofp [open $temp w]
fconfigure $ofp -translation binary

::InstallJammer::UnpackSolidProgress $ifp $ofp $showGui 0

vwait ::conf(solidUnpackDone)

close $ifp
close $ofp

installkit::Mount $temp $conf(vfs)
}

if {$showGui} {
grab release $top
destroy $top
}

set info(SolidArchivesExtracted) 1
}

proc ::InstallJammer::AskUserLanguage {} {
global conf
global info

set list [::InstallJammer::GetLanguages]

if {[llength $list] < 1} { return }

set top .__askLanguage

Dialog $top -title "Language Selection" -default ok -cancel 1
wm resizable $top 0 0
wm protocol  $top WM_DELETE_WINDOW {::InstallJammer::exit 1}

set f [$top getframe]

ttk::label $f.l -text [::InstallJammer::SubstText <%SelectLanguageText%>]
pack $f.l -pady 10

ttk::combobox $f.cb -state readonly  -textvariable ::conf(Language) -values $list
pack $f.cb

$top add -name ok     -text "OK"
$top add -name cancel -text "Cancel" -command {::InstallJammer::exit 1}

foreach code [::msgcat::mcpreferences] {
set lang [::InstallJammer::GetLanguage $code]
if {$lang ne ""} {
set conf(Language) $lang
break
}
}

$top setfocus 0
if {[$top draw] == 1} {
set info(WizardCancelled) 1
::InstallJammer::exit
}

::msgcat::mclocale [::InstallJammer::GetLanguageCode $conf(Language)]
set info(Language) [::msgcat::mclocale]
}

proc ::InstallJammer::InstallMain {} {
global conf
global info

if {$info(SilentMode)} {
::InstallJammer::ExecuteActions "Startup Actions"
::InstallJammer::ExecuteActions Silent
} elseif {$info(ConsoleMode)} {
::InstallJammer::ConfigureBidiFonts
::InstallJammer::ExecuteActions "Startup Actions"
::InstallJammer::ExecuteActions Console
} else {
if {$info(AllowLanguageSelection)} {
::InstallJammer::AskUserLanguage
}

::InstallJammer::ConfigureBidiFonts

::InstallJammer::ExecuteActions "Startup Actions"

set info(WizardStarted) 1
::InstallJammer::CenterWindow $info(Wizard)
raise $info(Wizard)
::InstallJammer::Wizard next
}
}

proc ::InstallJammer::InitInstall {} {
global conf
global info

catch { wm withdraw . }

::InstallJammer::LoadTwapi

SourceCachedFile gui.tcl
SourceCachedFile setup.tcl
SourceCachedFile files.tcl
SourceCachedFile components.tcl

set info(InstallID) [::InstallJammer::uuid]

set info(RunningInstaller)   1
set info(RunningUninstaller) 0

::InstallJammer::CommonInit

array set info {
Installing             0
InstallStarted         0
InstallStopped         0
InstallFinished        0

LicenseAccepted         No
FileBeingInstalled      ""
GroupBeingInstalled     ""
InstallPercentComplete  0

PreviousInstallDir      ""
PreviousInstallCount    0
PreviousInstallExists   0

RunningInstaller        1

SolidArchivesExtracted  0
InstallHasSolidArchives 0
}

set conf(LOG)      {}
set conf(TMPFILE)  ""
set conf(mode)     "InstallMode"
set conf(rollback) [string match "*Rollback*" $info(CancelledInstallAction)]
set conf(rollbackFiles) {}

set conf(modes) "Standard Default Silent"
if {!$conf(windows)} { lappend conf(modes) "Console" }

set info(Installer)     $conf(exe)
set info(InstallSource) [file dirname $conf(exe)]

if {[llength [glob -nocomplain -dir $conf(vfs) solid.*]]} {
set info(InstallHasSolidArchives) 1
}

SafeSet info(UpgradeInstall)  [expr {[string trim $info(UpgradeApplicationID)] ne ""}]

::InstallJammer::ReadMessageCatalog messages

::InstallJammer::ParseCommandLineArguments $::argv

if {$info(GuiMode)} { ::InstallJammer::InitializeGui }

::InstallJammer::CommonPostInit

::InstallJammer::MountSetupArchives

if {$info(ExtractSolidArchivesOnStartup)} {
::InstallJammer::UnpackSolidArchives 1
}

if {$conf(windows)} {
} elseif {$conf(unix)} {
if {$info(RequireRoot) && !$info(UserIsRoot)} {
if {$info(GuiMode) && $info(PromptForRoot)} {
set msg [sub "<%PromptForAdministratorText%>"]
set cmd [concat [list [info nameofexecutable]] $::argv]
::InstallJammer::ExecAsRoot $cmd -message $msg
::exit 0
}

set title   [sub "<%RequireRootTitleText%>"]
set message [sub "<%RequireRootText%>"]
::InstallJammer::Message -title $title -message $message
::exit 1
}

variable ::InstallJammer::VirtualTextSetByCommandLine
if {$info(RootInstallDir) ne "" && $info(UserIsRoot)
&& ![info exists VirtualTextSetByCommandLine(InstallDir)]} {
set info(InstallDir) $info(RootInstallDir)
}
}

::InstallJammer::InitSetup
::InstallJammer::InitFiles

if {$conf(windows)} {
set key {HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion}
catch {
set info(UserInfoName)    [registry get $key RegisteredOwner]
set info(UserInfoCompany) [registry get $key RegisteredOrganization]
}
}

if {$conf(windows)} {
set dir [::InstallJammer::WindowsDir PROGRAM_FILES]
set info(InstallDrive) [string range $dir 0 1]
}

foreach var [list InstallDir ProgramFolderName] {
set info($var) [::InstallJammer::SubstText <%$var%>]
set info(Original$var) $info($var)
}

::InstallAPI::SetVirtualText -virtualtext ProgramFolderAllUsers  -command ::InstallJammer::ModifyProgramFolder

::InstallAPI::SetVirtualText -virtualtext SelectedComponents  -command ::InstallJammer::ModifySelectedComponents

if {$info(UpgradeInstall)} {
::InstallJammer::ReadPreviousInstall
if {[info exists info(PreviousInstallUninstaller)]} {
set info(Uninstaller) $info(PreviousInstallUninstaller)
}
}

::InstallJammer::SelectSetupType
}

::InstallJammer::InitInstall

InstallComponent 33F3321F-92D8-45A6-934E-5F3D1E4387A4 -setup Install -type pane -title {Welcome Screen} -component Welcome -active Yes -parent Standard
InstallComponent 461032D1-6639-4A6C-8348-907909276E74 -setup Install -type pane -conditions {F4D23BDB-0090-425F-A7DD-8824677B0F93 E3B634ED-9732-4E08-8198-554838386100} -title {Select Destination} -component SelectDestination -active Yes -parent Standard
Condition F4D23BDB-0090-425F-A7DD-8824677B0F93 -active Yes -parent 461032D1-6639-4A6C-8348-907909276E74 -title {Script Condition} -component ScriptCondition -TreeObject::id F4D23BDB-0090-425F-A7DD-8824677B0F93
Condition E3B634ED-9732-4E08-8198-554838386100 -active Yes -parent 461032D1-6639-4A6C-8348-907909276E74 -title {File Permission Condition} -component FilePermissionCondition -TreeObject::id E3B634ED-9732-4E08-8198-554838386100
InstallComponent 2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130 -setup Install -type pane -conditions {43AB45F2-59CF-409F-B29F-5B37036D4DFD 0F4524B3-E59B-4C77-99DC-CD2C8328E9B5} -title {Setup Type} -component SetupType -active Yes -parent Standard
Condition 43AB45F2-59CF-409F-B29F-5B37036D4DFD -active Yes -parent 2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130 -title {Script Condition} -component ScriptCondition -TreeObject::id 43AB45F2-59CF-409F-B29F-5B37036D4DFD
Condition 0F4524B3-E59B-4C77-99DC-CD2C8328E9B5 -active Yes -parent 2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130 -title {String Is Condition} -component StringIsCondition -TreeObject::id 0F4524B3-E59B-4C77-99DC-CD2C8328E9B5
InstallComponent 5D4EDFE4-66CF-4D45-9CE4-99B2F09BE3ED -setup Install -type action -title {Populate Setup Types} -component PopulateSetupTypes -active Yes -parent 2C9E1ECB-D6A4-4EB2-8D3C-77AD5294F130
InstallComponent C7F851DF-4A8A-4AF9-B383-98934210530E -setup Install -type pane -title {Choose Components} -component ChooseComponents -active Yes -parent Standard
InstallComponent FB1190F0-E47F-40E4-9618-7C3B4F712259 -setup Install -type action -title {Populate Components} -component PopulateComponents -active Yes -parent C7F851DF-4A8A-4AF9-B383-98934210530E
InstallComponent CE2C8BD4-87A9-483E-81F6-EE8AE5402128 -setup Install -type pane -title {Start Copying Files} -component StartCopyingFiles -active Yes -parent Standard
InstallComponent A583FDD4-6649-4E1B-B80E-6FA39B7679B1 -setup Install -type pane -title {Copying Files} -component CopyFiles -active Yes -parent Standard
InstallComponent 3D9B73DC-AF1B-41C5-8AA6-D3206B1AF585 -setup Install -type action -title {Disable Buttons} -component ModifyWidget -active Yes -parent A583FDD4-6649-4E1B-B80E-6FA39B7679B1
InstallComponent 087C7390-E16C-4766-A462-FB0A7008F106 -setup Install -type action -title {Install Everything} -component ExecuteAction -active Yes -parent A583FDD4-6649-4E1B-B80E-6FA39B7679B1
InstallComponent A616C2F3-F2E8-47DB-9A3B-0EB0E263A796 -setup Install -type action -title {Move Forward} -component MoveForward -active Yes -parent A583FDD4-6649-4E1B-B80E-6FA39B7679B1
InstallComponent 06282C45-3F2A-4AEC-9AD7-FD5C2D65C834 -setup Install -type pane -title {Setup Complete} -component SetupComplete -active Yes -parent Standard
InstallComponent E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE -setup Install -type pane -title {Copying Files} -component CopyFiles -active Yes -parent Default
InstallComponent 57D16797-B7BF-4992-BBE1-CFEF7B854619 -setup Install -type action -title {Disable Buttons} -component ModifyWidget -active Yes -parent E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE
InstallComponent 890977D4-0976-4EEB-B7E0-D122F2DCDDB9 -setup Install -type action -title {Install Everything} -component ExecuteAction -active Yes -parent E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE
InstallComponent 90B56616-7733-418E-961C-0E99B79AAA38 -setup Install -type action -title {Move Forward} -component MoveForward -active Yes -parent E70DF599-A7F5-438D-9D1B-C0D38AEFE8DE
InstallComponent CFAAA850-84CE-4B01-A86D-9439F92E0AA2 -setup Install -type pane -title {Setup Complete} -component SetupComplete -active Yes -parent Default
InstallComponent 6FDBEDFA-8F34-4FB3-8BF1-3F6AA3D5F12E -setup Install -type action -title {Prompt to continue installation} -component ConsoleAskYesOrNo -active Yes -parent Console
InstallComponent 33EE7DE6-731A-469A-886F-7787B3FD0737 -setup Install -type action -conditions 3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51 -title {Exit if they said no} -component Exit -active Yes -parent Console
Condition 3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51 -active Yes -parent 33EE7DE6-731A-469A-886F-7787B3FD0737 -title {String Is Condition} -component StringIsCondition -TreeObject::id 3BB77D7C-B877-40E9-BD1A-39EEB9CAEC51
InstallComponent BAAC1B65-47BF-446C-8CAD-4472338C1703 -setup Install -type action -conditions 3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3 -title {Prompt for install destination} -component ConsoleGetUserInput -active Yes -parent Console
Condition 3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3 -active Yes -parent BAAC1B65-47BF-446C-8CAD-4472338C1703 -title {File Permission Condition} -component FilePermissionCondition -TreeObject::id 3BA6C8A2-F4BC-4C4F-8866-F6C4B6613DF3
InstallComponent DB0D0511-9E5C-4F8F-A2DE-70D457543413 -setup Install -type action -title {Output Installing Message} -component ConsoleMessage -active Yes -parent Console
InstallComponent 0717F010-C12A-475F-B41B-DB8CD62B18BB -setup Install -type action -title {Install Everything} -component ExecuteAction -active Yes -parent Console
InstallComponent B0B25111-93A4-44B1-9B1B-878B8D24F4E7 -setup Install -type action -title {Output Install Complete Message} -component ConsoleMessage -active Yes -parent Console
InstallComponent D604D7F9-799C-4E6C-810D-2CE2B3B1839A -setup Install -type action -title Exit -component Exit -active Yes -parent Console
InstallComponent 882C76AA-871B-41A0-9C5A-C4EDC5393B60 -setup Install -type action -title {Install Everything} -component ExecuteAction -active Yes -parent Silent
InstallComponent A3853EA3-9E83-4544-9236-38DC5C84819D -setup Install -type action -title Exit -component Exit -active Yes -parent Silent


proc ::ThemeMain {} {
::InstallJammer::InstallMain
}

if {![info exists ::InstallJammer]} { ThemeMain }

